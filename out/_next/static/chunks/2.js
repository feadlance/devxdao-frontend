(window["webpackJsonp_N_E"] = window["webpackJsonp_N_E"] || []).push([[2],{

/***/ "./node_modules/base-x/src/index.js":
/*!******************************************!*\
  !*** ./node_modules/base-x/src/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2Jhc2UteC9zcmMvaW5kZXguanM/NDJhNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUJBQU8sQ0FBQyx3REFBYTtBQUNuQztBQUNBLCtCQUErQjtBQUMvQjtBQUNBLGlCQUFpQixxQkFBcUI7QUFDdEM7QUFDQTtBQUNBLGlCQUFpQixxQkFBcUI7QUFDdEM7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRTtBQUNoRSxvQ0FBb0M7QUFDcEMsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsNkNBQTZDO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxZQUFZLFNBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBLDhCQUE4Qiw2Q0FBNkM7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9iYXNlLXgvc3JjL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG4vLyBiYXNlLXggZW5jb2RpbmcgLyBkZWNvZGluZ1xuLy8gQ29weXJpZ2h0IChjKSAyMDE4IGJhc2UteCBjb250cmlidXRvcnNcbi8vIENvcHlyaWdodCAoYykgMjAxNC0yMDE4IFRoZSBCaXRjb2luIENvcmUgZGV2ZWxvcGVycyAoYmFzZTU4LmNwcClcbi8vIERpc3RyaWJ1dGVkIHVuZGVyIHRoZSBNSVQgc29mdHdhcmUgbGljZW5zZSwgc2VlIHRoZSBhY2NvbXBhbnlpbmdcbi8vIGZpbGUgTElDRU5TRSBvciBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocC5cbi8vIEB0cy1pZ25vcmVcbnZhciBfQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXJcbmZ1bmN0aW9uIGJhc2UgKEFMUEhBQkVUKSB7XG4gIGlmIChBTFBIQUJFVC5sZW5ndGggPj0gMjU1KSB7IHRocm93IG5ldyBUeXBlRXJyb3IoJ0FscGhhYmV0IHRvbyBsb25nJykgfVxuICB2YXIgQkFTRV9NQVAgPSBuZXcgVWludDhBcnJheSgyNTYpXG4gIGZvciAodmFyIGogPSAwOyBqIDwgQkFTRV9NQVAubGVuZ3RoOyBqKyspIHtcbiAgICBCQVNFX01BUFtqXSA9IDI1NVxuICB9XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgQUxQSEFCRVQubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgeCA9IEFMUEhBQkVULmNoYXJBdChpKVxuICAgIHZhciB4YyA9IHguY2hhckNvZGVBdCgwKVxuICAgIGlmIChCQVNFX01BUFt4Y10gIT09IDI1NSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKHggKyAnIGlzIGFtYmlndW91cycpIH1cbiAgICBCQVNFX01BUFt4Y10gPSBpXG4gIH1cbiAgdmFyIEJBU0UgPSBBTFBIQUJFVC5sZW5ndGhcbiAgdmFyIExFQURFUiA9IEFMUEhBQkVULmNoYXJBdCgwKVxuICB2YXIgRkFDVE9SID0gTWF0aC5sb2coQkFTRSkgLyBNYXRoLmxvZygyNTYpIC8vIGxvZyhCQVNFKSAvIGxvZygyNTYpLCByb3VuZGVkIHVwXG4gIHZhciBpRkFDVE9SID0gTWF0aC5sb2coMjU2KSAvIE1hdGgubG9nKEJBU0UpIC8vIGxvZygyNTYpIC8gbG9nKEJBU0UpLCByb3VuZGVkIHVwXG4gIGZ1bmN0aW9uIGVuY29kZSAoc291cmNlKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoc291cmNlKSB8fCBzb3VyY2UgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7IHNvdXJjZSA9IF9CdWZmZXIuZnJvbShzb3VyY2UpIH1cbiAgICBpZiAoIV9CdWZmZXIuaXNCdWZmZXIoc291cmNlKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBCdWZmZXInKSB9XG4gICAgaWYgKHNvdXJjZS5sZW5ndGggPT09IDApIHsgcmV0dXJuICcnIH1cbiAgICAgICAgLy8gU2tpcCAmIGNvdW50IGxlYWRpbmcgemVyb2VzLlxuICAgIHZhciB6ZXJvZXMgPSAwXG4gICAgdmFyIGxlbmd0aCA9IDBcbiAgICB2YXIgcGJlZ2luID0gMFxuICAgIHZhciBwZW5kID0gc291cmNlLmxlbmd0aFxuICAgIHdoaWxlIChwYmVnaW4gIT09IHBlbmQgJiYgc291cmNlW3BiZWdpbl0gPT09IDApIHtcbiAgICAgIHBiZWdpbisrXG4gICAgICB6ZXJvZXMrK1xuICAgIH1cbiAgICAgICAgLy8gQWxsb2NhdGUgZW5vdWdoIHNwYWNlIGluIGJpZy1lbmRpYW4gYmFzZTU4IHJlcHJlc2VudGF0aW9uLlxuICAgIHZhciBzaXplID0gKChwZW5kIC0gcGJlZ2luKSAqIGlGQUNUT1IgKyAxKSA+Pj4gMFxuICAgIHZhciBiNTggPSBuZXcgVWludDhBcnJheShzaXplKVxuICAgICAgICAvLyBQcm9jZXNzIHRoZSBieXRlcy5cbiAgICB3aGlsZSAocGJlZ2luICE9PSBwZW5kKSB7XG4gICAgICB2YXIgY2FycnkgPSBzb3VyY2VbcGJlZ2luXVxuICAgICAgICAgICAgLy8gQXBwbHkgXCJiNTggPSBiNTggKiAyNTYgKyBjaFwiLlxuICAgICAgdmFyIGkgPSAwXG4gICAgICBmb3IgKHZhciBpdDEgPSBzaXplIC0gMTsgKGNhcnJ5ICE9PSAwIHx8IGkgPCBsZW5ndGgpICYmIChpdDEgIT09IC0xKTsgaXQxLS0sIGkrKykge1xuICAgICAgICBjYXJyeSArPSAoMjU2ICogYjU4W2l0MV0pID4+PiAwXG4gICAgICAgIGI1OFtpdDFdID0gKGNhcnJ5ICUgQkFTRSkgPj4+IDBcbiAgICAgICAgY2FycnkgPSAoY2FycnkgLyBCQVNFKSA+Pj4gMFxuICAgICAgfVxuICAgICAgaWYgKGNhcnJ5ICE9PSAwKSB7IHRocm93IG5ldyBFcnJvcignTm9uLXplcm8gY2FycnknKSB9XG4gICAgICBsZW5ndGggPSBpXG4gICAgICBwYmVnaW4rK1xuICAgIH1cbiAgICAgICAgLy8gU2tpcCBsZWFkaW5nIHplcm9lcyBpbiBiYXNlNTggcmVzdWx0LlxuICAgIHZhciBpdDIgPSBzaXplIC0gbGVuZ3RoXG4gICAgd2hpbGUgKGl0MiAhPT0gc2l6ZSAmJiBiNThbaXQyXSA9PT0gMCkge1xuICAgICAgaXQyKytcbiAgICB9XG4gICAgICAgIC8vIFRyYW5zbGF0ZSB0aGUgcmVzdWx0IGludG8gYSBzdHJpbmcuXG4gICAgdmFyIHN0ciA9IExFQURFUi5yZXBlYXQoemVyb2VzKVxuICAgIGZvciAoOyBpdDIgPCBzaXplOyArK2l0MikgeyBzdHIgKz0gQUxQSEFCRVQuY2hhckF0KGI1OFtpdDJdKSB9XG4gICAgcmV0dXJuIHN0clxuICB9XG4gIGZ1bmN0aW9uIGRlY29kZVVuc2FmZSAoc291cmNlKSB7XG4gICAgaWYgKHR5cGVvZiBzb3VyY2UgIT09ICdzdHJpbmcnKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFN0cmluZycpIH1cbiAgICBpZiAoc291cmNlLmxlbmd0aCA9PT0gMCkgeyByZXR1cm4gX0J1ZmZlci5hbGxvYygwKSB9XG4gICAgdmFyIHBzeiA9IDBcbiAgICAgICAgLy8gU2tpcCBsZWFkaW5nIHNwYWNlcy5cbiAgICBpZiAoc291cmNlW3Bzel0gPT09ICcgJykgeyByZXR1cm4gfVxuICAgICAgICAvLyBTa2lwIGFuZCBjb3VudCBsZWFkaW5nICcxJ3MuXG4gICAgdmFyIHplcm9lcyA9IDBcbiAgICB2YXIgbGVuZ3RoID0gMFxuICAgIHdoaWxlIChzb3VyY2VbcHN6XSA9PT0gTEVBREVSKSB7XG4gICAgICB6ZXJvZXMrK1xuICAgICAgcHN6KytcbiAgICB9XG4gICAgICAgIC8vIEFsbG9jYXRlIGVub3VnaCBzcGFjZSBpbiBiaWctZW5kaWFuIGJhc2UyNTYgcmVwcmVzZW50YXRpb24uXG4gICAgdmFyIHNpemUgPSAoKChzb3VyY2UubGVuZ3RoIC0gcHN6KSAqIEZBQ1RPUikgKyAxKSA+Pj4gMCAvLyBsb2coNTgpIC8gbG9nKDI1NiksIHJvdW5kZWQgdXAuXG4gICAgdmFyIGIyNTYgPSBuZXcgVWludDhBcnJheShzaXplKVxuICAgICAgICAvLyBQcm9jZXNzIHRoZSBjaGFyYWN0ZXJzLlxuICAgIHdoaWxlIChzb3VyY2VbcHN6XSkge1xuICAgICAgICAgICAgLy8gRGVjb2RlIGNoYXJhY3RlclxuICAgICAgdmFyIGNhcnJ5ID0gQkFTRV9NQVBbc291cmNlLmNoYXJDb2RlQXQocHN6KV1cbiAgICAgICAgICAgIC8vIEludmFsaWQgY2hhcmFjdGVyXG4gICAgICBpZiAoY2FycnkgPT09IDI1NSkgeyByZXR1cm4gfVxuICAgICAgdmFyIGkgPSAwXG4gICAgICBmb3IgKHZhciBpdDMgPSBzaXplIC0gMTsgKGNhcnJ5ICE9PSAwIHx8IGkgPCBsZW5ndGgpICYmIChpdDMgIT09IC0xKTsgaXQzLS0sIGkrKykge1xuICAgICAgICBjYXJyeSArPSAoQkFTRSAqIGIyNTZbaXQzXSkgPj4+IDBcbiAgICAgICAgYjI1NltpdDNdID0gKGNhcnJ5ICUgMjU2KSA+Pj4gMFxuICAgICAgICBjYXJyeSA9IChjYXJyeSAvIDI1NikgPj4+IDBcbiAgICAgIH1cbiAgICAgIGlmIChjYXJyeSAhPT0gMCkgeyB0aHJvdyBuZXcgRXJyb3IoJ05vbi16ZXJvIGNhcnJ5JykgfVxuICAgICAgbGVuZ3RoID0gaVxuICAgICAgcHN6KytcbiAgICB9XG4gICAgICAgIC8vIFNraXAgdHJhaWxpbmcgc3BhY2VzLlxuICAgIGlmIChzb3VyY2VbcHN6XSA9PT0gJyAnKSB7IHJldHVybiB9XG4gICAgICAgIC8vIFNraXAgbGVhZGluZyB6ZXJvZXMgaW4gYjI1Ni5cbiAgICB2YXIgaXQ0ID0gc2l6ZSAtIGxlbmd0aFxuICAgIHdoaWxlIChpdDQgIT09IHNpemUgJiYgYjI1NltpdDRdID09PSAwKSB7XG4gICAgICBpdDQrK1xuICAgIH1cbiAgICB2YXIgdmNoID0gX0J1ZmZlci5hbGxvY1Vuc2FmZSh6ZXJvZXMgKyAoc2l6ZSAtIGl0NCkpXG4gICAgdmNoLmZpbGwoMHgwMCwgMCwgemVyb2VzKVxuICAgIHZhciBqID0gemVyb2VzXG4gICAgd2hpbGUgKGl0NCAhPT0gc2l6ZSkge1xuICAgICAgdmNoW2orK10gPSBiMjU2W2l0NCsrXVxuICAgIH1cbiAgICByZXR1cm4gdmNoXG4gIH1cbiAgZnVuY3Rpb24gZGVjb2RlIChzdHJpbmcpIHtcbiAgICB2YXIgYnVmZmVyID0gZGVjb2RlVW5zYWZlKHN0cmluZylcbiAgICBpZiAoYnVmZmVyKSB7IHJldHVybiBidWZmZXIgfVxuICAgIHRocm93IG5ldyBFcnJvcignTm9uLWJhc2UnICsgQkFTRSArICcgY2hhcmFjdGVyJylcbiAgfVxuICByZXR1cm4ge1xuICAgIGVuY29kZTogZW5jb2RlLFxuICAgIGRlY29kZVVuc2FmZTogZGVjb2RlVW5zYWZlLFxuICAgIGRlY29kZTogZGVjb2RlXG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gYmFzZVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/base-x/src/index.js\n");

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2Jhc2U2NC1qcy9pbmRleC5qcz8xZmI1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQ0FBa0MsU0FBUztBQUMzQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixTQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMENBQTBDLFVBQVU7QUFDcEQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuZXhwb3J0cy5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuZXhwb3J0cy50b0J5dGVBcnJheSA9IHRvQnl0ZUFycmF5XG5leHBvcnRzLmZyb21CeXRlQXJyYXkgPSBmcm9tQnl0ZUFycmF5XG5cbnZhciBsb29rdXAgPSBbXVxudmFyIHJldkxvb2t1cCA9IFtdXG52YXIgQXJyID0gdHlwZW9mIFVpbnQ4QXJyYXkgIT09ICd1bmRlZmluZWQnID8gVWludDhBcnJheSA6IEFycmF5XG5cbnZhciBjb2RlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nXG5mb3IgKHZhciBpID0gMCwgbGVuID0gY29kZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICBsb29rdXBbaV0gPSBjb2RlW2ldXG4gIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaVxufVxuXG4vLyBTdXBwb3J0IGRlY29kaW5nIFVSTC1zYWZlIGJhc2U2NCBzdHJpbmdzLCBhcyBOb2RlLmpzIGRvZXMuXG4vLyBTZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Jhc2U2NCNVUkxfYXBwbGljYXRpb25zXG5yZXZMb29rdXBbJy0nLmNoYXJDb2RlQXQoMCldID0gNjJcbnJldkxvb2t1cFsnXycuY2hhckNvZGVBdCgwKV0gPSA2M1xuXG5mdW5jdGlvbiBnZXRMZW5zIChiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcblxuICBpZiAobGVuICUgNCA+IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQnKVxuICB9XG5cbiAgLy8gVHJpbSBvZmYgZXh0cmEgYnl0ZXMgYWZ0ZXIgcGxhY2Vob2xkZXIgYnl0ZXMgYXJlIGZvdW5kXG4gIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2JlYXRnYW1taXQvYmFzZTY0LWpzL2lzc3Vlcy80MlxuICB2YXIgdmFsaWRMZW4gPSBiNjQuaW5kZXhPZignPScpXG4gIGlmICh2YWxpZExlbiA9PT0gLTEpIHZhbGlkTGVuID0gbGVuXG5cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IHZhbGlkTGVuID09PSBsZW5cbiAgICA/IDBcbiAgICA6IDQgLSAodmFsaWRMZW4gJSA0KVxuXG4gIHJldHVybiBbdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbl1cbn1cblxuLy8gYmFzZTY0IGlzIDQvMyArIHVwIHRvIHR3byBjaGFyYWN0ZXJzIG9mIHRoZSBvcmlnaW5hbCBkYXRhXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChiNjQpIHtcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gX2J5dGVMZW5ndGggKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikge1xuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gdG9CeXRlQXJyYXkgKGI2NCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cblxuICB2YXIgYXJyID0gbmV3IEFycihfYnl0ZUxlbmd0aChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pKVxuXG4gIHZhciBjdXJCeXRlID0gMFxuXG4gIC8vIGlmIHRoZXJlIGFyZSBwbGFjZWhvbGRlcnMsIG9ubHkgZ2V0IHVwIHRvIHRoZSBsYXN0IGNvbXBsZXRlIDQgY2hhcnNcbiAgdmFyIGxlbiA9IHBsYWNlSG9sZGVyc0xlbiA+IDBcbiAgICA/IHZhbGlkTGVuIC0gNFxuICAgIDogdmFsaWRMZW5cblxuICB2YXIgaVxuICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTgpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCAxMikgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildIDw8IDYpIHxcbiAgICAgIHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMyldXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDE2KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAyKSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA+PiA0KVxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMSkge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxMCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDQpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA+PiAyKVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBhcnJcbn1cblxuZnVuY3Rpb24gdHJpcGxldFRvQmFzZTY0IChudW0pIHtcbiAgcmV0dXJuIGxvb2t1cFtudW0gPj4gMTggJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiAxMiAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtID4+IDYgJiAweDNGXSArXG4gICAgbG9va3VwW251bSAmIDB4M0ZdXG59XG5cbmZ1bmN0aW9uIGVuY29kZUNodW5rICh1aW50OCwgc3RhcnQsIGVuZCkge1xuICB2YXIgdG1wXG4gIHZhciBvdXRwdXQgPSBbXVxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gMykge1xuICAgIHRtcCA9XG4gICAgICAoKHVpbnQ4W2ldIDw8IDE2KSAmIDB4RkYwMDAwKSArXG4gICAgICAoKHVpbnQ4W2kgKyAxXSA8PCA4KSAmIDB4RkYwMCkgK1xuICAgICAgKHVpbnQ4W2kgKyAyXSAmIDB4RkYpXG4gICAgb3V0cHV0LnB1c2godHJpcGxldFRvQmFzZTY0KHRtcCkpXG4gIH1cbiAgcmV0dXJuIG91dHB1dC5qb2luKCcnKVxufVxuXG5mdW5jdGlvbiBmcm9tQnl0ZUFycmF5ICh1aW50OCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW4gPSB1aW50OC5sZW5ndGhcbiAgdmFyIGV4dHJhQnl0ZXMgPSBsZW4gJSAzIC8vIGlmIHdlIGhhdmUgMSBieXRlIGxlZnQsIHBhZCAyIGJ5dGVzXG4gIHZhciBwYXJ0cyA9IFtdXG4gIHZhciBtYXhDaHVua0xlbmd0aCA9IDE2MzgzIC8vIG11c3QgYmUgbXVsdGlwbGUgb2YgM1xuXG4gIC8vIGdvIHRocm91Z2ggdGhlIGFycmF5IGV2ZXJ5IHRocmVlIGJ5dGVzLCB3ZSdsbCBkZWFsIHdpdGggdHJhaWxpbmcgc3R1ZmYgbGF0ZXJcbiAgZm9yICh2YXIgaSA9IDAsIGxlbjIgPSBsZW4gLSBleHRyYUJ5dGVzOyBpIDwgbGVuMjsgaSArPSBtYXhDaHVua0xlbmd0aCkge1xuICAgIHBhcnRzLnB1c2goZW5jb2RlQ2h1bmsodWludDgsIGksIChpICsgbWF4Q2h1bmtMZW5ndGgpID4gbGVuMiA/IGxlbjIgOiAoaSArIG1heENodW5rTGVuZ3RoKSkpXG4gIH1cblxuICAvLyBwYWQgdGhlIGVuZCB3aXRoIHplcm9zLCBidXQgbWFrZSBzdXJlIHRvIG5vdCBmb3JnZXQgdGhlIGV4dHJhIGJ5dGVzXG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAyXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCA0KSAmIDB4M0ZdICtcbiAgICAgICc9PSdcbiAgICApXG4gIH0gZWxzZSBpZiAoZXh0cmFCeXRlcyA9PT0gMikge1xuICAgIHRtcCA9ICh1aW50OFtsZW4gLSAyXSA8PCA4KSArIHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMTBdICtcbiAgICAgIGxvb2t1cFsodG1wID4+IDQpICYgMHgzRl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgMikgJiAweDNGXSArXG4gICAgICAnPSdcbiAgICApXG4gIH1cblxuICByZXR1cm4gcGFydHMuam9pbignJylcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/base64-js/index.js\n");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2llZWU3NTQvaW5kZXguanM/OTE1MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLFdBQVc7O0FBRW5CO0FBQ0E7QUFDQTtBQUNBLFFBQVEsV0FBVzs7QUFFbkI7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFFBQVEsV0FBVzs7QUFFbkI7QUFDQTtBQUNBLFFBQVEsVUFBVTs7QUFFbEI7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9pZWVlNzU0L2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIGllZWU3NTQuIEJTRC0zLUNsYXVzZSBMaWNlbnNlLiBGZXJvc3MgQWJvdWtoYWRpamVoIDxodHRwczovL2Zlcm9zcy5vcmcvb3BlbnNvdXJjZT4gKi9cbmV4cG9ydHMucmVhZCA9IGZ1bmN0aW9uIChidWZmZXIsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtXG4gIHZhciBlTGVuID0gKG5CeXRlcyAqIDgpIC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBuQml0cyA9IC03XG4gIHZhciBpID0gaXNMRSA/IChuQnl0ZXMgLSAxKSA6IDBcbiAgdmFyIGQgPSBpc0xFID8gLTEgOiAxXG4gIHZhciBzID0gYnVmZmVyW29mZnNldCArIGldXG5cbiAgaSArPSBkXG5cbiAgZSA9IHMgJiAoKDEgPDwgKC1uQml0cykpIC0gMSlcbiAgcyA+Pj0gKC1uQml0cylcbiAgbkJpdHMgKz0gZUxlblxuICBmb3IgKDsgbkJpdHMgPiAwOyBlID0gKGUgKiAyNTYpICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9XG5cbiAgbSA9IGUgJiAoKDEgPDwgKC1uQml0cykpIC0gMSlcbiAgZSA+Pj0gKC1uQml0cylcbiAgbkJpdHMgKz0gbUxlblxuICBmb3IgKDsgbkJpdHMgPiAwOyBtID0gKG0gKiAyNTYpICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9XG5cbiAgaWYgKGUgPT09IDApIHtcbiAgICBlID0gMSAtIGVCaWFzXG4gIH0gZWxzZSBpZiAoZSA9PT0gZU1heCkge1xuICAgIHJldHVybiBtID8gTmFOIDogKChzID8gLTEgOiAxKSAqIEluZmluaXR5KVxuICB9IGVsc2Uge1xuICAgIG0gPSBtICsgTWF0aC5wb3coMiwgbUxlbilcbiAgICBlID0gZSAtIGVCaWFzXG4gIH1cbiAgcmV0dXJuIChzID8gLTEgOiAxKSAqIG0gKiBNYXRoLnBvdygyLCBlIC0gbUxlbilcbn1cblxuZXhwb3J0cy53cml0ZSA9IGZ1bmN0aW9uIChidWZmZXIsIHZhbHVlLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbSwgY1xuICB2YXIgZUxlbiA9IChuQnl0ZXMgKiA4KSAtIG1MZW4gLSAxXG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxXG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMVxuICB2YXIgcnQgPSAobUxlbiA9PT0gMjMgPyBNYXRoLnBvdygyLCAtMjQpIC0gTWF0aC5wb3coMiwgLTc3KSA6IDApXG4gIHZhciBpID0gaXNMRSA/IDAgOiAobkJ5dGVzIC0gMSlcbiAgdmFyIGQgPSBpc0xFID8gMSA6IC0xXG4gIHZhciBzID0gdmFsdWUgPCAwIHx8ICh2YWx1ZSA9PT0gMCAmJiAxIC8gdmFsdWUgPCAwKSA/IDEgOiAwXG5cbiAgdmFsdWUgPSBNYXRoLmFicyh2YWx1ZSlcblxuICBpZiAoaXNOYU4odmFsdWUpIHx8IHZhbHVlID09PSBJbmZpbml0eSkge1xuICAgIG0gPSBpc05hTih2YWx1ZSkgPyAxIDogMFxuICAgIGUgPSBlTWF4XG4gIH0gZWxzZSB7XG4gICAgZSA9IE1hdGguZmxvb3IoTWF0aC5sb2codmFsdWUpIC8gTWF0aC5MTjIpXG4gICAgaWYgKHZhbHVlICogKGMgPSBNYXRoLnBvdygyLCAtZSkpIDwgMSkge1xuICAgICAgZS0tXG4gICAgICBjICo9IDJcbiAgICB9XG4gICAgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICB2YWx1ZSArPSBydCAvIGNcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgKz0gcnQgKiBNYXRoLnBvdygyLCAxIC0gZUJpYXMpXG4gICAgfVxuICAgIGlmICh2YWx1ZSAqIGMgPj0gMikge1xuICAgICAgZSsrXG4gICAgICBjIC89IDJcbiAgICB9XG5cbiAgICBpZiAoZSArIGVCaWFzID49IGVNYXgpIHtcbiAgICAgIG0gPSAwXG4gICAgICBlID0gZU1heFxuICAgIH0gZWxzZSBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIG0gPSAoKHZhbHVlICogYykgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gZSArIGVCaWFzXG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSB2YWx1ZSAqIE1hdGgucG93KDIsIGVCaWFzIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IDBcbiAgICB9XG4gIH1cblxuICBmb3IgKDsgbUxlbiA+PSA4OyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBtICYgMHhmZiwgaSArPSBkLCBtIC89IDI1NiwgbUxlbiAtPSA4KSB7fVxuXG4gIGUgPSAoZSA8PCBtTGVuKSB8IG1cbiAgZUxlbiArPSBtTGVuXG4gIGZvciAoOyBlTGVuID4gMDsgYnVmZmVyW29mZnNldCArIGldID0gZSAmIDB4ZmYsIGkgKz0gZCwgZSAvPSAyNTYsIGVMZW4gLT0gOCkge31cblxuICBidWZmZXJbb2Zmc2V0ICsgaSAtIGRdIHw9IHMgKiAxMjhcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ieee754/index.js\n");

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanM/ZTNkYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUI7O0FBRWpCO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9pc2FycmF5L2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/isarray/index.js\n");

/***/ }),

/***/ "./node_modules/jssha/src/sha256.js":
/*!******************************************!*\
  !*** ./node_modules/jssha/src/sha256.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*\n A JavaScript implementation of the SHA family of hashes, as\n defined in FIPS PUB 180-4 and FIPS PUB 202, as well as the corresponding\n HMAC implementation as defined in FIPS PUB 198a\n\n Copyright Brian Turek 2008-2017\n Distributed under the BSD License\n See http://caligatio.github.com/jsSHA/ for more information\n\n Several functions taken from Paul Johnston\n*/\n(function(I){function w(c,a,d){var l=0,b=[],g=0,f,n,k,e,h,q,y,p,m=!1,t=[],r=[],u,z=!1;d=d||{};f=d.encoding||\"UTF8\";u=d.numRounds||1;if(u!==parseInt(u,10)||1>u)throw Error(\"numRounds must a integer >= 1\");if(0===c.lastIndexOf(\"SHA-\",0))if(q=function(b,a){return A(b,a,c)},y=function(b,a,l,f){var g,e;if(\"SHA-224\"===c||\"SHA-256\"===c)g=(a+65>>>9<<4)+15,e=16;else throw Error(\"Unexpected error in SHA-2 implementation\");for(;b.length<=g;)b.push(0);b[a>>>5]|=128<<24-a%32;a=a+l;b[g]=a&4294967295;\nb[g-1]=a/4294967296|0;l=b.length;for(a=0;a<l;a+=e)f=A(b.slice(a,a+e),f,c);if(\"SHA-224\"===c)b=[f[0],f[1],f[2],f[3],f[4],f[5],f[6]];else if(\"SHA-256\"===c)b=f;else throw Error(\"Unexpected error in SHA-2 implementation\");return b},p=function(b){return b.slice()},\"SHA-224\"===c)h=512,e=224;else if(\"SHA-256\"===c)h=512,e=256;else throw Error(\"Chosen SHA variant is not supported\");else throw Error(\"Chosen SHA variant is not supported\");k=B(a,f);n=x(c);this.setHMACKey=function(b,a,g){var e;if(!0===m)throw Error(\"HMAC key already set\");\nif(!0===z)throw Error(\"Cannot set HMAC key after calling update\");f=(g||{}).encoding||\"UTF8\";a=B(a,f)(b);b=a.binLen;a=a.value;e=h>>>3;g=e/4-1;if(e<b/8){for(a=y(a,b,0,x(c));a.length<=g;)a.push(0);a[g]&=4294967040}else if(e>b/8){for(;a.length<=g;)a.push(0);a[g]&=4294967040}for(b=0;b<=g;b+=1)t[b]=a[b]^909522486,r[b]=a[b]^1549556828;n=q(t,n);l=h;m=!0};this.update=function(a){var c,f,e,d=0,p=h>>>5;c=k(a,b,g);a=c.binLen;f=c.value;c=a>>>5;for(e=0;e<c;e+=p)d+h<=a&&(n=q(f.slice(e,e+p),n),d+=h);l+=d;b=f.slice(d>>>\n5);g=a%h;z=!0};this.getHash=function(a,f){var d,h,k,q;if(!0===m)throw Error(\"Cannot call getHash after setting HMAC key\");k=C(f);switch(a){case \"HEX\":d=function(a){return D(a,e,k)};break;case \"B64\":d=function(a){return E(a,e,k)};break;case \"BYTES\":d=function(a){return F(a,e)};break;case \"ARRAYBUFFER\":try{h=new ArrayBuffer(0)}catch(v){throw Error(\"ARRAYBUFFER not supported by this environment\");}d=function(a){return G(a,e)};break;default:throw Error(\"format must be HEX, B64, BYTES, or ARRAYBUFFER\");\n}q=y(b.slice(),g,l,p(n));for(h=1;h<u;h+=1)q=y(q,e,0,x(c));return d(q)};this.getHMAC=function(a,f){var d,k,t,u;if(!1===m)throw Error(\"Cannot call getHMAC without first setting HMAC key\");t=C(f);switch(a){case \"HEX\":d=function(a){return D(a,e,t)};break;case \"B64\":d=function(a){return E(a,e,t)};break;case \"BYTES\":d=function(a){return F(a,e)};break;case \"ARRAYBUFFER\":try{d=new ArrayBuffer(0)}catch(v){throw Error(\"ARRAYBUFFER not supported by this environment\");}d=function(a){return G(a,e)};break;default:throw Error(\"outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER\");\n}k=y(b.slice(),g,l,p(n));u=q(r,x(c));u=y(k,e,h,u);return d(u)}}function m(){}function D(c,a,d){var l=\"\";a/=8;var b,g;for(b=0;b<a;b+=1)g=c[b>>>2]>>>8*(3+b%4*-1),l+=\"0123456789abcdef\".charAt(g>>>4&15)+\"0123456789abcdef\".charAt(g&15);return d.outputUpper?l.toUpperCase():l}function E(c,a,d){var l=\"\",b=a/8,g,f,n;for(g=0;g<b;g+=3)for(f=g+1<b?c[g+1>>>2]:0,n=g+2<b?c[g+2>>>2]:0,n=(c[g>>>2]>>>8*(3+g%4*-1)&255)<<16|(f>>>8*(3+(g+1)%4*-1)&255)<<8|n>>>8*(3+(g+2)%4*-1)&255,f=0;4>f;f+=1)8*g+6*f<=a?l+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(n>>>\n6*(3-f)&63):l+=d.b64Pad;return l}function F(c,a){var d=\"\",l=a/8,b,g;for(b=0;b<l;b+=1)g=c[b>>>2]>>>8*(3+b%4*-1)&255,d+=String.fromCharCode(g);return d}function G(c,a){var d=a/8,l,b=new ArrayBuffer(d),g;g=new Uint8Array(b);for(l=0;l<d;l+=1)g[l]=c[l>>>2]>>>8*(3+l%4*-1)&255;return b}function C(c){var a={outputUpper:!1,b64Pad:\"=\",shakeLen:-1};c=c||{};a.outputUpper=c.outputUpper||!1;!0===c.hasOwnProperty(\"b64Pad\")&&(a.b64Pad=c.b64Pad);if(\"boolean\"!==typeof a.outputUpper)throw Error(\"Invalid outputUpper formatting option\");\nif(\"string\"!==typeof a.b64Pad)throw Error(\"Invalid b64Pad formatting option\");return a}function B(c,a){var d;switch(a){case \"UTF8\":case \"UTF16BE\":case \"UTF16LE\":break;default:throw Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\");}switch(c){case \"HEX\":d=function(a,b,c){var f=a.length,d,k,e,h,q;if(0!==f%2)throw Error(\"String of HEX type must be in byte increments\");b=b||[0];c=c||0;q=c>>>3;for(d=0;d<f;d+=2){k=parseInt(a.substr(d,2),16);if(isNaN(k))throw Error(\"String of HEX type contains invalid characters\");\nh=(d>>>1)+q;for(e=h>>>2;b.length<=e;)b.push(0);b[e]|=k<<8*(3+h%4*-1)}return{value:b,binLen:4*f+c}};break;case \"TEXT\":d=function(c,b,d){var f,n,k=0,e,h,q,m,p,r;b=b||[0];d=d||0;q=d>>>3;if(\"UTF8\"===a)for(r=3,e=0;e<c.length;e+=1)for(f=c.charCodeAt(e),n=[],128>f?n.push(f):2048>f?(n.push(192|f>>>6),n.push(128|f&63)):55296>f||57344<=f?n.push(224|f>>>12,128|f>>>6&63,128|f&63):(e+=1,f=65536+((f&1023)<<10|c.charCodeAt(e)&1023),n.push(240|f>>>18,128|f>>>12&63,128|f>>>6&63,128|f&63)),h=0;h<n.length;h+=1){p=k+\nq;for(m=p>>>2;b.length<=m;)b.push(0);b[m]|=n[h]<<8*(r+p%4*-1);k+=1}else if(\"UTF16BE\"===a||\"UTF16LE\"===a)for(r=2,n=\"UTF16LE\"===a&&!0||\"UTF16LE\"!==a&&!1,e=0;e<c.length;e+=1){f=c.charCodeAt(e);!0===n&&(h=f&255,f=h<<8|f>>>8);p=k+q;for(m=p>>>2;b.length<=m;)b.push(0);b[m]|=f<<8*(r+p%4*-1);k+=2}return{value:b,binLen:8*k+d}};break;case \"B64\":d=function(a,b,c){var f=0,d,k,e,h,q,m,p;if(-1===a.search(/^[a-zA-Z0-9=+\\/]+$/))throw Error(\"Invalid character in base-64 string\");k=a.indexOf(\"=\");a=a.replace(/\\=/g,\n\"\");if(-1!==k&&k<a.length)throw Error(\"Invalid '=' found in base-64 string\");b=b||[0];c=c||0;m=c>>>3;for(k=0;k<a.length;k+=4){q=a.substr(k,4);for(e=h=0;e<q.length;e+=1)d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(q[e]),h|=d<<18-6*e;for(e=0;e<q.length-1;e+=1){p=f+m;for(d=p>>>2;b.length<=d;)b.push(0);b[d]|=(h>>>16-8*e&255)<<8*(3+p%4*-1);f+=1}}return{value:b,binLen:8*f+c}};break;case \"BYTES\":d=function(a,b,c){var d,n,k,e,h;b=b||[0];c=c||0;k=c>>>3;for(n=0;n<a.length;n+=\n1)d=a.charCodeAt(n),h=n+k,e=h>>>2,b.length<=e&&b.push(0),b[e]|=d<<8*(3+h%4*-1);return{value:b,binLen:8*a.length+c}};break;case \"ARRAYBUFFER\":try{d=new ArrayBuffer(0)}catch(l){throw Error(\"ARRAYBUFFER not supported by this environment\");}d=function(a,b,c){var d,n,k,e,h;b=b||[0];c=c||0;n=c>>>3;h=new Uint8Array(a);for(d=0;d<a.byteLength;d+=1)e=d+n,k=e>>>2,b.length<=k&&b.push(0),b[k]|=h[d]<<8*(3+e%4*-1);return{value:b,binLen:8*a.byteLength+c}};break;default:throw Error(\"format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER\");\n}return d}function r(c,a){return c>>>a|c<<32-a}function J(c,a,d){return c&a^~c&d}function K(c,a,d){return c&a^c&d^a&d}function L(c){return r(c,2)^r(c,13)^r(c,22)}function M(c){return r(c,6)^r(c,11)^r(c,25)}function N(c){return r(c,7)^r(c,18)^c>>>3}function O(c){return r(c,17)^r(c,19)^c>>>10}function P(c,a){var d=(c&65535)+(a&65535);return((c>>>16)+(a>>>16)+(d>>>16)&65535)<<16|d&65535}function Q(c,a,d,l){var b=(c&65535)+(a&65535)+(d&65535)+(l&65535);return((c>>>16)+(a>>>16)+(d>>>16)+(l>>>16)+(b>>>\n16)&65535)<<16|b&65535}function R(c,a,d,l,b){var g=(c&65535)+(a&65535)+(d&65535)+(l&65535)+(b&65535);return((c>>>16)+(a>>>16)+(d>>>16)+(l>>>16)+(b>>>16)+(g>>>16)&65535)<<16|g&65535}function x(c){var a=[],d;if(0===c.lastIndexOf(\"SHA-\",0))switch(a=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428],d=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],c){case \"SHA-224\":break;case \"SHA-256\":a=d;break;case \"SHA-384\":a=[new m,new m,\nnew m,new m,new m,new m,new m,new m];break;case \"SHA-512\":a=[new m,new m,new m,new m,new m,new m,new m,new m];break;default:throw Error(\"Unknown SHA variant\");}else throw Error(\"No SHA variants supported\");return a}function A(c,a,d){var l,b,g,f,n,k,e,h,m,r,p,w,t,x,u,z,A,B,C,D,E,F,v=[],G;if(\"SHA-224\"===d||\"SHA-256\"===d)r=64,w=1,F=Number,t=P,x=Q,u=R,z=N,A=O,B=L,C=M,E=K,D=J,G=H;else throw Error(\"Unexpected error in SHA-2 implementation\");d=a[0];l=a[1];b=a[2];g=a[3];f=a[4];n=a[5];k=a[6];e=a[7];for(p=\n0;p<r;p+=1)16>p?(m=p*w,h=c.length<=m?0:c[m],m=c.length<=m+1?0:c[m+1],v[p]=new F(h,m)):v[p]=x(A(v[p-2]),v[p-7],z(v[p-15]),v[p-16]),h=u(e,C(f),D(f,n,k),G[p],v[p]),m=t(B(d),E(d,l,b)),e=k,k=n,n=f,f=t(g,h),g=b,b=l,l=d,d=t(h,m);a[0]=t(d,a[0]);a[1]=t(l,a[1]);a[2]=t(b,a[2]);a[3]=t(g,a[3]);a[4]=t(f,a[4]);a[5]=t(n,a[5]);a[6]=t(k,a[6]);a[7]=t(e,a[7]);return a}var H;H=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,\n2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,\n2756734187,3204031479,3329325298]; true?!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){return w}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):undefined})(this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/jssha/src/sha256.js\n");

/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/buffer/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/buffer/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/node-libs-browser/node_modules/buffer/index.js\n");

/***/ }),

/***/ "./node_modules/safe-buffer/index.js":
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NhZmUtYnVmZmVyL2luZGV4LmpzPzg3MDciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyw2RUFBUTtBQUM3Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zYWZlLWJ1ZmZlci9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBzYWZlLWJ1ZmZlci4gTUlUIExpY2Vuc2UuIEZlcm9zcyBBYm91a2hhZGlqZWggPGh0dHBzOi8vZmVyb3NzLm9yZy9vcGVuc291cmNlPiAqL1xuLyogZXNsaW50LWRpc2FibGUgbm9kZS9uby1kZXByZWNhdGVkLWFwaSAqL1xudmFyIGJ1ZmZlciA9IHJlcXVpcmUoJ2J1ZmZlcicpXG52YXIgQnVmZmVyID0gYnVmZmVyLkJ1ZmZlclxuXG4vLyBhbHRlcm5hdGl2ZSB0byB1c2luZyBPYmplY3Qua2V5cyBmb3Igb2xkIGJyb3dzZXJzXG5mdW5jdGlvbiBjb3B5UHJvcHMgKHNyYywgZHN0KSB7XG4gIGZvciAodmFyIGtleSBpbiBzcmMpIHtcbiAgICBkc3Rba2V5XSA9IHNyY1trZXldXG4gIH1cbn1cbmlmIChCdWZmZXIuZnJvbSAmJiBCdWZmZXIuYWxsb2MgJiYgQnVmZmVyLmFsbG9jVW5zYWZlICYmIEJ1ZmZlci5hbGxvY1Vuc2FmZVNsb3cpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBidWZmZXJcbn0gZWxzZSB7XG4gIC8vIENvcHkgcHJvcGVydGllcyBmcm9tIHJlcXVpcmUoJ2J1ZmZlcicpXG4gIGNvcHlQcm9wcyhidWZmZXIsIGV4cG9ydHMpXG4gIGV4cG9ydHMuQnVmZmVyID0gU2FmZUJ1ZmZlclxufVxuXG5mdW5jdGlvbiBTYWZlQnVmZmVyIChhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gQnVmZmVyKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxufVxuXG5TYWZlQnVmZmVyLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoQnVmZmVyLnByb3RvdHlwZSlcblxuLy8gQ29weSBzdGF0aWMgbWV0aG9kcyBmcm9tIEJ1ZmZlclxuY29weVByb3BzKEJ1ZmZlciwgU2FmZUJ1ZmZlcilcblxuU2FmZUJ1ZmZlci5mcm9tID0gZnVuY3Rpb24gKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7XG4gIGlmICh0eXBlb2YgYXJnID09PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3Qgbm90IGJlIGEgbnVtYmVyJylcbiAgfVxuICByZXR1cm4gQnVmZmVyKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxufVxuXG5TYWZlQnVmZmVyLmFsbG9jID0gZnVuY3Rpb24gKHNpemUsIGZpbGwsIGVuY29kaW5nKSB7XG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJylcbiAgfVxuICB2YXIgYnVmID0gQnVmZmVyKHNpemUpXG4gIGlmIChmaWxsICE9PSB1bmRlZmluZWQpIHtcbiAgICBpZiAodHlwZW9mIGVuY29kaW5nID09PSAnc3RyaW5nJykge1xuICAgICAgYnVmLmZpbGwoZmlsbCwgZW5jb2RpbmcpXG4gICAgfSBlbHNlIHtcbiAgICAgIGJ1Zi5maWxsKGZpbGwpXG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGJ1Zi5maWxsKDApXG4gIH1cbiAgcmV0dXJuIGJ1ZlxufVxuXG5TYWZlQnVmZmVyLmFsbG9jVW5zYWZlID0gZnVuY3Rpb24gKHNpemUpIHtcbiAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKVxuICB9XG4gIHJldHVybiBCdWZmZXIoc2l6ZSlcbn1cblxuU2FmZUJ1ZmZlci5hbGxvY1Vuc2FmZVNsb3cgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICBpZiAodHlwZW9mIHNpemUgIT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlcicpXG4gIH1cbiAgcmV0dXJuIGJ1ZmZlci5TbG93QnVmZmVyKHNpemUpXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/safe-buffer/index.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/bitcoin_validator.js":
/*!************************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/bitcoin_validator.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var base58 = __webpack_require__(/*! ./crypto/base58 */ \"./node_modules/wallet-address-validator/src/crypto/base58.js\");\nvar segwit = __webpack_require__(/*! ./crypto/segwit_addr */ \"./node_modules/wallet-address-validator/src/crypto/segwit_addr.js\");\nvar cryptoUtils = __webpack_require__(/*! ./crypto/utils */ \"./node_modules/wallet-address-validator/src/crypto/utils.js\");\n\nvar DEFAULT_NETWORK_TYPE = 'prod';\n\nfunction getDecoded(address) {\n    try {\n        return base58.decode(address);\n    } catch (e) {\n        // if decoding fails, assume invalid address\n        return null;\n    }\n}\n\nfunction getChecksum(hashFunction, payload) {\n    // Each currency may implement different hashing algorithm\n    switch (hashFunction) {\n        case 'blake256':\n            return cryptoUtils.blake256Checksum(payload);\n            break;\n        case 'sha256':\n        default:\n            return cryptoUtils.sha256Checksum(payload);\n    }\n}\n\nfunction getAddressType(address, currency) {\n    currency = currency || {};\n    // should be 25 bytes per btc address spec and 26 decred\n    var expectedLength = currency.expectedLength || 25;\n    var hashFunction = currency.hashFunction || 'sha256';\n    var decoded = getDecoded(address);\n\n    if (decoded) {\n        var length = decoded.length;\n\n        if (length !== expectedLength) {\n            return null;\n        }\n\n        var checksum = cryptoUtils.toHex(decoded.slice(length - 4, length)),\n            body = cryptoUtils.toHex(decoded.slice(0, length - 4)),\n            goodChecksum = getChecksum(hashFunction, body);\n\n        return checksum === goodChecksum ? cryptoUtils.toHex(decoded.slice(0, expectedLength - 24)) : null;\n    }\n\n    return null;\n}\n\nfunction isValidP2PKHandP2SHAddress(address, currency, networkType) {\n    networkType = networkType || DEFAULT_NETWORK_TYPE;\n\n    var correctAddressTypes;\n    var addressType = getAddressType(address, currency);\n\n    if (addressType) {\n        if (networkType === 'prod' || networkType === 'testnet') {\n            correctAddressTypes = currency.addressTypes[networkType]\n        } else {\n            correctAddressTypes = currency.addressTypes.prod.concat(currency.addressTypes.testnet);\n        }\n\n        return correctAddressTypes.indexOf(addressType) >= 0;\n    }\n\n    return false;\n}\n\nmodule.exports = {\n    isValidAddress: function (address, currency, networkType) {\n        return isValidP2PKHandP2SHAddress(address, currency, networkType) || segwit.isValidAddress(address, currency.segwitHrp);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3dhbGxldC1hZGRyZXNzLXZhbGlkYXRvci9zcmMvYml0Y29pbl92YWxpZGF0b3IuanM/ZGMxMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhLG1CQUFPLENBQUMscUZBQWlCO0FBQ3RDLGFBQWEsbUJBQU8sQ0FBQywrRkFBc0I7QUFDM0Msa0JBQWtCLG1CQUFPLENBQUMsbUZBQWdCOztBQUUxQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2FsbGV0LWFkZHJlc3MtdmFsaWRhdG9yL3NyYy9iaXRjb2luX3ZhbGlkYXRvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlNTggPSByZXF1aXJlKCcuL2NyeXB0by9iYXNlNTgnKTtcbnZhciBzZWd3aXQgPSByZXF1aXJlKCcuL2NyeXB0by9zZWd3aXRfYWRkcicpO1xudmFyIGNyeXB0b1V0aWxzID0gcmVxdWlyZSgnLi9jcnlwdG8vdXRpbHMnKTtcblxudmFyIERFRkFVTFRfTkVUV09SS19UWVBFID0gJ3Byb2QnO1xuXG5mdW5jdGlvbiBnZXREZWNvZGVkKGFkZHJlc3MpIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gYmFzZTU4LmRlY29kZShhZGRyZXNzKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlmIGRlY29kaW5nIGZhaWxzLCBhc3N1bWUgaW52YWxpZCBhZGRyZXNzXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZ2V0Q2hlY2tzdW0oaGFzaEZ1bmN0aW9uLCBwYXlsb2FkKSB7XG4gICAgLy8gRWFjaCBjdXJyZW5jeSBtYXkgaW1wbGVtZW50IGRpZmZlcmVudCBoYXNoaW5nIGFsZ29yaXRobVxuICAgIHN3aXRjaCAoaGFzaEZ1bmN0aW9uKSB7XG4gICAgICAgIGNhc2UgJ2JsYWtlMjU2JzpcbiAgICAgICAgICAgIHJldHVybiBjcnlwdG9VdGlscy5ibGFrZTI1NkNoZWNrc3VtKHBheWxvYWQpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3NoYTI1Nic6XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gY3J5cHRvVXRpbHMuc2hhMjU2Q2hlY2tzdW0ocGF5bG9hZCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBnZXRBZGRyZXNzVHlwZShhZGRyZXNzLCBjdXJyZW5jeSkge1xuICAgIGN1cnJlbmN5ID0gY3VycmVuY3kgfHwge307XG4gICAgLy8gc2hvdWxkIGJlIDI1IGJ5dGVzIHBlciBidGMgYWRkcmVzcyBzcGVjIGFuZCAyNiBkZWNyZWRcbiAgICB2YXIgZXhwZWN0ZWRMZW5ndGggPSBjdXJyZW5jeS5leHBlY3RlZExlbmd0aCB8fCAyNTtcbiAgICB2YXIgaGFzaEZ1bmN0aW9uID0gY3VycmVuY3kuaGFzaEZ1bmN0aW9uIHx8ICdzaGEyNTYnO1xuICAgIHZhciBkZWNvZGVkID0gZ2V0RGVjb2RlZChhZGRyZXNzKTtcblxuICAgIGlmIChkZWNvZGVkKSB7XG4gICAgICAgIHZhciBsZW5ndGggPSBkZWNvZGVkLmxlbmd0aDtcblxuICAgICAgICBpZiAobGVuZ3RoICE9PSBleHBlY3RlZExlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgY2hlY2tzdW0gPSBjcnlwdG9VdGlscy50b0hleChkZWNvZGVkLnNsaWNlKGxlbmd0aCAtIDQsIGxlbmd0aCkpLFxuICAgICAgICAgICAgYm9keSA9IGNyeXB0b1V0aWxzLnRvSGV4KGRlY29kZWQuc2xpY2UoMCwgbGVuZ3RoIC0gNCkpLFxuICAgICAgICAgICAgZ29vZENoZWNrc3VtID0gZ2V0Q2hlY2tzdW0oaGFzaEZ1bmN0aW9uLCBib2R5KTtcblxuICAgICAgICByZXR1cm4gY2hlY2tzdW0gPT09IGdvb2RDaGVja3N1bSA/IGNyeXB0b1V0aWxzLnRvSGV4KGRlY29kZWQuc2xpY2UoMCwgZXhwZWN0ZWRMZW5ndGggLSAyNCkpIDogbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gaXNWYWxpZFAyUEtIYW5kUDJTSEFkZHJlc3MoYWRkcmVzcywgY3VycmVuY3ksIG5ldHdvcmtUeXBlKSB7XG4gICAgbmV0d29ya1R5cGUgPSBuZXR3b3JrVHlwZSB8fCBERUZBVUxUX05FVFdPUktfVFlQRTtcblxuICAgIHZhciBjb3JyZWN0QWRkcmVzc1R5cGVzO1xuICAgIHZhciBhZGRyZXNzVHlwZSA9IGdldEFkZHJlc3NUeXBlKGFkZHJlc3MsIGN1cnJlbmN5KTtcblxuICAgIGlmIChhZGRyZXNzVHlwZSkge1xuICAgICAgICBpZiAobmV0d29ya1R5cGUgPT09ICdwcm9kJyB8fCBuZXR3b3JrVHlwZSA9PT0gJ3Rlc3RuZXQnKSB7XG4gICAgICAgICAgICBjb3JyZWN0QWRkcmVzc1R5cGVzID0gY3VycmVuY3kuYWRkcmVzc1R5cGVzW25ldHdvcmtUeXBlXVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29ycmVjdEFkZHJlc3NUeXBlcyA9IGN1cnJlbmN5LmFkZHJlc3NUeXBlcy5wcm9kLmNvbmNhdChjdXJyZW5jeS5hZGRyZXNzVHlwZXMudGVzdG5ldCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY29ycmVjdEFkZHJlc3NUeXBlcy5pbmRleE9mKGFkZHJlc3NUeXBlKSA+PSAwO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgaXNWYWxpZEFkZHJlc3M6IGZ1bmN0aW9uIChhZGRyZXNzLCBjdXJyZW5jeSwgbmV0d29ya1R5cGUpIHtcbiAgICAgICAgcmV0dXJuIGlzVmFsaWRQMlBLSGFuZFAyU0hBZGRyZXNzKGFkZHJlc3MsIGN1cnJlbmN5LCBuZXR3b3JrVHlwZSkgfHwgc2Vnd2l0LmlzVmFsaWRBZGRyZXNzKGFkZHJlc3MsIGN1cnJlbmN5LnNlZ3dpdEhycCk7XG4gICAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/bitcoin_validator.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/crypto/base58.js":
/*!********************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/crypto/base58.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Base58 encoding/decoding\n// Originally written by Mike Hearn for BitcoinJ\n// Copyright (c) 2011 Google Inc\n// Ported to JavaScript by Stefan Thomas\n// Merged Buffer refactorings from base58-native by Stephen Pair\n// Copyright (c) 2013 BitPay Inc\n\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nvar ALPHABET_MAP = {};\nfor (var i = 0; i < ALPHABET.length; ++i) {\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n}\nvar BASE = ALPHABET.length;\n\nmodule.exports = {\n    decode: function(string) {\n        if (string.length === 0) return [];\n\n        var i, j, bytes = [0];\n        for (i = 0; i < string.length; ++i) {\n            var c = string[i];\n            if (!(c in ALPHABET_MAP)) throw new Error('Non-base58 character');\n\n            for (j = 0; j < bytes.length; ++j) bytes[j] *= BASE\n            bytes[0] += ALPHABET_MAP[c];\n\n            var carry = 0;\n            for (j = 0; j < bytes.length; ++j) {\n                bytes[j] += carry;\n                carry = bytes[j] >> 8;\n                bytes[j] &= 0xff\n            }\n\n            while (carry) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (i = 0; string[i] === '1' && i < string.length - 1; ++i){\n            bytes.push(0);\n        }\n\n        return bytes.reverse();\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3dhbGxldC1hZGRyZXNzLXZhbGlkYXRvci9zcmMvY3J5cHRvL2Jhc2U1OC5qcz9kZDk4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZUFBZSxxQkFBcUI7QUFDcEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1CQUFtQixtQkFBbUI7QUFDdEM7QUFDQTs7QUFFQSx1QkFBdUIsa0JBQWtCO0FBQ3pDOztBQUVBO0FBQ0EsdUJBQXVCLGtCQUFrQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNENBQTRDO0FBQy9EO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dhbGxldC1hZGRyZXNzLXZhbGlkYXRvci9zcmMvY3J5cHRvL2Jhc2U1OC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEJhc2U1OCBlbmNvZGluZy9kZWNvZGluZ1xuLy8gT3JpZ2luYWxseSB3cml0dGVuIGJ5IE1pa2UgSGVhcm4gZm9yIEJpdGNvaW5KXG4vLyBDb3B5cmlnaHQgKGMpIDIwMTEgR29vZ2xlIEluY1xuLy8gUG9ydGVkIHRvIEphdmFTY3JpcHQgYnkgU3RlZmFuIFRob21hc1xuLy8gTWVyZ2VkIEJ1ZmZlciByZWZhY3RvcmluZ3MgZnJvbSBiYXNlNTgtbmF0aXZlIGJ5IFN0ZXBoZW4gUGFpclxuLy8gQ29weXJpZ2h0IChjKSAyMDEzIEJpdFBheSBJbmNcblxudmFyIEFMUEhBQkVUID0gJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonO1xudmFyIEFMUEhBQkVUX01BUCA9IHt9O1xuZm9yICh2YXIgaSA9IDA7IGkgPCBBTFBIQUJFVC5sZW5ndGg7ICsraSkge1xuICAgIEFMUEhBQkVUX01BUFtBTFBIQUJFVC5jaGFyQXQoaSldID0gaTtcbn1cbnZhciBCQVNFID0gQUxQSEFCRVQubGVuZ3RoO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBkZWNvZGU6IGZ1bmN0aW9uKHN0cmluZykge1xuICAgICAgICBpZiAoc3RyaW5nLmxlbmd0aCA9PT0gMCkgcmV0dXJuIFtdO1xuXG4gICAgICAgIHZhciBpLCBqLCBieXRlcyA9IFswXTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IHN0cmluZy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgdmFyIGMgPSBzdHJpbmdbaV07XG4gICAgICAgICAgICBpZiAoIShjIGluIEFMUEhBQkVUX01BUCkpIHRocm93IG5ldyBFcnJvcignTm9uLWJhc2U1OCBjaGFyYWN0ZXInKTtcblxuICAgICAgICAgICAgZm9yIChqID0gMDsgaiA8IGJ5dGVzLmxlbmd0aDsgKytqKSBieXRlc1tqXSAqPSBCQVNFXG4gICAgICAgICAgICBieXRlc1swXSArPSBBTFBIQUJFVF9NQVBbY107XG5cbiAgICAgICAgICAgIHZhciBjYXJyeSA9IDA7XG4gICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgYnl0ZXMubGVuZ3RoOyArK2opIHtcbiAgICAgICAgICAgICAgICBieXRlc1tqXSArPSBjYXJyeTtcbiAgICAgICAgICAgICAgICBjYXJyeSA9IGJ5dGVzW2pdID4+IDg7XG4gICAgICAgICAgICAgICAgYnl0ZXNbal0gJj0gMHhmZlxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB3aGlsZSAoY2FycnkpIHtcbiAgICAgICAgICAgICAgICBieXRlcy5wdXNoKGNhcnJ5ICYgMHhmZik7XG4gICAgICAgICAgICAgICAgY2FycnkgPj49IDg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gZGVhbCB3aXRoIGxlYWRpbmcgemVyb3NcbiAgICAgICAgZm9yIChpID0gMDsgc3RyaW5nW2ldID09PSAnMScgJiYgaSA8IHN0cmluZy5sZW5ndGggLSAxOyArK2kpe1xuICAgICAgICAgICAgYnl0ZXMucHVzaCgwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBieXRlcy5yZXZlcnNlKCk7XG4gICAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/crypto/base58.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/crypto/bech32.js":
/*!********************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/crypto/bech32.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Copyright (c) 2017 Pieter Wuille\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nvar GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n\nmodule.exports = {\n  decode: decode,\n  encode: encode,\n};\n\n\nfunction polymod (values) {\n  var chk = 1;\n  for (var p = 0; p < values.length; ++p) {\n    var top = chk >> 25;\n    chk = (chk & 0x1ffffff) << 5 ^ values[p];\n    for (var i = 0; i < 5; ++i) {\n      if ((top >> i) & 1) {\n        chk ^= GENERATOR[i];\n      }\n    }\n  }\n  return chk;\n}\n\nfunction hrpExpand (hrp) {\n  var ret = [];\n  var p;\n  for (p = 0; p < hrp.length; ++p) {\n    ret.push(hrp.charCodeAt(p) >> 5);\n  }\n  ret.push(0);\n  for (p = 0; p < hrp.length; ++p) {\n    ret.push(hrp.charCodeAt(p) & 31);\n  }\n  return ret;\n}\n\nfunction verifyChecksum (hrp, data) {\n  return polymod(hrpExpand(hrp).concat(data)) === 1;\n}\n\nfunction createChecksum (hrp, data) {\n  var values = hrpExpand(hrp).concat(data).concat([0, 0, 0, 0, 0, 0]);\n  var mod = polymod(values) ^ 1;\n  var ret = [];\n  for (var p = 0; p < 6; ++p) {\n    ret.push((mod >> 5 * (5 - p)) & 31);\n  }\n  return ret;\n}\n\nfunction encode (hrp, data) {\n  var combined = data.concat(createChecksum(hrp, data));\n  var ret = hrp + '1';\n  for (var p = 0; p < combined.length; ++p) {\n    ret += CHARSET.charAt(combined[p]);\n  }\n  return ret;\n}\n\nfunction decode (bechString) {\n  var p;\n  var has_lower = false;\n  var has_upper = false;\n  for (p = 0; p < bechString.length; ++p) {\n    if (bechString.charCodeAt(p) < 33 || bechString.charCodeAt(p) > 126) {\n      return null;\n    }\n    if (bechString.charCodeAt(p) >= 97 && bechString.charCodeAt(p) <= 122) {\n        has_lower = true;\n    }\n    if (bechString.charCodeAt(p) >= 65 && bechString.charCodeAt(p) <= 90) {\n        has_upper = true;\n    }\n  }\n  if (has_lower && has_upper) {\n    return null;\n  }\n  bechString = bechString.toLowerCase();\n  var pos = bechString.lastIndexOf('1');\n  if (pos < 1 || pos + 7 > bechString.length || bechString.length > 90) {\n    return null;\n  }\n  var hrp = bechString.substring(0, pos);\n  var data = [];\n  for (p = pos + 1; p < bechString.length; ++p) {\n    var d = CHARSET.indexOf(bechString.charAt(p));\n    if (d === -1) {\n      return null;\n    }\n    data.push(d);\n  }\n  if (!verifyChecksum(hrp, data)) {\n    return null;\n  }\n  return {hrp: hrp, data: data.slice(0, data.length - 6)};\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3dhbGxldC1hZGRyZXNzLXZhbGlkYXRvci9zcmMvY3J5cHRvL2JlY2gzMi5qcz80YjIyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQSxpQkFBaUIsbUJBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxtQkFBbUIsT0FBTztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGdCQUFnQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxhQUFhLGdCQUFnQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsT0FBTztBQUN4QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIscUJBQXFCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx1QkFBdUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix1QkFBdUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dhbGxldC1hZGRyZXNzLXZhbGlkYXRvci9zcmMvY3J5cHRvL2JlY2gzMi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxNyBQaWV0ZXIgV3VpbGxlXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxudmFyIENIQVJTRVQgPSAncXB6cnk5eDhnZjJ0dmR3MHMzam41NGtoY2U2bXVhN2wnO1xudmFyIEdFTkVSQVRPUiA9IFsweDNiNmE1N2IyLCAweDI2NTA4ZTZkLCAweDFlYTExOWZhLCAweDNkNDIzM2RkLCAweDJhMTQ2MmIzXTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGRlY29kZTogZGVjb2RlLFxuICBlbmNvZGU6IGVuY29kZSxcbn07XG5cblxuZnVuY3Rpb24gcG9seW1vZCAodmFsdWVzKSB7XG4gIHZhciBjaGsgPSAxO1xuICBmb3IgKHZhciBwID0gMDsgcCA8IHZhbHVlcy5sZW5ndGg7ICsrcCkge1xuICAgIHZhciB0b3AgPSBjaGsgPj4gMjU7XG4gICAgY2hrID0gKGNoayAmIDB4MWZmZmZmZikgPDwgNSBeIHZhbHVlc1twXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDU7ICsraSkge1xuICAgICAgaWYgKCh0b3AgPj4gaSkgJiAxKSB7XG4gICAgICAgIGNoayBePSBHRU5FUkFUT1JbaV07XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBjaGs7XG59XG5cbmZ1bmN0aW9uIGhycEV4cGFuZCAoaHJwKSB7XG4gIHZhciByZXQgPSBbXTtcbiAgdmFyIHA7XG4gIGZvciAocCA9IDA7IHAgPCBocnAubGVuZ3RoOyArK3ApIHtcbiAgICByZXQucHVzaChocnAuY2hhckNvZGVBdChwKSA+PiA1KTtcbiAgfVxuICByZXQucHVzaCgwKTtcbiAgZm9yIChwID0gMDsgcCA8IGhycC5sZW5ndGg7ICsrcCkge1xuICAgIHJldC5wdXNoKGhycC5jaGFyQ29kZUF0KHApICYgMzEpO1xuICB9XG4gIHJldHVybiByZXQ7XG59XG5cbmZ1bmN0aW9uIHZlcmlmeUNoZWNrc3VtIChocnAsIGRhdGEpIHtcbiAgcmV0dXJuIHBvbHltb2QoaHJwRXhwYW5kKGhycCkuY29uY2F0KGRhdGEpKSA9PT0gMTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQ2hlY2tzdW0gKGhycCwgZGF0YSkge1xuICB2YXIgdmFsdWVzID0gaHJwRXhwYW5kKGhycCkuY29uY2F0KGRhdGEpLmNvbmNhdChbMCwgMCwgMCwgMCwgMCwgMF0pO1xuICB2YXIgbW9kID0gcG9seW1vZCh2YWx1ZXMpIF4gMTtcbiAgdmFyIHJldCA9IFtdO1xuICBmb3IgKHZhciBwID0gMDsgcCA8IDY7ICsrcCkge1xuICAgIHJldC5wdXNoKChtb2QgPj4gNSAqICg1IC0gcCkpICYgMzEpO1xuICB9XG4gIHJldHVybiByZXQ7XG59XG5cbmZ1bmN0aW9uIGVuY29kZSAoaHJwLCBkYXRhKSB7XG4gIHZhciBjb21iaW5lZCA9IGRhdGEuY29uY2F0KGNyZWF0ZUNoZWNrc3VtKGhycCwgZGF0YSkpO1xuICB2YXIgcmV0ID0gaHJwICsgJzEnO1xuICBmb3IgKHZhciBwID0gMDsgcCA8IGNvbWJpbmVkLmxlbmd0aDsgKytwKSB7XG4gICAgcmV0ICs9IENIQVJTRVQuY2hhckF0KGNvbWJpbmVkW3BdKTtcbiAgfVxuICByZXR1cm4gcmV0O1xufVxuXG5mdW5jdGlvbiBkZWNvZGUgKGJlY2hTdHJpbmcpIHtcbiAgdmFyIHA7XG4gIHZhciBoYXNfbG93ZXIgPSBmYWxzZTtcbiAgdmFyIGhhc191cHBlciA9IGZhbHNlO1xuICBmb3IgKHAgPSAwOyBwIDwgYmVjaFN0cmluZy5sZW5ndGg7ICsrcCkge1xuICAgIGlmIChiZWNoU3RyaW5nLmNoYXJDb2RlQXQocCkgPCAzMyB8fCBiZWNoU3RyaW5nLmNoYXJDb2RlQXQocCkgPiAxMjYpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBpZiAoYmVjaFN0cmluZy5jaGFyQ29kZUF0KHApID49IDk3ICYmIGJlY2hTdHJpbmcuY2hhckNvZGVBdChwKSA8PSAxMjIpIHtcbiAgICAgICAgaGFzX2xvd2VyID0gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKGJlY2hTdHJpbmcuY2hhckNvZGVBdChwKSA+PSA2NSAmJiBiZWNoU3RyaW5nLmNoYXJDb2RlQXQocCkgPD0gOTApIHtcbiAgICAgICAgaGFzX3VwcGVyID0gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgaWYgKGhhc19sb3dlciAmJiBoYXNfdXBwZXIpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBiZWNoU3RyaW5nID0gYmVjaFN0cmluZy50b0xvd2VyQ2FzZSgpO1xuICB2YXIgcG9zID0gYmVjaFN0cmluZy5sYXN0SW5kZXhPZignMScpO1xuICBpZiAocG9zIDwgMSB8fCBwb3MgKyA3ID4gYmVjaFN0cmluZy5sZW5ndGggfHwgYmVjaFN0cmluZy5sZW5ndGggPiA5MCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHZhciBocnAgPSBiZWNoU3RyaW5nLnN1YnN0cmluZygwLCBwb3MpO1xuICB2YXIgZGF0YSA9IFtdO1xuICBmb3IgKHAgPSBwb3MgKyAxOyBwIDwgYmVjaFN0cmluZy5sZW5ndGg7ICsrcCkge1xuICAgIHZhciBkID0gQ0hBUlNFVC5pbmRleE9mKGJlY2hTdHJpbmcuY2hhckF0KHApKTtcbiAgICBpZiAoZCA9PT0gLTEpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBkYXRhLnB1c2goZCk7XG4gIH1cbiAgaWYgKCF2ZXJpZnlDaGVja3N1bShocnAsIGRhdGEpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgcmV0dXJuIHtocnA6IGhycCwgZGF0YTogZGF0YS5zbGljZSgwLCBkYXRhLmxlbmd0aCAtIDYpfTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/crypto/bech32.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/crypto/biginteger.js":
/*!************************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/crypto/biginteger.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tJavaScript BigInteger library version 0.9.1\n\thttp://silentmatt.com/biginteger/\n\tCopyright (c) 2009 Matthew Crumley <email@matthewcrumley.com>\n\tCopyright (c) 2010,2011 by John Tobey <John.Tobey@gmail.com>\n\tLicensed under the MIT license.\n\tSupport for arbitrary internal representation base was added by\n\tVitaly Magerya.\n*/\n\n/*\n\tFile: biginteger.js\n\tExports:\n\t\t<BigInteger>\n*/\n(function(exports) {\n    \"use strict\";\n    /*\n        Class: BigInteger\n        An arbitrarily-large integer.\n        <BigInteger> objects should be considered immutable. None of the \"built-in\"\n        methods modify *this* or their arguments. All properties should be\n        considered private.\n        All the methods of <BigInteger> instances can be called \"statically\". The\n        static versions are convenient if you don't already have a <BigInteger>\n        object.\n        As an example, these calls are equivalent.\n        > BigInteger(4).multiply(5); // returns BigInteger(20);\n        > BigInteger.multiply(4, 5); // returns BigInteger(20);\n        > var a = 42;\n        > var a = BigInteger.toJSValue(\"0b101010\"); // Not completely useless...\n    */\n    \n    var CONSTRUCT = {}; // Unique token to call \"private\" version of constructor\n    \n    /*\n        Constructor: BigInteger()\n        Convert a value to a <BigInteger>.\n        Although <BigInteger()> is the constructor for <BigInteger> objects, it is\n        best not to call it as a constructor. If *n* is a <BigInteger> object, it is\n        simply returned as-is. Otherwise, <BigInteger()> is equivalent to <parse>\n        without a radix argument.\n        > var n0 = BigInteger();      // Same as <BigInteger.ZERO>\n        > var n1 = BigInteger(\"123\"); // Create a new <BigInteger> with value 123\n        > var n2 = BigInteger(123);   // Create a new <BigInteger> with value 123\n        > var n3 = BigInteger(n2);    // Return n2, unchanged\n        The constructor form only takes an array and a sign. *n* must be an\n        array of numbers in little-endian order, where each digit is between 0\n        and BigInteger.base.  The second parameter sets the sign: -1 for\n        negative, +1 for positive, or 0 for zero. The array is *not copied and\n        may be modified*. If the array contains only zeros, the sign parameter\n        is ignored and is forced to zero.\n        > new BigInteger([5], -1): create a new BigInteger with value -5\n        Parameters:\n            n - Value to convert to a <BigInteger>.\n        Returns:\n            A <BigInteger> value.\n        See Also:\n            <parse>, <BigInteger>\n    */\n    function BigInteger(n, s, token) {\n        \n        if (token !== CONSTRUCT) {\n            if (n instanceof BigInteger) {\n                return n;\n            }\n            else if (typeof n === \"undefined\") {\n                return ZERO;\n            }\n            return BigInteger.parse(n);\n        }\n    \n        n = n || [];  // Provide the nullary constructor for subclasses.\n        while (n.length && !n[n.length - 1]) {\n            --n.length;\n        }\n        this._d = n;\n        this._s = n.length ? (s || 1) : 0;\n    }\n    \n    BigInteger._construct = function(n, s) {\n        return new BigInteger(n, s, CONSTRUCT);\n    };\n    \n    // Base-10 speedup hacks in parse, toString, exp10 and log functions\n    // require base to be a power of 10. 10^7 is the largest such power\n    // that won't cause a precision loss when digits are multiplied.\n    var BigInteger_base = 10000000;\n    var BigInteger_base_log10 = 7;\n    \n    BigInteger.base = BigInteger_base;\n    BigInteger.base_log10 = BigInteger_base_log10;\n    \n    var ZERO = new BigInteger([], 0, CONSTRUCT);\n    // Constant: ZERO\n    // <BigInteger> 0.\n    BigInteger.ZERO = ZERO;\n    \n    var ONE = new BigInteger([1], 1, CONSTRUCT);\n    // Constant: ONE\n    // <BigInteger> 1.\n    BigInteger.ONE = ONE;\n    \n    var M_ONE = new BigInteger(ONE._d, -1, CONSTRUCT);\n    // Constant: M_ONE\n    // <BigInteger> -1.\n    BigInteger.M_ONE = M_ONE;\n    \n    // Constant: _0\n    // Shortcut for <ZERO>.\n    BigInteger._0 = ZERO;\n    \n    // Constant: _1\n    // Shortcut for <ONE>.\n    BigInteger._1 = ONE;\n    \n    /*\n        Constant: small\n        Array of <BigIntegers> from 0 to 36.\n        These are used internally for parsing, but useful when you need a \"small\"\n        <BigInteger>.\n        See Also:\n            <ZERO>, <ONE>, <_0>, <_1>\n    */\n    BigInteger.small = [\n        ZERO,\n        ONE,\n        /* Assuming BigInteger_base > 36 */\n        new BigInteger( [2], 1, CONSTRUCT),\n        new BigInteger( [3], 1, CONSTRUCT),\n        new BigInteger( [4], 1, CONSTRUCT),\n        new BigInteger( [5], 1, CONSTRUCT),\n        new BigInteger( [6], 1, CONSTRUCT),\n        new BigInteger( [7], 1, CONSTRUCT),\n        new BigInteger( [8], 1, CONSTRUCT),\n        new BigInteger( [9], 1, CONSTRUCT),\n        new BigInteger([10], 1, CONSTRUCT),\n        new BigInteger([11], 1, CONSTRUCT),\n        new BigInteger([12], 1, CONSTRUCT),\n        new BigInteger([13], 1, CONSTRUCT),\n        new BigInteger([14], 1, CONSTRUCT),\n        new BigInteger([15], 1, CONSTRUCT),\n        new BigInteger([16], 1, CONSTRUCT),\n        new BigInteger([17], 1, CONSTRUCT),\n        new BigInteger([18], 1, CONSTRUCT),\n        new BigInteger([19], 1, CONSTRUCT),\n        new BigInteger([20], 1, CONSTRUCT),\n        new BigInteger([21], 1, CONSTRUCT),\n        new BigInteger([22], 1, CONSTRUCT),\n        new BigInteger([23], 1, CONSTRUCT),\n        new BigInteger([24], 1, CONSTRUCT),\n        new BigInteger([25], 1, CONSTRUCT),\n        new BigInteger([26], 1, CONSTRUCT),\n        new BigInteger([27], 1, CONSTRUCT),\n        new BigInteger([28], 1, CONSTRUCT),\n        new BigInteger([29], 1, CONSTRUCT),\n        new BigInteger([30], 1, CONSTRUCT),\n        new BigInteger([31], 1, CONSTRUCT),\n        new BigInteger([32], 1, CONSTRUCT),\n        new BigInteger([33], 1, CONSTRUCT),\n        new BigInteger([34], 1, CONSTRUCT),\n        new BigInteger([35], 1, CONSTRUCT),\n        new BigInteger([36], 1, CONSTRUCT)\n    ];\n    \n    // Used for parsing/radix conversion\n    BigInteger.digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n    \n    /*\n        Method: toString\n        Convert a <BigInteger> to a string.\n        When *base* is greater than 10, letters are upper case.\n        Parameters:\n            base - Optional base to represent the number in (default is base 10).\n                   Must be between 2 and 36 inclusive, or an Error will be thrown.\n        Returns:\n            The string representation of the <BigInteger>.\n    */\n    BigInteger.prototype.toString = function(base) {\n        base = +base || 10;\n        if (base < 2 || base > 36) {\n            throw new Error(\"illegal radix \" + base + \".\");\n        }\n        if (this._s === 0) {\n            return \"0\";\n        }\n        if (base === 10) {\n            var str = this._s < 0 ? \"-\" : \"\";\n            str += this._d[this._d.length - 1].toString();\n            for (var i = this._d.length - 2; i >= 0; i--) {\n                var group = this._d[i].toString();\n                while (group.length < BigInteger_base_log10) group = '0' + group;\n                str += group;\n            }\n            return str;\n        }\n        else {\n            var numerals = BigInteger.digits;\n            base = BigInteger.small[base];\n            var sign = this._s;\n    \n            var n = this.abs();\n            var digits = [];\n            var digit;\n    \n            while (n._s !== 0) {\n                var divmod = n.divRem(base);\n                n = divmod[0];\n                digit = divmod[1];\n                // TODO: This could be changed to unshift instead of reversing at the end.\n                // Benchmark both to compare speeds.\n                digits.push(numerals[digit.valueOf()]);\n            }\n            return (sign < 0 ? \"-\" : \"\") + digits.reverse().join(\"\");\n        }\n    };\n    \n    // Verify strings for parsing\n    BigInteger.radixRegex = [\n        /^$/,\n        /^$/,\n        /^[01]*$/,\n        /^[012]*$/,\n        /^[0-3]*$/,\n        /^[0-4]*$/,\n        /^[0-5]*$/,\n        /^[0-6]*$/,\n        /^[0-7]*$/,\n        /^[0-8]*$/,\n        /^[0-9]*$/,\n        /^[0-9aA]*$/,\n        /^[0-9abAB]*$/,\n        /^[0-9abcABC]*$/,\n        /^[0-9a-dA-D]*$/,\n        /^[0-9a-eA-E]*$/,\n        /^[0-9a-fA-F]*$/,\n        /^[0-9a-gA-G]*$/,\n        /^[0-9a-hA-H]*$/,\n        /^[0-9a-iA-I]*$/,\n        /^[0-9a-jA-J]*$/,\n        /^[0-9a-kA-K]*$/,\n        /^[0-9a-lA-L]*$/,\n        /^[0-9a-mA-M]*$/,\n        /^[0-9a-nA-N]*$/,\n        /^[0-9a-oA-O]*$/,\n        /^[0-9a-pA-P]*$/,\n        /^[0-9a-qA-Q]*$/,\n        /^[0-9a-rA-R]*$/,\n        /^[0-9a-sA-S]*$/,\n        /^[0-9a-tA-T]*$/,\n        /^[0-9a-uA-U]*$/,\n        /^[0-9a-vA-V]*$/,\n        /^[0-9a-wA-W]*$/,\n        /^[0-9a-xA-X]*$/,\n        /^[0-9a-yA-Y]*$/,\n        /^[0-9a-zA-Z]*$/\n    ];\n    \n    /*\n        Function: parse\n        Parse a string into a <BigInteger>.\n        *base* is optional but, if provided, must be from 2 to 36 inclusive. If\n        *base* is not provided, it will be guessed based on the leading characters\n        of *s* as follows:\n        - \"0x\" or \"0X\": *base* = 16\n        - \"0c\" or \"0C\": *base* = 8\n        - \"0b\" or \"0B\": *base* = 2\n        - else: *base* = 10\n        If no base is provided, or *base* is 10, the number can be in exponential\n        form. For example, these are all valid:\n        > BigInteger.parse(\"1e9\");              // Same as \"1000000000\"\n        > BigInteger.parse(\"1.234*10^3\");       // Same as 1234\n        > BigInteger.parse(\"56789 * 10 ** -2\"); // Same as 567\n        If any characters fall outside the range defined by the radix, an exception\n        will be thrown.\n        Parameters:\n            s - The string to parse.\n            base - Optional radix (default is to guess based on *s*).\n        Returns:\n            a <BigInteger> instance.\n    */\n    BigInteger.parse = function(s, base) {\n        // Expands a number in exponential form to decimal form.\n        // expandExponential(\"-13.441*10^5\") === \"1344100\";\n        // expandExponential(\"1.12300e-1\") === \"0.112300\";\n        // expandExponential(1000000000000000000000000000000) === \"1000000000000000000000000000000\";\n        function expandExponential(str) {\n            str = str.replace(/\\s*[*xX]\\s*10\\s*(\\^|\\*\\*)\\s*/, \"e\");\n    \n            return str.replace(/^([+\\-])?(\\d+)\\.?(\\d*)[eE]([+\\-]?\\d+)$/, function(x, s, n, f, c) {\n                c = +c;\n                var l = c < 0;\n                var i = n.length + c;\n                x = (l ? n : f).length;\n                c = ((c = Math.abs(c)) >= x ? c - x + l : 0);\n                var z = (new Array(c + 1)).join(\"0\");\n                var r = n + f;\n                return (s || \"\") + (l ? r = z + r : r += z).substr(0, i += l ? z.length : 0) + (i < r.length ? \".\" + r.substr(i) : \"\");\n            });\n        }\n    \n        s = s.toString();\n        if (typeof base === \"undefined\" || +base === 10) {\n            s = expandExponential(s);\n        }\n    \n        var prefixRE;\n        if (typeof base === \"undefined\") {\n            prefixRE = '0[xcb]';\n        }\n        else if (base == 16) {\n            prefixRE = '0x';\n        }\n        else if (base == 8) {\n            prefixRE = '0c';\n        }\n        else if (base == 2) {\n            prefixRE = '0b';\n        }\n        else {\n            prefixRE = '';\n        }\n        var parts = new RegExp('^([+\\\\-]?)(' + prefixRE + ')?([0-9a-z]*)(?:\\\\.\\\\d*)?$', 'i').exec(s);\n        if (parts) {\n            var sign = parts[1] || \"+\";\n            var baseSection = parts[2] || \"\";\n            var digits = parts[3] || \"\";\n    \n            if (typeof base === \"undefined\") {\n                // Guess base\n                if (baseSection === \"0x\" || baseSection === \"0X\") { // Hex\n                    base = 16;\n                }\n                else if (baseSection === \"0c\" || baseSection === \"0C\") { // Octal\n                    base = 8;\n                }\n                else if (baseSection === \"0b\" || baseSection === \"0B\") { // Binary\n                    base = 2;\n                }\n                else {\n                    base = 10;\n                }\n            }\n            else if (base < 2 || base > 36) {\n                throw new Error(\"Illegal radix \" + base + \".\");\n            }\n    \n            base = +base;\n    \n            // Check for digits outside the range\n            if (!(BigInteger.radixRegex[base].test(digits))) {\n                throw new Error(\"Bad digit for radix \" + base);\n            }\n    \n            // Strip leading zeros, and convert to array\n            digits = digits.replace(/^0+/, \"\").split(\"\");\n            if (digits.length === 0) {\n                return ZERO;\n            }\n    \n            // Get the sign (we know it's not zero)\n            sign = (sign === \"-\") ? -1 : 1;\n    \n            // Optimize 10\n            if (base == 10) {\n                var d = [];\n                while (digits.length >= BigInteger_base_log10) {\n                    d.push(parseInt(digits.splice(digits.length-BigInteger.base_log10, BigInteger.base_log10).join(''), 10));\n                }\n                d.push(parseInt(digits.join(''), 10));\n                return new BigInteger(d, sign, CONSTRUCT);\n            }\n    \n            // Do the conversion\n            var d = ZERO;\n            base = BigInteger.small[base];\n            var small = BigInteger.small;\n            for (var i = 0; i < digits.length; i++) {\n                d = d.multiply(base).add(small[parseInt(digits[i], 36)]);\n            }\n            return new BigInteger(d._d, sign, CONSTRUCT);\n        }\n        else {\n            throw new Error(\"Invalid BigInteger format: \" + s);\n        }\n    };\n    \n    /*\n        Function: add\n        Add two <BigIntegers>.\n        Parameters:\n            n - The number to add to *this*. Will be converted to a <BigInteger>.\n        Returns:\n            The numbers added together.\n        See Also:\n            <subtract>, <multiply>, <quotient>, <next>\n    */\n    BigInteger.prototype.add = function(n) {\n        if (this._s === 0) {\n            return BigInteger(n);\n        }\n    \n        n = BigInteger(n);\n        if (n._s === 0) {\n            return this;\n        }\n        if (this._s !== n._s) {\n            n = n.negate();\n            return this.subtract(n);\n        }\n    \n        var a = this._d;\n        var b = n._d;\n        var al = a.length;\n        var bl = b.length;\n        var sum = new Array(Math.max(al, bl) + 1);\n        var size = Math.min(al, bl);\n        var carry = 0;\n        var digit;\n    \n        for (var i = 0; i < size; i++) {\n            digit = a[i] + b[i] + carry;\n            sum[i] = digit % BigInteger_base;\n            carry = (digit / BigInteger_base) | 0;\n        }\n        if (bl > al) {\n            a = b;\n            al = bl;\n        }\n        for (i = size; carry && i < al; i++) {\n            digit = a[i] + carry;\n            sum[i] = digit % BigInteger_base;\n            carry = (digit / BigInteger_base) | 0;\n        }\n        if (carry) {\n            sum[i] = carry;\n        }\n    \n        for ( ; i < al; i++) {\n            sum[i] = a[i];\n        }\n    \n        return new BigInteger(sum, this._s, CONSTRUCT);\n    };\n    \n    /*\n        Function: negate\n        Get the additive inverse of a <BigInteger>.\n        Returns:\n            A <BigInteger> with the same magnatude, but with the opposite sign.\n        See Also:\n            <abs>\n    */\n    BigInteger.prototype.negate = function() {\n        return new BigInteger(this._d, (-this._s) | 0, CONSTRUCT);\n    };\n    \n    /*\n        Function: abs\n        Get the absolute value of a <BigInteger>.\n        Returns:\n            A <BigInteger> with the same magnatude, but always positive (or zero).\n        See Also:\n            <negate>\n    */\n    BigInteger.prototype.abs = function() {\n        return (this._s < 0) ? this.negate() : this;\n    };\n    \n    /*\n        Function: subtract\n        Subtract two <BigIntegers>.\n        Parameters:\n            n - The number to subtract from *this*. Will be converted to a <BigInteger>.\n        Returns:\n            The *n* subtracted from *this*.\n        See Also:\n            <add>, <multiply>, <quotient>, <prev>\n    */\n    BigInteger.prototype.subtract = function(n) {\n        if (this._s === 0) {\n            return BigInteger(n).negate();\n        }\n    \n        n = BigInteger(n);\n        if (n._s === 0) {\n            return this;\n        }\n        if (this._s !== n._s) {\n            n = n.negate();\n            return this.add(n);\n        }\n    \n        var m = this;\n        // negative - negative => -|a| - -|b| => -|a| + |b| => |b| - |a|\n        if (this._s < 0) {\n            m = new BigInteger(n._d, 1, CONSTRUCT);\n            n = new BigInteger(this._d, 1, CONSTRUCT);\n        }\n    \n        // Both are positive => a - b\n        var sign = m.compareAbs(n);\n        if (sign === 0) {\n            return ZERO;\n        }\n        else if (sign < 0) {\n            // swap m and n\n            var t = n;\n            n = m;\n            m = t;\n        }\n    \n        // a > b\n        var a = m._d;\n        var b = n._d;\n        var al = a.length;\n        var bl = b.length;\n        var diff = new Array(al); // al >= bl since a > b\n        var borrow = 0;\n        var i;\n        var digit;\n    \n        for (i = 0; i < bl; i++) {\n            digit = a[i] - borrow - b[i];\n            if (digit < 0) {\n                digit += BigInteger_base;\n                borrow = 1;\n            }\n            else {\n                borrow = 0;\n            }\n            diff[i] = digit;\n        }\n        for (i = bl; i < al; i++) {\n            digit = a[i] - borrow;\n            if (digit < 0) {\n                digit += BigInteger_base;\n            }\n            else {\n                diff[i++] = digit;\n                break;\n            }\n            diff[i] = digit;\n        }\n        for ( ; i < al; i++) {\n            diff[i] = a[i];\n        }\n    \n        return new BigInteger(diff, sign, CONSTRUCT);\n    };\n    \n    (function() {\n        function addOne(n, sign) {\n            var a = n._d;\n            var sum = a.slice();\n            var carry = true;\n            var i = 0;\n    \n            while (true) {\n                var digit = (a[i] || 0) + 1;\n                sum[i] = digit % BigInteger_base;\n                if (digit <= BigInteger_base - 1) {\n                    break;\n                }\n                ++i;\n            }\n    \n            return new BigInteger(sum, sign, CONSTRUCT);\n        }\n    \n        function subtractOne(n, sign) {\n            var a = n._d;\n            var sum = a.slice();\n            var borrow = true;\n            var i = 0;\n    \n            while (true) {\n                var digit = (a[i] || 0) - 1;\n                if (digit < 0) {\n                    sum[i] = digit + BigInteger_base;\n                }\n                else {\n                    sum[i] = digit;\n                    break;\n                }\n                ++i;\n            }\n    \n            return new BigInteger(sum, sign, CONSTRUCT);\n        }\n    \n        /*\n            Function: next\n            Get the next <BigInteger> (add one).\n            Returns:\n                *this* + 1.\n            See Also:\n                <add>, <prev>\n        */\n        BigInteger.prototype.next = function() {\n            switch (this._s) {\n            case 0:\n                return ONE;\n            case -1:\n                return subtractOne(this, -1);\n            // case 1:\n            default:\n                return addOne(this, 1);\n            }\n        };\n    \n        /*\n            Function: prev\n            Get the previous <BigInteger> (subtract one).\n            Returns:\n                *this* - 1.\n            See Also:\n                <next>, <subtract>\n        */\n        BigInteger.prototype.prev = function() {\n            switch (this._s) {\n            case 0:\n                return M_ONE;\n            case -1:\n                return addOne(this, -1);\n            // case 1:\n            default:\n                return subtractOne(this, 1);\n            }\n        };\n    })();\n    \n    /*\n        Function: compareAbs\n        Compare the absolute value of two <BigIntegers>.\n        Calling <compareAbs> is faster than calling <abs> twice, then <compare>.\n        Parameters:\n            n - The number to compare to *this*. Will be converted to a <BigInteger>.\n        Returns:\n            -1, 0, or +1 if *|this|* is less than, equal to, or greater than *|n|*.\n        See Also:\n            <compare>, <abs>\n    */\n    BigInteger.prototype.compareAbs = function(n) {\n        if (this === n) {\n            return 0;\n        }\n    \n        if (!(n instanceof BigInteger)) {\n            if (!isFinite(n)) {\n                return(isNaN(n) ? n : -1);\n            }\n            n = BigInteger(n);\n        }\n    \n        if (this._s === 0) {\n            return (n._s !== 0) ? -1 : 0;\n        }\n        if (n._s === 0) {\n            return 1;\n        }\n    \n        var l = this._d.length;\n        var nl = n._d.length;\n        if (l < nl) {\n            return -1;\n        }\n        else if (l > nl) {\n            return 1;\n        }\n    \n        var a = this._d;\n        var b = n._d;\n        for (var i = l-1; i >= 0; i--) {\n            if (a[i] !== b[i]) {\n                return a[i] < b[i] ? -1 : 1;\n            }\n        }\n    \n        return 0;\n    };\n    \n    /*\n        Function: compare\n        Compare two <BigIntegers>.\n        Parameters:\n            n - The number to compare to *this*. Will be converted to a <BigInteger>.\n        Returns:\n            -1, 0, or +1 if *this* is less than, equal to, or greater than *n*.\n        See Also:\n            <compareAbs>, <isPositive>, <isNegative>, <isUnit>\n    */\n    BigInteger.prototype.compare = function(n) {\n        if (this === n) {\n            return 0;\n        }\n    \n        n = BigInteger(n);\n    \n        if (this._s === 0) {\n            return -n._s;\n        }\n    \n        if (this._s === n._s) { // both positive or both negative\n            var cmp = this.compareAbs(n);\n            return cmp * this._s;\n        }\n        else {\n            return this._s;\n        }\n    };\n    \n    /*\n        Function: isUnit\n        Return true iff *this* is either 1 or -1.\n        Returns:\n            true if *this* compares equal to <BigInteger.ONE> or <BigInteger.M_ONE>.\n        See Also:\n            <isZero>, <isNegative>, <isPositive>, <compareAbs>, <compare>,\n            <BigInteger.ONE>, <BigInteger.M_ONE>\n    */\n    BigInteger.prototype.isUnit = function() {\n        return this === ONE ||\n            this === M_ONE ||\n            (this._d.length === 1 && this._d[0] === 1);\n    };\n    \n    /*\n        Function: multiply\n        Multiply two <BigIntegers>.\n        Parameters:\n            n - The number to multiply *this* by. Will be converted to a\n            <BigInteger>.\n        Returns:\n            The numbers multiplied together.\n        See Also:\n            <add>, <subtract>, <quotient>, <square>\n    */\n    BigInteger.prototype.multiply = function(n) {\n        // TODO: Consider adding Karatsuba multiplication for large numbers\n        if (this._s === 0) {\n            return ZERO;\n        }\n    \n        n = BigInteger(n);\n        if (n._s === 0) {\n            return ZERO;\n        }\n        if (this.isUnit()) {\n            if (this._s < 0) {\n                return n.negate();\n            }\n            return n;\n        }\n        if (n.isUnit()) {\n            if (n._s < 0) {\n                return this.negate();\n            }\n            return this;\n        }\n        if (this === n) {\n            return this.square();\n        }\n    \n        var r = (this._d.length >= n._d.length);\n        var a = (r ? this : n)._d; // a will be longer than b\n        var b = (r ? n : this)._d;\n        var al = a.length;\n        var bl = b.length;\n    \n        var pl = al + bl;\n        var partial = new Array(pl);\n        var i;\n        for (i = 0; i < pl; i++) {\n            partial[i] = 0;\n        }\n    \n        for (i = 0; i < bl; i++) {\n            var carry = 0;\n            var bi = b[i];\n            var jlimit = al + i;\n            var digit;\n            for (var j = i; j < jlimit; j++) {\n                digit = partial[j] + bi * a[j - i] + carry;\n                carry = (digit / BigInteger_base) | 0;\n                partial[j] = (digit % BigInteger_base) | 0;\n            }\n            if (carry) {\n                digit = partial[j] + carry;\n                carry = (digit / BigInteger_base) | 0;\n                partial[j] = digit % BigInteger_base;\n            }\n        }\n        return new BigInteger(partial, this._s * n._s, CONSTRUCT);\n    };\n    \n    // Multiply a BigInteger by a single-digit native number\n    // Assumes that this and n are >= 0\n    // This is not really intended to be used outside the library itself\n    BigInteger.prototype.multiplySingleDigit = function(n) {\n        if (n === 0 || this._s === 0) {\n            return ZERO;\n        }\n        if (n === 1) {\n            return this;\n        }\n    \n        var digit;\n        if (this._d.length === 1) {\n            digit = this._d[0] * n;\n            if (digit >= BigInteger_base) {\n                return new BigInteger([(digit % BigInteger_base)|0,\n                        (digit / BigInteger_base)|0], 1, CONSTRUCT);\n            }\n            return new BigInteger([digit], 1, CONSTRUCT);\n        }\n    \n        if (n === 2) {\n            return this.add(this);\n        }\n        if (this.isUnit()) {\n            return new BigInteger([n], 1, CONSTRUCT);\n        }\n    \n        var a = this._d;\n        var al = a.length;\n    \n        var pl = al + 1;\n        var partial = new Array(pl);\n        for (var i = 0; i < pl; i++) {\n            partial[i] = 0;\n        }\n    \n        var carry = 0;\n        for (var j = 0; j < al; j++) {\n            digit = n * a[j] + carry;\n            carry = (digit / BigInteger_base) | 0;\n            partial[j] = (digit % BigInteger_base) | 0;\n        }\n        if (carry) {\n            partial[j] = carry;\n        }\n    \n        return new BigInteger(partial, 1, CONSTRUCT);\n    };\n    \n    /*\n        Function: square\n        Multiply a <BigInteger> by itself.\n        This is slightly faster than regular multiplication, since it removes the\n        duplicated multiplcations.\n        Returns:\n            > this.multiply(this)\n        See Also:\n            <multiply>\n    */\n    BigInteger.prototype.square = function() {\n        // Normally, squaring a 10-digit number would take 100 multiplications.\n        // Of these 10 are unique diagonals, of the remaining 90 (100-10), 45 are repeated.\n        // This procedure saves (N*(N-1))/2 multiplications, (e.g., 45 of 100 multiplies).\n        // Based on code by Gary Darby, Intellitech Systems Inc., www.DelphiForFun.org\n    \n        if (this._s === 0) {\n            return ZERO;\n        }\n        if (this.isUnit()) {\n            return ONE;\n        }\n    \n        var digits = this._d;\n        var length = digits.length;\n        var imult1 = new Array(length + length + 1);\n        var product, carry, k;\n        var i;\n    \n        // Calculate diagonal\n        for (i = 0; i < length; i++) {\n            k = i * 2;\n            product = digits[i] * digits[i];\n            carry = (product / BigInteger_base) | 0;\n            imult1[k] = product % BigInteger_base;\n            imult1[k + 1] = carry;\n        }\n    \n        // Calculate repeating part\n        for (i = 0; i < length; i++) {\n            carry = 0;\n            k = i * 2 + 1;\n            for (var j = i + 1; j < length; j++, k++) {\n                product = digits[j] * digits[i] * 2 + imult1[k] + carry;\n                carry = (product / BigInteger_base) | 0;\n                imult1[k] = product % BigInteger_base;\n            }\n            k = length + i;\n            var digit = carry + imult1[k];\n            carry = (digit / BigInteger_base) | 0;\n            imult1[k] = digit % BigInteger_base;\n            imult1[k + 1] += carry;\n        }\n    \n        return new BigInteger(imult1, 1, CONSTRUCT);\n    };\n    \n    /*\n        Function: quotient\n        Divide two <BigIntegers> and truncate towards zero.\n        <quotient> throws an exception if *n* is zero.\n        Parameters:\n            n - The number to divide *this* by. Will be converted to a <BigInteger>.\n        Returns:\n            The *this* / *n*, truncated to an integer.\n        See Also:\n            <add>, <subtract>, <multiply>, <divRem>, <remainder>\n    */\n    BigInteger.prototype.quotient = function(n) {\n        return this.divRem(n)[0];\n    };\n    \n    /*\n        Function: divide\n        Deprecated synonym for <quotient>.\n    */\n    BigInteger.prototype.divide = BigInteger.prototype.quotient;\n    \n    /*\n        Function: remainder\n        Calculate the remainder of two <BigIntegers>.\n        <remainder> throws an exception if *n* is zero.\n        Parameters:\n            n - The remainder after *this* is divided *this* by *n*. Will be\n                converted to a <BigInteger>.\n        Returns:\n            *this* % *n*.\n        See Also:\n            <divRem>, <quotient>\n    */\n    BigInteger.prototype.remainder = function(n) {\n        return this.divRem(n)[1];\n    };\n    \n    /*\n        Function: divRem\n        Calculate the integer quotient and remainder of two <BigIntegers>.\n        <divRem> throws an exception if *n* is zero.\n        Parameters:\n            n - The number to divide *this* by. Will be converted to a <BigInteger>.\n        Returns:\n            A two-element array containing the quotient and the remainder.\n            > a.divRem(b)\n            is exactly equivalent to\n            > [a.quotient(b), a.remainder(b)]\n            except it is faster, because they are calculated at the same time.\n        See Also:\n            <quotient>, <remainder>\n    */\n    BigInteger.prototype.divRem = function(n) {\n        n = BigInteger(n);\n        if (n._s === 0) {\n            throw new Error(\"Divide by zero\");\n        }\n        if (this._s === 0) {\n            return [ZERO, ZERO];\n        }\n        if (n._d.length === 1) {\n            return this.divRemSmall(n._s * n._d[0]);\n        }\n    \n        // Test for easy cases -- |n1| <= |n2|\n        switch (this.compareAbs(n)) {\n        case 0: // n1 == n2\n            return [this._s === n._s ? ONE : M_ONE, ZERO];\n        case -1: // |n1| < |n2|\n            return [ZERO, this];\n        }\n    \n        var sign = this._s * n._s;\n        var a = n.abs();\n        var b_digits = this._d;\n        var b_index = b_digits.length;\n        var digits = n._d.length;\n        var quot = [];\n        var guess;\n    \n        var part = new BigInteger([], 0, CONSTRUCT);\n    \n        while (b_index) {\n            part._d.unshift(b_digits[--b_index]);\n            part = new BigInteger(part._d, 1, CONSTRUCT);\n    \n            if (part.compareAbs(n) < 0) {\n                quot.push(0);\n                continue;\n            }\n            if (part._s === 0) {\n                guess = 0;\n            }\n            else {\n                var xlen = part._d.length, ylen = a._d.length;\n                var highx = part._d[xlen-1]*BigInteger_base + part._d[xlen-2];\n                var highy = a._d[ylen-1]*BigInteger_base + a._d[ylen-2];\n                if (part._d.length > a._d.length) {\n                    // The length of part._d can either match a._d length,\n                    // or exceed it by one.\n                    highx = (highx+1)*BigInteger_base;\n                }\n                guess = Math.ceil(highx/highy);\n            }\n            do {\n                var check = a.multiplySingleDigit(guess);\n                if (check.compareAbs(part) <= 0) {\n                    break;\n                }\n                guess--;\n            } while (guess);\n    \n            quot.push(guess);\n            if (!guess) {\n                continue;\n            }\n            var diff = part.subtract(check);\n            part._d = diff._d.slice();\n        }\n    \n        return [new BigInteger(quot.reverse(), sign, CONSTRUCT),\n               new BigInteger(part._d, this._s, CONSTRUCT)];\n    };\n    \n    // Throws an exception if n is outside of (-BigInteger.base, -1] or\n    // [1, BigInteger.base).  It's not necessary to call this, since the\n    // other division functions will call it if they are able to.\n    BigInteger.prototype.divRemSmall = function(n) {\n        var r;\n        n = +n;\n        if (n === 0) {\n            throw new Error(\"Divide by zero\");\n        }\n    \n        var n_s = n < 0 ? -1 : 1;\n        var sign = this._s * n_s;\n        n = Math.abs(n);\n    \n        if (n < 1 || n >= BigInteger_base) {\n            throw new Error(\"Argument out of range\");\n        }\n    \n        if (this._s === 0) {\n            return [ZERO, ZERO];\n        }\n    \n        if (n === 1 || n === -1) {\n            return [(sign === 1) ? this.abs() : new BigInteger(this._d, sign, CONSTRUCT), ZERO];\n        }\n    \n        // 2 <= n < BigInteger_base\n    \n        // divide a single digit by a single digit\n        if (this._d.length === 1) {\n            var q = new BigInteger([(this._d[0] / n) | 0], 1, CONSTRUCT);\n            r = new BigInteger([(this._d[0] % n) | 0], 1, CONSTRUCT);\n            if (sign < 0) {\n                q = q.negate();\n            }\n            if (this._s < 0) {\n                r = r.negate();\n            }\n            return [q, r];\n        }\n    \n        var digits = this._d.slice();\n        var quot = new Array(digits.length);\n        var part = 0;\n        var diff = 0;\n        var i = 0;\n        var guess;\n    \n        while (digits.length) {\n            part = part * BigInteger_base + digits[digits.length - 1];\n            if (part < n) {\n                quot[i++] = 0;\n                digits.pop();\n                diff = BigInteger_base * diff + part;\n                continue;\n            }\n            if (part === 0) {\n                guess = 0;\n            }\n            else {\n                guess = (part / n) | 0;\n            }\n    \n            var check = n * guess;\n            diff = part - check;\n            quot[i++] = guess;\n            if (!guess) {\n                digits.pop();\n                continue;\n            }\n    \n            digits.pop();\n            part = diff;\n        }\n    \n        r = new BigInteger([diff], 1, CONSTRUCT);\n        if (this._s < 0) {\n            r = r.negate();\n        }\n        return [new BigInteger(quot.reverse(), sign, CONSTRUCT), r];\n    };\n    \n    /*\n        Function: isEven\n        Return true iff *this* is divisible by two.\n        Note that <BigInteger.ZERO> is even.\n        Returns:\n            true if *this* is even, false otherwise.\n        See Also:\n            <isOdd>\n    */\n    BigInteger.prototype.isEven = function() {\n        var digits = this._d;\n        return this._s === 0 || digits.length === 0 || (digits[0] % 2) === 0;\n    };\n    \n    /*\n        Function: isOdd\n        Return true iff *this* is not divisible by two.\n        Returns:\n            true if *this* is odd, false otherwise.\n        See Also:\n            <isEven>\n    */\n    BigInteger.prototype.isOdd = function() {\n        return !this.isEven();\n    };\n    \n    /*\n        Function: sign\n        Get the sign of a <BigInteger>.\n        Returns:\n            * -1 if *this* < 0\n            * 0 if *this* == 0\n            * +1 if *this* > 0\n        See Also:\n            <isZero>, <isPositive>, <isNegative>, <compare>, <BigInteger.ZERO>\n    */\n    BigInteger.prototype.sign = function() {\n        return this._s;\n    };\n    \n    /*\n        Function: isPositive\n        Return true iff *this* > 0.\n        Returns:\n            true if *this*.compare(<BigInteger.ZERO>) == 1.\n        See Also:\n            <sign>, <isZero>, <isNegative>, <isUnit>, <compare>, <BigInteger.ZERO>\n    */\n    BigInteger.prototype.isPositive = function() {\n        return this._s > 0;\n    };\n    \n    /*\n        Function: isNegative\n        Return true iff *this* < 0.\n        Returns:\n            true if *this*.compare(<BigInteger.ZERO>) == -1.\n        See Also:\n            <sign>, <isPositive>, <isZero>, <isUnit>, <compare>, <BigInteger.ZERO>\n    */\n    BigInteger.prototype.isNegative = function() {\n        return this._s < 0;\n    };\n    \n    /*\n        Function: isZero\n        Return true iff *this* == 0.\n        Returns:\n            true if *this*.compare(<BigInteger.ZERO>) == 0.\n        See Also:\n            <sign>, <isPositive>, <isNegative>, <isUnit>, <BigInteger.ZERO>\n    */\n    BigInteger.prototype.isZero = function() {\n        return this._s === 0;\n    };\n    \n    /*\n        Function: exp10\n        Multiply a <BigInteger> by a power of 10.\n        This is equivalent to, but faster than\n        > if (n >= 0) {\n        >     return this.multiply(BigInteger(\"1e\" + n));\n        > }\n        > else { // n <= 0\n        >     return this.quotient(BigInteger(\"1e\" + -n));\n        > }\n        Parameters:\n            n - The power of 10 to multiply *this* by. *n* is converted to a\n            javascipt number and must be no greater than <BigInteger.MAX_EXP>\n            (0x7FFFFFFF), or an exception will be thrown.\n        Returns:\n            *this* * (10 ** *n*), truncated to an integer if necessary.\n        See Also:\n            <pow>, <multiply>\n    */\n    BigInteger.prototype.exp10 = function(n) {\n        n = +n;\n        if (n === 0) {\n            return this;\n        }\n        if (Math.abs(n) > Number(MAX_EXP)) {\n            throw new Error(\"exponent too large in BigInteger.exp10\");\n        }\n        // Optimization for this == 0. This also keeps us from having to trim zeros in the positive n case\n        if (this._s === 0) {\n            return ZERO;\n        }\n        if (n > 0) {\n            var k = new BigInteger(this._d.slice(), this._s, CONSTRUCT);\n    \n            for (; n >= BigInteger_base_log10; n -= BigInteger_base_log10) {\n                k._d.unshift(0);\n            }\n            if (n == 0)\n                return k;\n            k._s = 1;\n            k = k.multiplySingleDigit(Math.pow(10, n));\n            return (this._s < 0 ? k.negate() : k);\n        } else if (-n >= this._d.length*BigInteger_base_log10) {\n            return ZERO;\n        } else {\n            var k = new BigInteger(this._d.slice(), this._s, CONSTRUCT);\n    \n            for (n = -n; n >= BigInteger_base_log10; n -= BigInteger_base_log10) {\n                k._d.shift();\n            }\n            return (n == 0) ? k : k.divRemSmall(Math.pow(10, n))[0];\n        }\n    };\n    \n    /*\n        Function: pow\n        Raise a <BigInteger> to a power.\n        In this implementation, 0**0 is 1.\n        Parameters:\n            n - The exponent to raise *this* by. *n* must be no greater than\n            <BigInteger.MAX_EXP> (0x7FFFFFFF), or an exception will be thrown.\n        Returns:\n            *this* raised to the *nth* power.\n        See Also:\n            <modPow>\n    */\n    BigInteger.prototype.pow = function(n) {\n        if (this.isUnit()) {\n            if (this._s > 0) {\n                return this;\n            }\n            else {\n                return BigInteger(n).isOdd() ? this : this.negate();\n            }\n        }\n    \n        n = BigInteger(n);\n        if (n._s === 0) {\n            return ONE;\n        }\n        else if (n._s < 0) {\n            if (this._s === 0) {\n                throw new Error(\"Divide by zero\");\n            }\n            else {\n                return ZERO;\n            }\n        }\n        if (this._s === 0) {\n            return ZERO;\n        }\n        if (n.isUnit()) {\n            return this;\n        }\n    \n        if (n.compareAbs(MAX_EXP) > 0) {\n            throw new Error(\"exponent too large in BigInteger.pow\");\n        }\n        var x = this;\n        var aux = ONE;\n        var two = BigInteger.small[2];\n    \n        while (n.isPositive()) {\n            if (n.isOdd()) {\n                aux = aux.multiply(x);\n                if (n.isUnit()) {\n                    return aux;\n                }\n            }\n            x = x.square();\n            n = n.quotient(two);\n        }\n    \n        return aux;\n    };\n    \n    /*\n        Function: modPow\n        Raise a <BigInteger> to a power (mod m).\n        Because it is reduced by a modulus, <modPow> is not limited by\n        <BigInteger.MAX_EXP> like <pow>.\n        Parameters:\n            exponent - The exponent to raise *this* by. Must be positive.\n            modulus - The modulus.\n        Returns:\n            *this* ^ *exponent* (mod *modulus*).\n        See Also:\n            <pow>, <mod>\n    */\n    BigInteger.prototype.modPow = function(exponent, modulus) {\n        var result = ONE;\n        var base = this;\n    \n        while (exponent.isPositive()) {\n            if (exponent.isOdd()) {\n                result = result.multiply(base).remainder(modulus);\n            }\n    \n            exponent = exponent.quotient(BigInteger.small[2]);\n            if (exponent.isPositive()) {\n                base = base.square().remainder(modulus);\n            }\n        }\n    \n        return result;\n    };\n    \n    /*\n        Function: log\n        Get the natural logarithm of a <BigInteger> as a native JavaScript number.\n        This is equivalent to\n        > Math.log(this.toJSValue())\n        but handles values outside of the native number range.\n        Returns:\n            log( *this* )\n        See Also:\n            <toJSValue>\n    */\n    BigInteger.prototype.log = function() {\n        switch (this._s) {\n        case 0:\t return -Infinity;\n        case -1: return NaN;\n        default: // Fall through.\n        }\n    \n        var l = this._d.length;\n    \n        if (l*BigInteger_base_log10 < 30) {\n            return Math.log(this.valueOf());\n        }\n    \n        var N = Math.ceil(30/BigInteger_base_log10);\n        var firstNdigits = this._d.slice(l - N);\n        return Math.log((new BigInteger(firstNdigits, 1, CONSTRUCT)).valueOf()) + (l - N) * Math.log(BigInteger_base);\n    };\n    \n    /*\n        Function: valueOf\n        Convert a <BigInteger> to a native JavaScript integer.\n        This is called automatically by JavaScipt to convert a <BigInteger> to a\n        native value.\n        Returns:\n            > parseInt(this.toString(), 10)\n        See Also:\n            <toString>, <toJSValue>\n    */\n    BigInteger.prototype.valueOf = function() {\n        return parseInt(this.toString(), 10);\n    };\n    \n    /*\n        Function: toJSValue\n        Convert a <BigInteger> to a native JavaScript integer.\n        This is the same as valueOf, but more explicitly named.\n        Returns:\n            > parseInt(this.toString(), 10)\n        See Also:\n            <toString>, <valueOf>\n    */\n    BigInteger.prototype.toJSValue = function() {\n        return parseInt(this.toString(), 10);\n    };\n    \n    \n    /*\n     Function: lowVal\n     Author: Lucas Jones\n     */\n    BigInteger.prototype.lowVal = function () {\n        return this._d[0] || 0;\n    };\n    \n    var MAX_EXP = BigInteger(0x7FFFFFFF);\n    // Constant: MAX_EXP\n    // The largest exponent allowed in <pow> and <exp10> (0x7FFFFFFF or 2147483647).\n    BigInteger.MAX_EXP = MAX_EXP;\n    \n    (function() {\n        function makeUnary(fn) {\n            return function(a) {\n                return fn.call(BigInteger(a));\n            };\n        }\n    \n        function makeBinary(fn) {\n            return function(a, b) {\n                return fn.call(BigInteger(a), BigInteger(b));\n            };\n        }\n    \n        function makeTrinary(fn) {\n            return function(a, b, c) {\n                return fn.call(BigInteger(a), BigInteger(b), BigInteger(c));\n            };\n        }\n    \n        (function() {\n            var i, fn;\n            var unary = \"toJSValue,isEven,isOdd,sign,isZero,isNegative,abs,isUnit,square,negate,isPositive,toString,next,prev,log\".split(\",\");\n            var binary = \"compare,remainder,divRem,subtract,add,quotient,divide,multiply,pow,compareAbs\".split(\",\");\n            var trinary = [\"modPow\"];\n    \n            for (i = 0; i < unary.length; i++) {\n                fn = unary[i];\n                BigInteger[fn] = makeUnary(BigInteger.prototype[fn]);\n            }\n    \n            for (i = 0; i < binary.length; i++) {\n                fn = binary[i];\n                BigInteger[fn] = makeBinary(BigInteger.prototype[fn]);\n            }\n    \n            for (i = 0; i < trinary.length; i++) {\n                fn = trinary[i];\n                BigInteger[fn] = makeTrinary(BigInteger.prototype[fn]);\n            }\n    \n            BigInteger.exp10 = function(x, n) {\n                return BigInteger(x).exp10(n);\n            };\n        })();\n    })();\n    \n    exports.JSBigInt = BigInteger; // exports.BigInteger changed to exports.JSBigInt\n    })( true ? exports : undefined);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/crypto/biginteger.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/crypto/blake256.js":
/*!**********************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/crypto/blake256.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n\n/**\n * Credits to https://github.com/cryptocoinjs/blake-hash\n */\nBlake256.sigma = [\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n    [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3],\n    [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4],\n    [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8],\n    [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13],\n    [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9],\n    [12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11],\n    [13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10],\n    [6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5],\n    [10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0],\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n    [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3],\n    [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4],\n    [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8],\n    [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13],\n    [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9]\n]\n\nBlake256.u256 = [\n    0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344,\n    0xa4093822, 0x299f31d0, 0x082efa98, 0xec4e6c89,\n    0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,\n    0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917\n]\n\nBlake256.padding = new Buffer([\n    0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n])\n\nBlake256.prototype._length_carry = function (arr) {\n    for (var j = 0; j < arr.length; ++j) {\n        if (arr[j] < 0x0100000000) break\n        arr[j] -= 0x0100000000\n        arr[j + 1] += 1\n    }\n}\n\nBlake256.prototype.update = function (data, encoding) {\n    data = new Buffer(data, encoding);\n    var block = this._block\n    var offset = 0\n\n    while (this._blockOffset + data.length - offset >= block.length) {\n        for (var i = this._blockOffset; i < block.length;) block[i++] = data[offset++]\n\n        this._length[0] += block.length * 8\n        this._length_carry(this._length)\n\n        this._compress()\n        this._blockOffset = 0\n    }\n\n    while (offset < data.length) block[this._blockOffset++] = data[offset++]\n    return this;\n}\n\nvar zo = new Buffer([0x01])\nvar oo = new Buffer([0x81])\n\nfunction rot (x, n) {\n    return ((x << (32 - n)) | (x >>> n)) >>> 0\n}\n\nfunction g (v, m, i, a, b, c, d, e) {\n    var sigma = Blake256.sigma\n    var u256 = Blake256.u256\n\n    v[a] = (v[a] + ((m[sigma[i][e]] ^ u256[sigma[i][e + 1]]) >>> 0) + v[b]) >>> 0\n    v[d] = rot(v[d] ^ v[a], 16)\n    v[c] = (v[c] + v[d]) >>> 0\n    v[b] = rot(v[b] ^ v[c], 12)\n    v[a] = (v[a] + ((m[sigma[i][e + 1]] ^ u256[sigma[i][e]]) >>> 0) + v[b]) >>> 0\n    v[d] = rot(v[d] ^ v[a], 8)\n    v[c] = (v[c] + v[d]) >>> 0\n    v[b] = rot(v[b] ^ v[c], 7)\n}\n\nfunction Blake256 () {\n    this._h = [\n        0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n        0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n    ]\n\n    this._s = [0, 0, 0, 0]\n\n    this._block = new Buffer(64)\n    this._blockOffset = 0\n    this._length = [0, 0]\n\n    this._nullt = false\n\n    this._zo = zo\n    this._oo = oo\n}\n\nBlake256.prototype._compress = function () {\n    var u256 = Blake256.u256\n    var v = new Array(16)\n    var m = new Array(16)\n    var i\n\n    for (i = 0; i < 16; ++i) m[i] = this._block.readUInt32BE(i * 4)\n    for (i = 0; i < 8; ++i) v[i] = this._h[i] >>> 0\n    for (i = 8; i < 12; ++i) v[i] = (this._s[i - 8] ^ u256[i - 8]) >>> 0\n    for (i = 12; i < 16; ++i) v[i] = u256[i - 8]\n\n    if (!this._nullt) {\n        v[12] = (v[12] ^ this._length[0]) >>> 0\n        v[13] = (v[13] ^ this._length[0]) >>> 0\n        v[14] = (v[14] ^ this._length[1]) >>> 0\n        v[15] = (v[15] ^ this._length[1]) >>> 0\n    }\n\n    for (i = 0; i < 14; ++i) {\n        /* column step */\n        g(v, m, i, 0, 4, 8, 12, 0)\n        g(v, m, i, 1, 5, 9, 13, 2)\n        g(v, m, i, 2, 6, 10, 14, 4)\n        g(v, m, i, 3, 7, 11, 15, 6)\n        /* diagonal step */\n        g(v, m, i, 0, 5, 10, 15, 8)\n        g(v, m, i, 1, 6, 11, 12, 10)\n        g(v, m, i, 2, 7, 8, 13, 12)\n        g(v, m, i, 3, 4, 9, 14, 14)\n    }\n\n    for (i = 0; i < 16; ++i) this._h[i % 8] = (this._h[i % 8] ^ v[i]) >>> 0\n    for (i = 0; i < 8; ++i) this._h[i] = (this._h[i] ^ this._s[i % 4]) >>> 0\n}\n\nBlake256.prototype._padding = function () {\n    var lo = this._length[0] + this._blockOffset * 8\n    var hi = this._length[1]\n    if (lo >= 0x0100000000) {\n        lo -= 0x0100000000\n        hi += 1\n    }\n\n    var msglen = new Buffer(8)\n    msglen.writeUInt32BE(hi, 0)\n    msglen.writeUInt32BE(lo, 4)\n\n    if (this._blockOffset === 55) {\n        this._length[0] -= 8\n        this.update(this._oo)\n    } else {\n        if (this._blockOffset < 55) {\n            if (this._blockOffset === 0) this._nullt = true\n            this._length[0] -= (55 - this._blockOffset) * 8\n            this.update(Blake256.padding.slice(0, 55 - this._blockOffset))\n        } else {\n            this._length[0] -= (64 - this._blockOffset) * 8\n            this.update(Blake256.padding.slice(0, 64 - this._blockOffset))\n            this._length[0] -= 55 * 8\n            this.update(Blake256.padding.slice(1, 1 + 55))\n            this._nullt = true\n        }\n\n        this.update(this._zo)\n        this._length[0] -= 8\n    }\n\n    this._length[0] -= 64\n    this.update(msglen)\n}\n\nBlake256.prototype.digest = function (encoding) {\n    this._padding()\n\n    var buffer = new Buffer(32)\n    for (var i = 0; i < 8; ++i) buffer.writeUInt32BE(this._h[i], i * 4)\n    return buffer.toString(encoding);\n}\n\nmodule.exports = Blake256;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/crypto/blake256.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/crypto/blake2b.js":
/*!*********************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/crypto/blake2b.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Credits to https://github.com/emilbayes/blake2b\n *\n * Copyright (c) 2017, Emil Bay github@tixz.dk\n *\n * Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  for (i = 0; i < 12; i++) {\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n}\n\n// reusable parameter_block\nvar parameter_block = new Uint8Array([\n  0, 0, 0, 0,      //  0: outlen, keylen, fanout, depth\n  0, 0, 0, 0,      //  4: leaf length, sequential mode\n  0, 0, 0, 0,      //  8: node offset\n  0, 0, 0, 0,      // 12: node offset\n  0, 0, 0, 0,      // 16: node depth, inner length, rfu\n  0, 0, 0, 0,      // 20: rfu\n  0, 0, 0, 0,      // 24: rfu\n  0, 0, 0, 0,      // 28: rfu\n  0, 0, 0, 0,      // 32: salt\n  0, 0, 0, 0,      // 36: salt\n  0, 0, 0, 0,      // 40: salt\n  0, 0, 0, 0,      // 44: salt\n  0, 0, 0, 0,      // 48: personal\n  0, 0, 0, 0,      // 52: personal\n  0, 0, 0, 0,      // 56: personal\n  0, 0, 0, 0       // 60: personal\n])\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction Blake2b (outlen, key, salt, personal) {\n  // zero out parameter_block before usage\n  parameter_block.fill(0)\n  // state, 'param block'\n\n  this.b = new Uint8Array(128)\n  this.h = new Uint32Array(16)\n  this.t = 0 // input count\n  this.c = 0 // pointer within buffer\n  this.outlen = outlen // output length in bytes\n\n  parameter_block[0] = outlen\n  if (key) parameter_block[1] = key.length\n  parameter_block[2] = 1 // fanout\n  parameter_block[3] = 1 // depth\n\n  if (salt) parameter_block.set(salt, 32)\n  if (personal) parameter_block.set(personal, 48)\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    this.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameter_block, i * 4)\n  }\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(this, key)\n    // at the end\n    this.c = 128\n  }\n}\n\nBlake2b.prototype.update = function (input) {\n  blake2bUpdate(this, input)\n  return this\n}\n\nBlake2b.prototype.digest = function (out) {\n  var buf = (!out || out === 'binary' || out === 'hex') ? new Uint8Array(this.outlen) : out\n  blake2bFinal(this, buf)\n  if (out === 'hex') return hexSlice(buf)\n  return buf\n}\n\nBlake2b.prototype.final = Blake2b.prototype.digest\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx, out) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\nfunction hexSlice (buf) {\n  var str = ''\n  for (var i = 0; i < buf.length; i++) str += toHex(buf[i])\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nmodule.exports = Blake2b;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/crypto/blake2b.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/crypto/cnBase58.js":
/*!**********************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/crypto/cnBase58.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var JSBigInt = __webpack_require__(/*! ./biginteger */ \"./node_modules/wallet-address-validator/src/crypto/biginteger.js\")['JSBigInt'];\n\n/**\nCopyright (c) 2017, moneroexamples\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nParts of the project are originally copyright (c) 2014-2017, MyMonero.com\n*/\n\nvar cnBase58 = (function () {\n    var b58 = {};\n\n    var alphabet_str = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n    var alphabet = [];\n    for (var i = 0; i < alphabet_str.length; i++) {\n        alphabet.push(alphabet_str.charCodeAt(i));\n    }\n    var encoded_block_sizes = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n\n    var alphabet_size = alphabet.length;\n    var full_block_size = 8;\n    var full_encoded_block_size = 11;\n\n    var UINT64_MAX = new JSBigInt(2).pow(64);\n\n    function hextobin(hex) {\n        if (hex.length % 2 !== 0) throw \"Hex string has invalid length!\";\n        var res = new Uint8Array(hex.length / 2);\n        for (var i = 0; i < hex.length / 2; ++i) {\n            res[i] = parseInt(hex.slice(i * 2, i * 2 + 2), 16);\n        }\n        return res;\n    }\n\n    function bintohex(bin) {\n        var out = [];\n        for (var i = 0; i < bin.length; ++i) {\n            out.push((\"0\" + bin[i].toString(16)).slice(-2));\n        }\n        return out.join(\"\");\n    }\n\n    function strtobin(str) {\n        var res = new Uint8Array(str.length);\n        for (var i = 0; i < str.length; i++) {\n            res[i] = str.charCodeAt(i);\n        }\n        return res;\n    }\n\n    function bintostr(bin) {\n        var out = [];\n        for (var i = 0; i < bin.length; i++) {\n            out.push(String.fromCharCode(bin[i]));\n        }\n        return out.join(\"\");\n    }\n\n    function uint8_be_to_64(data) {\n        if (data.length < 1 || data.length > 8) {\n            throw \"Invalid input length\";\n        }\n        var res = JSBigInt.ZERO;\n        var twopow8 = new JSBigInt(2).pow(8);\n        var i = 0;\n        switch (9 - data.length) {\n        case 1:\n            res = res.add(data[i++]);\n        case 2:\n            res = res.multiply(twopow8).add(data[i++]);\n        case 3:\n            res = res.multiply(twopow8).add(data[i++]);\n        case 4:\n            res = res.multiply(twopow8).add(data[i++]);\n        case 5:\n            res = res.multiply(twopow8).add(data[i++]);\n        case 6:\n            res = res.multiply(twopow8).add(data[i++]);\n        case 7:\n            res = res.multiply(twopow8).add(data[i++]);\n        case 8:\n            res = res.multiply(twopow8).add(data[i++]);\n            break;\n        default:\n            throw \"Impossible condition\";\n        }\n        return res;\n    }\n\n    function uint64_to_8be(num, size) {\n        var res = new Uint8Array(size);\n        if (size < 1 || size > 8) {\n            throw \"Invalid input length\";\n        }\n        var twopow8 = new JSBigInt(2).pow(8);\n        for (var i = size - 1; i >= 0; i--) {\n            res[i] = num.remainder(twopow8).toJSValue();\n            num = num.divide(twopow8);\n        }\n        return res;\n    }\n\n    b58.encode_block = function (data, buf, index) {\n        if (data.length < 1 || data.length > full_encoded_block_size) {\n            throw \"Invalid block length: \" + data.length;\n        }\n        var num = uint8_be_to_64(data);\n        var i = encoded_block_sizes[data.length] - 1;\n        // while num > 0\n        while (num.compare(0) === 1) {\n            var div = num.divRem(alphabet_size);\n            // remainder = num % alphabet_size\n            var remainder = div[1];\n            // num = num / alphabet_size\n            num = div[0];\n            buf[index + i] = alphabet[remainder.toJSValue()];\n            i--;\n        }\n        return buf;\n    };\n\n    b58.encode = function (hex) {\n        var data = hextobin(hex);\n        if (data.length === 0) {\n            return \"\";\n        }\n        var full_block_count = Math.floor(data.length / full_block_size);\n        var last_block_size = data.length % full_block_size;\n        var res_size = full_block_count * full_encoded_block_size + encoded_block_sizes[last_block_size];\n\n        var res = new Uint8Array(res_size);\n        var i;\n        for (i = 0; i < res_size; ++i) {\n            res[i] = alphabet[0];\n        }\n        for (i = 0; i < full_block_count; i++) {\n            res = b58.encode_block(data.subarray(i * full_block_size, i * full_block_size + full_block_size), res, i * full_encoded_block_size);\n        }\n        if (last_block_size > 0) {\n            res = b58.encode_block(data.subarray(full_block_count * full_block_size, full_block_count * full_block_size + last_block_size), res, full_block_count * full_encoded_block_size)\n        }\n        return bintostr(res);\n    };\n\n    b58.decode_block = function (data, buf, index) {\n        if (data.length < 1 || data.length > full_encoded_block_size) {\n            throw \"Invalid block length: \" + data.length;\n        }\n\n        var res_size = encoded_block_sizes.indexOf(data.length);\n        if (res_size <= 0) {\n            throw \"Invalid block size\";\n        }\n        var res_num = new JSBigInt(0);\n        var order = new JSBigInt(1);\n        for (var i = data.length - 1; i >= 0; i--) {\n            var digit = alphabet.indexOf(data[i]);\n            if (digit < 0) {\n                throw \"Invalid symbol\";\n            }\n            var product = order.multiply(digit).add(res_num);\n            // if product > UINT64_MAX\n            if (product.compare(UINT64_MAX) === 1) {\n                throw \"Overflow\";\n            }\n            res_num = product;\n            order = order.multiply(alphabet_size);\n        }\n        if (res_size < full_block_size && (new JSBigInt(2).pow(8 * res_size).compare(res_num) <= 0)) {\n            throw \"Overflow 2\";\n        }\n        buf.set(uint64_to_8be(res_num, res_size), index);\n        return buf;\n    };\n\n    b58.decode = function (enc) {\n        enc = strtobin(enc);\n        if (enc.length === 0) {\n            return \"\";\n        }\n        var full_block_count = Math.floor(enc.length / full_encoded_block_size);\n        var last_block_size = enc.length % full_encoded_block_size;\n        var last_block_decoded_size = encoded_block_sizes.indexOf(last_block_size);\n        if (last_block_decoded_size < 0) {\n            throw \"Invalid encoded length\";\n        }\n        var data_size = full_block_count * full_block_size + last_block_decoded_size;\n        var data = new Uint8Array(data_size);\n        for (var i = 0; i < full_block_count; i++) {\n            data = b58.decode_block(enc.subarray(i * full_encoded_block_size, i * full_encoded_block_size + full_encoded_block_size), data, i * full_block_size);\n        }\n        if (last_block_size > 0) {\n            data = b58.decode_block(enc.subarray(full_block_count * full_encoded_block_size, full_block_count * full_encoded_block_size + last_block_size), data, full_block_count * full_block_size);\n        }\n        return bintohex(data);\n    };\n\n    return b58;\n})();\nmodule.exports = cnBase58;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/crypto/cnBase58.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/crypto/segwit_addr.js":
/*!*************************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/crypto/segwit_addr.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Copyright (c) 2017 Pieter Wuille\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar bech32 = __webpack_require__(/*! ./bech32 */ \"./node_modules/wallet-address-validator/src/crypto/bech32.js\");\n\nfunction convertbits (data, frombits, tobits, pad) {\n  var acc = 0;\n  var bits = 0;\n  var ret = [];\n  var maxv = (1 << tobits) - 1;\n  for (var p = 0; p < data.length; ++p) {\n    var value = data[p];\n    if (value < 0 || (value >> frombits) !== 0) {\n      return null;\n    }\n    acc = (acc << frombits) | value;\n    bits += frombits;\n    while (bits >= tobits) {\n      bits -= tobits;\n      ret.push((acc >> bits) & maxv);\n    }\n  }\n  if (pad) {\n    if (bits > 0) {\n      ret.push((acc << (tobits - bits)) & maxv);\n    }\n  } else if (bits >= frombits || ((acc << (tobits - bits)) & maxv)) {\n    return null;\n  }\n  return ret;\n}\n\nfunction decode (hrp, addr) {\n  var dec = bech32.decode(addr);\n  if (dec === null || dec.hrp !== hrp || dec.data.length < 1 || dec.data[0] > 16) {\n    return null;\n  }\n  var res = convertbits(dec.data.slice(1), 5, 8, false);\n  if (res === null || res.length < 2 || res.length > 40) {\n    return null;\n  }\n  if (dec.data[0] === 0 && res.length !== 20 && res.length !== 32) {\n    return null;\n  }\n  return {version: dec.data[0], program: res};\n}\n\nfunction encode (hrp, version, program) {\n  var ret = bech32.encode(hrp, [version].concat(convertbits(program, 8, 5, true)));\n  if (decode(hrp, ret) === null) {\n    return null;\n  }\n  return ret;\n}\n\nfunction isValidAddress(address, hrp) {\n    var hrp = hrp || 'bc';\n    var ret = decode(hrp, address);\n\n    if (ret === null) {\n        hrp = 'tb';\n        ret = decode(hrp, address);\n    }\n\n    if (ret === null) {\n        return false;\n    }\n\n    var recreate = encode(hrp, ret.version, ret.program);\n    return recreate === address.toLowerCase();\n}\n\nmodule.exports = {\n    encode: encode,\n    decode: decode,\n    isValidAddress: isValidAddress,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3dhbGxldC1hZGRyZXNzLXZhbGlkYXRvci9zcmMvY3J5cHRvL3NlZ3dpdF9hZGRyLmpzP2U0ZjEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLDhFQUFVOztBQUUvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGlCQUFpQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2FsbGV0LWFkZHJlc3MtdmFsaWRhdG9yL3NyYy9jcnlwdG8vc2Vnd2l0X2FkZHIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTcgUGlldGVyIFd1aWxsZVxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbnZhciBiZWNoMzIgPSByZXF1aXJlKCcuL2JlY2gzMicpO1xuXG5mdW5jdGlvbiBjb252ZXJ0Yml0cyAoZGF0YSwgZnJvbWJpdHMsIHRvYml0cywgcGFkKSB7XG4gIHZhciBhY2MgPSAwO1xuICB2YXIgYml0cyA9IDA7XG4gIHZhciByZXQgPSBbXTtcbiAgdmFyIG1heHYgPSAoMSA8PCB0b2JpdHMpIC0gMTtcbiAgZm9yICh2YXIgcCA9IDA7IHAgPCBkYXRhLmxlbmd0aDsgKytwKSB7XG4gICAgdmFyIHZhbHVlID0gZGF0YVtwXTtcbiAgICBpZiAodmFsdWUgPCAwIHx8ICh2YWx1ZSA+PiBmcm9tYml0cykgIT09IDApIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBhY2MgPSAoYWNjIDw8IGZyb21iaXRzKSB8IHZhbHVlO1xuICAgIGJpdHMgKz0gZnJvbWJpdHM7XG4gICAgd2hpbGUgKGJpdHMgPj0gdG9iaXRzKSB7XG4gICAgICBiaXRzIC09IHRvYml0cztcbiAgICAgIHJldC5wdXNoKChhY2MgPj4gYml0cykgJiBtYXh2KTtcbiAgICB9XG4gIH1cbiAgaWYgKHBhZCkge1xuICAgIGlmIChiaXRzID4gMCkge1xuICAgICAgcmV0LnB1c2goKGFjYyA8PCAodG9iaXRzIC0gYml0cykpICYgbWF4dik7XG4gICAgfVxuICB9IGVsc2UgaWYgKGJpdHMgPj0gZnJvbWJpdHMgfHwgKChhY2MgPDwgKHRvYml0cyAtIGJpdHMpKSAmIG1heHYpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgcmV0dXJuIHJldDtcbn1cblxuZnVuY3Rpb24gZGVjb2RlIChocnAsIGFkZHIpIHtcbiAgdmFyIGRlYyA9IGJlY2gzMi5kZWNvZGUoYWRkcik7XG4gIGlmIChkZWMgPT09IG51bGwgfHwgZGVjLmhycCAhPT0gaHJwIHx8IGRlYy5kYXRhLmxlbmd0aCA8IDEgfHwgZGVjLmRhdGFbMF0gPiAxNikge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHZhciByZXMgPSBjb252ZXJ0Yml0cyhkZWMuZGF0YS5zbGljZSgxKSwgNSwgOCwgZmFsc2UpO1xuICBpZiAocmVzID09PSBudWxsIHx8IHJlcy5sZW5ndGggPCAyIHx8IHJlcy5sZW5ndGggPiA0MCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGlmIChkZWMuZGF0YVswXSA9PT0gMCAmJiByZXMubGVuZ3RoICE9PSAyMCAmJiByZXMubGVuZ3RoICE9PSAzMikge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiB7dmVyc2lvbjogZGVjLmRhdGFbMF0sIHByb2dyYW06IHJlc307XG59XG5cbmZ1bmN0aW9uIGVuY29kZSAoaHJwLCB2ZXJzaW9uLCBwcm9ncmFtKSB7XG4gIHZhciByZXQgPSBiZWNoMzIuZW5jb2RlKGhycCwgW3ZlcnNpb25dLmNvbmNhdChjb252ZXJ0Yml0cyhwcm9ncmFtLCA4LCA1LCB0cnVlKSkpO1xuICBpZiAoZGVjb2RlKGhycCwgcmV0KSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiByZXQ7XG59XG5cbmZ1bmN0aW9uIGlzVmFsaWRBZGRyZXNzKGFkZHJlc3MsIGhycCkge1xuICAgIHZhciBocnAgPSBocnAgfHwgJ2JjJztcbiAgICB2YXIgcmV0ID0gZGVjb2RlKGhycCwgYWRkcmVzcyk7XG5cbiAgICBpZiAocmV0ID09PSBudWxsKSB7XG4gICAgICAgIGhycCA9ICd0Yic7XG4gICAgICAgIHJldCA9IGRlY29kZShocnAsIGFkZHJlc3MpO1xuICAgIH1cblxuICAgIGlmIChyZXQgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHZhciByZWNyZWF0ZSA9IGVuY29kZShocnAsIHJldC52ZXJzaW9uLCByZXQucHJvZ3JhbSk7XG4gICAgcmV0dXJuIHJlY3JlYXRlID09PSBhZGRyZXNzLnRvTG93ZXJDYXNlKCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGVuY29kZTogZW5jb2RlLFxuICAgIGRlY29kZTogZGVjb2RlLFxuICAgIGlzVmFsaWRBZGRyZXNzOiBpc1ZhbGlkQWRkcmVzcyxcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/crypto/segwit_addr.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/crypto/sha3.js":
/*!******************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/crypto/sha3.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, global) {/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.7.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n\n\nvar ERROR = 'input is invalid type';\nvar WINDOW = typeof window === 'object';\nvar root = WINDOW ? window : {};\nif (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n}\nvar WEB_WORKER = !WINDOW && typeof self === 'object';\nvar NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\nif (NODE_JS) {\n    root = global;\n} else if (WEB_WORKER) {\n    root = self;\n}\nvar ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\nvar HEX_CHARS = '0123456789abcdef'.split('');\nvar SHAKE_PADDING = [31, 7936, 2031616, 520093696];\nvar CSHAKE_PADDING = [4, 1024, 262144, 67108864];\nvar KECCAK_PADDING = [1, 256, 65536, 16777216];\nvar PADDING = [6, 1536, 393216, 100663296];\nvar SHIFT = [0, 8, 16, 24];\nvar RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\nvar BITS = [224, 256, 384, 512];\nvar SHAKE_BITS = [128, 256];\nvar OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\nvar CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n};\n\nif (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n}\n\nif (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n        return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n}\n\nvar createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n        return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n};\n\nvar createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n        return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n};\n\nvar createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n        return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n};\n\nvar createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n        return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n};\n\nvar createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n        var type = OUTPUT_TYPES[i];\n        method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n};\n\nvar createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n        return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n        return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n};\n\nvar createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n        return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n        return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n};\n\nvar createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n        if (!n && !s) {\n            return methods['shake' + bits].create(outputBits);\n        } else {\n            return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n        }\n    };\n    method.update = function (message, outputBits, n, s) {\n        return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n};\n\nvar createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n        return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n        return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n};\n\nvar algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n];\n\nvar methods = {}, methodNames = [];\n\nfor (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n        var methodName = algorithm.name + '_' + bits[j];\n        methodNames.push(methodName);\n        methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n        if (algorithm.name !== 'sha3') {\n            var newMethodName = algorithm.name + bits[j];\n            methodNames.push(newMethodName);\n            methods[newMethodName] = methods[methodName];\n        }\n    }\n}\n\nfunction Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n        this.s[i] = 0;\n    }\n}\n\nKeccak.prototype.update = function (message) {\n    if (this.finalized) {\n        return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n        if (type === 'object') {\n            if (message === null) {\n                throw ERROR;\n            } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n                message = new Uint8Array(message);\n            } else if (!Array.isArray(message)) {\n                if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n                    throw ERROR;\n                }\n            }\n        } else {\n            throw ERROR;\n        }\n        notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n        blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n        if (this.reset) {\n            this.reset = false;\n            blocks[0] = this.block;\n            for (i = 1; i < blockCount + 1; ++i) {\n                blocks[i] = 0;\n            }\n        }\n        if (notString) {\n            for (i = this.start; index < length && i < byteCount; ++index) {\n                blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n        } else {\n            for (i = this.start; index < length && i < byteCount; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 0x80) {\n                    blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                } else if (code < 0x800) {\n                    blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                } else if (code < 0xd800 || code >= 0xe000) {\n                    blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                } else {\n                    code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n                    blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n            }\n        }\n        this.lastByteIndex = i;\n        if (i >= byteCount) {\n            this.start = i - byteCount;\n            this.block = blocks[blockCount];\n            for (i = 0; i < blockCount; ++i) {\n                s[i] ^= blocks[i];\n            }\n            f(s);\n            this.reset = true;\n        } else {\n            this.start = i;\n        }\n    }\n    return this;\n};\n\nKeccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n        bytes.unshift(o);\n        x = x >> 8;\n        o = x & 255;\n        ++n;\n    }\n    if (right) {\n        bytes.push(n);\n    } else {\n        bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n};\n\nKeccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n        if (type === 'object') {\n            if (str === null) {\n                throw ERROR;\n            } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n                str = new Uint8Array(str);\n            } else if (!Array.isArray(str)) {\n                if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n                    throw ERROR;\n                }\n            }\n        } else {\n            throw ERROR;\n        }\n        notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n        bytes = length;\n    } else {\n        for (var i = 0; i < str.length; ++i) {\n            var code = str.charCodeAt(i);\n            if (code < 0x80) {\n                bytes += 1;\n            } else if (code < 0x800) {\n                bytes += 2;\n            } else if (code < 0xd800 || code >= 0xe000) {\n                bytes += 3;\n            } else {\n                code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n                bytes += 4;\n            }\n        }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n};\n\nKeccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n        bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n};\n\nKeccak.prototype.finalize = function () {\n    if (this.finalized) {\n        return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n        blocks[0] = blocks[blockCount];\n        for (i = 1; i < blockCount + 1; ++i) {\n            blocks[i] = 0;\n        }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n    }\n    f(s);\n};\n\nKeccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n            block = s[i];\n            hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n                HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n                HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n                HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n        }\n        if (j % blockCount === 0) {\n            f(s);\n            i = 0;\n        }\n    }\n    if (extraBytes) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n        if (extraBytes > 1) {\n            hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n        }\n        if (extraBytes > 2) {\n            hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n        }\n    }\n    return hex;\n};\n\nKeccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n        buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n        buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n            array[j] = s[i];\n        }\n        if (j % blockCount === 0) {\n            f(s);\n        }\n    }\n    if (extraBytes) {\n        array[i] = s[i];\n        buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n};\n\nKeccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\nKeccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n            offset = j << 2;\n            block = s[i];\n            array[offset] = block & 0xFF;\n            array[offset + 1] = (block >> 8) & 0xFF;\n            array[offset + 2] = (block >> 16) & 0xFF;\n            array[offset + 3] = (block >> 24) & 0xFF;\n        }\n        if (j % blockCount === 0) {\n            f(s);\n        }\n    }\n    if (extraBytes) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        if (extraBytes > 1) {\n            array[offset + 1] = (block >> 8) & 0xFF;\n        }\n        if (extraBytes > 2) {\n            array[offset + 2] = (block >> 16) & 0xFF;\n        }\n    }\n    return array;\n};\n\nfunction Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n}\n\nKmac.prototype = new Keccak();\n\nKmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n};\n\nvar f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n        h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n        l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n        s[0] ^= h;\n        s[1] ^= l;\n        s[10] ^= h;\n        s[11] ^= l;\n        s[20] ^= h;\n        s[21] ^= l;\n        s[30] ^= h;\n        s[31] ^= l;\n        s[40] ^= h;\n        s[41] ^= l;\n        h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n        l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n        s[2] ^= h;\n        s[3] ^= l;\n        s[12] ^= h;\n        s[13] ^= l;\n        s[22] ^= h;\n        s[23] ^= l;\n        s[32] ^= h;\n        s[33] ^= l;\n        s[42] ^= h;\n        s[43] ^= l;\n        h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n        l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n        s[4] ^= h;\n        s[5] ^= l;\n        s[14] ^= h;\n        s[15] ^= l;\n        s[24] ^= h;\n        s[25] ^= l;\n        s[34] ^= h;\n        s[35] ^= l;\n        s[44] ^= h;\n        s[45] ^= l;\n        h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n        l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n        s[6] ^= h;\n        s[7] ^= l;\n        s[16] ^= h;\n        s[17] ^= l;\n        s[26] ^= h;\n        s[27] ^= l;\n        s[36] ^= h;\n        s[37] ^= l;\n        s[46] ^= h;\n        s[47] ^= l;\n        h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n        l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n        s[8] ^= h;\n        s[9] ^= l;\n        s[18] ^= h;\n        s[19] ^= l;\n        s[28] ^= h;\n        s[29] ^= l;\n        s[38] ^= h;\n        s[39] ^= l;\n        s[48] ^= h;\n        s[49] ^= l;\n\n        b0 = s[0];\n        b1 = s[1];\n        b32 = (s[11] << 4) | (s[10] >>> 28);\n        b33 = (s[10] << 4) | (s[11] >>> 28);\n        b14 = (s[20] << 3) | (s[21] >>> 29);\n        b15 = (s[21] << 3) | (s[20] >>> 29);\n        b46 = (s[31] << 9) | (s[30] >>> 23);\n        b47 = (s[30] << 9) | (s[31] >>> 23);\n        b28 = (s[40] << 18) | (s[41] >>> 14);\n        b29 = (s[41] << 18) | (s[40] >>> 14);\n        b20 = (s[2] << 1) | (s[3] >>> 31);\n        b21 = (s[3] << 1) | (s[2] >>> 31);\n        b2 = (s[13] << 12) | (s[12] >>> 20);\n        b3 = (s[12] << 12) | (s[13] >>> 20);\n        b34 = (s[22] << 10) | (s[23] >>> 22);\n        b35 = (s[23] << 10) | (s[22] >>> 22);\n        b16 = (s[33] << 13) | (s[32] >>> 19);\n        b17 = (s[32] << 13) | (s[33] >>> 19);\n        b48 = (s[42] << 2) | (s[43] >>> 30);\n        b49 = (s[43] << 2) | (s[42] >>> 30);\n        b40 = (s[5] << 30) | (s[4] >>> 2);\n        b41 = (s[4] << 30) | (s[5] >>> 2);\n        b22 = (s[14] << 6) | (s[15] >>> 26);\n        b23 = (s[15] << 6) | (s[14] >>> 26);\n        b4 = (s[25] << 11) | (s[24] >>> 21);\n        b5 = (s[24] << 11) | (s[25] >>> 21);\n        b36 = (s[34] << 15) | (s[35] >>> 17);\n        b37 = (s[35] << 15) | (s[34] >>> 17);\n        b18 = (s[45] << 29) | (s[44] >>> 3);\n        b19 = (s[44] << 29) | (s[45] >>> 3);\n        b10 = (s[6] << 28) | (s[7] >>> 4);\n        b11 = (s[7] << 28) | (s[6] >>> 4);\n        b42 = (s[17] << 23) | (s[16] >>> 9);\n        b43 = (s[16] << 23) | (s[17] >>> 9);\n        b24 = (s[26] << 25) | (s[27] >>> 7);\n        b25 = (s[27] << 25) | (s[26] >>> 7);\n        b6 = (s[36] << 21) | (s[37] >>> 11);\n        b7 = (s[37] << 21) | (s[36] >>> 11);\n        b38 = (s[47] << 24) | (s[46] >>> 8);\n        b39 = (s[46] << 24) | (s[47] >>> 8);\n        b30 = (s[8] << 27) | (s[9] >>> 5);\n        b31 = (s[9] << 27) | (s[8] >>> 5);\n        b12 = (s[18] << 20) | (s[19] >>> 12);\n        b13 = (s[19] << 20) | (s[18] >>> 12);\n        b44 = (s[29] << 7) | (s[28] >>> 25);\n        b45 = (s[28] << 7) | (s[29] >>> 25);\n        b26 = (s[38] << 8) | (s[39] >>> 24);\n        b27 = (s[39] << 8) | (s[38] >>> 24);\n        b8 = (s[48] << 14) | (s[49] >>> 18);\n        b9 = (s[49] << 14) | (s[48] >>> 18);\n\n        s[0] = b0 ^ (~b2 & b4);\n        s[1] = b1 ^ (~b3 & b5);\n        s[10] = b10 ^ (~b12 & b14);\n        s[11] = b11 ^ (~b13 & b15);\n        s[20] = b20 ^ (~b22 & b24);\n        s[21] = b21 ^ (~b23 & b25);\n        s[30] = b30 ^ (~b32 & b34);\n        s[31] = b31 ^ (~b33 & b35);\n        s[40] = b40 ^ (~b42 & b44);\n        s[41] = b41 ^ (~b43 & b45);\n        s[2] = b2 ^ (~b4 & b6);\n        s[3] = b3 ^ (~b5 & b7);\n        s[12] = b12 ^ (~b14 & b16);\n        s[13] = b13 ^ (~b15 & b17);\n        s[22] = b22 ^ (~b24 & b26);\n        s[23] = b23 ^ (~b25 & b27);\n        s[32] = b32 ^ (~b34 & b36);\n        s[33] = b33 ^ (~b35 & b37);\n        s[42] = b42 ^ (~b44 & b46);\n        s[43] = b43 ^ (~b45 & b47);\n        s[4] = b4 ^ (~b6 & b8);\n        s[5] = b5 ^ (~b7 & b9);\n        s[14] = b14 ^ (~b16 & b18);\n        s[15] = b15 ^ (~b17 & b19);\n        s[24] = b24 ^ (~b26 & b28);\n        s[25] = b25 ^ (~b27 & b29);\n        s[34] = b34 ^ (~b36 & b38);\n        s[35] = b35 ^ (~b37 & b39);\n        s[44] = b44 ^ (~b46 & b48);\n        s[45] = b45 ^ (~b47 & b49);\n        s[6] = b6 ^ (~b8 & b0);\n        s[7] = b7 ^ (~b9 & b1);\n        s[16] = b16 ^ (~b18 & b10);\n        s[17] = b17 ^ (~b19 & b11);\n        s[26] = b26 ^ (~b28 & b20);\n        s[27] = b27 ^ (~b29 & b21);\n        s[36] = b36 ^ (~b38 & b30);\n        s[37] = b37 ^ (~b39 & b31);\n        s[46] = b46 ^ (~b48 & b40);\n        s[47] = b47 ^ (~b49 & b41);\n        s[8] = b8 ^ (~b0 & b2);\n        s[9] = b9 ^ (~b1 & b3);\n        s[18] = b18 ^ (~b10 & b12);\n        s[19] = b19 ^ (~b11 & b13);\n        s[28] = b28 ^ (~b20 & b22);\n        s[29] = b29 ^ (~b21 & b23);\n        s[38] = b38 ^ (~b30 & b32);\n        s[39] = b39 ^ (~b31 & b33);\n        s[48] = b48 ^ (~b40 & b42);\n        s[49] = b49 ^ (~b41 & b43);\n\n        s[0] ^= RC[n];\n        s[1] ^= RC[n + 1];\n    }\n};\n\nmodule.exports = methods;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/crypto/sha3.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/crypto/utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/crypto/utils.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var jsSHA = __webpack_require__(/*! jssha/src/sha256 */ \"./node_modules/jssha/src/sha256.js\");\nvar Blake256 = __webpack_require__(/*! ./blake256 */ \"./node_modules/wallet-address-validator/src/crypto/blake256.js\");\nvar keccak256 = __webpack_require__(/*! ./sha3 */ \"./node_modules/wallet-address-validator/src/crypto/sha3.js\")['keccak256'];\nvar Blake2B = __webpack_require__(/*! ./blake2b */ \"./node_modules/wallet-address-validator/src/crypto/blake2b.js\");\n\nfunction numberToHex (number) {\n    var hex = Math.round(number).toString(16);\n    if(hex.length === 1) {\n        hex = '0' + hex;\n    }\n    return hex;\n}\n\nfunction hexToUint8(hexString) {\n    var arr = [];\n    for (var i = 0; i < hexString.length; i += 2) {\n        arr.push(parseInt(hexString.substr(i, 2), 16));\n    }\n\n    return new Uint8Array(arr);\n}\n\nmodule.exports = {\n    toHex: function (arrayOfBytes) {\n        var hex = '';\n        for(var i = 0; i < arrayOfBytes.length; i++) {\n            hex += numberToHex(arrayOfBytes[i]);\n        }\n        return hex;\n    },\n    sha256: function (hexString) {\n        var sha = new jsSHA('SHA-256', 'HEX');\n        sha.update(hexString);\n        return sha.getHash('HEX');\n    },\n    sha256Checksum: function (payload) {\n        return this.sha256(this.sha256(payload)).substr(0, 8);\n    },\n    blake256: function (hexString) {\n        return new Blake256().update(hexString, 'hex').digest('hex');\n    },\n    blake256Checksum: function (payload) {\n        return this.blake256(this.blake256(payload)).substr(0, 8);\n    },\n    blake2b: function (hexString, outlen) {\n        return new Blake2B(outlen).update(hexToUint8(hexString)).digest('hex');\n    },\n    keccak256: function (hexString) {\n        return keccak256(hexString);\n    },\n    keccak256Checksum: function (payload) {\n        return keccak256(payload).toString().substr(0, 8);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3dhbGxldC1hZGRyZXNzLXZhbGlkYXRvci9zcmMvY3J5cHRvL3V0aWxzLmpzPzQ4YzQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxtQkFBTyxDQUFDLDREQUFrQjtBQUN0QyxlQUFlLG1CQUFPLENBQUMsa0ZBQVk7QUFDbkMsZ0JBQWdCLG1CQUFPLENBQUMsMEVBQVE7QUFDaEMsY0FBYyxtQkFBTyxDQUFDLGdGQUFXOztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLHNCQUFzQjtBQUN6QztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlCQUF5QjtBQUMvQztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dhbGxldC1hZGRyZXNzLXZhbGlkYXRvci9zcmMvY3J5cHRvL3V0aWxzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGpzU0hBID0gcmVxdWlyZSgnanNzaGEvc3JjL3NoYTI1NicpO1xudmFyIEJsYWtlMjU2ID0gcmVxdWlyZSgnLi9ibGFrZTI1NicpO1xudmFyIGtlY2NhazI1NiA9IHJlcXVpcmUoJy4vc2hhMycpWydrZWNjYWsyNTYnXTtcbnZhciBCbGFrZTJCID0gcmVxdWlyZSgnLi9ibGFrZTJiJyk7XG5cbmZ1bmN0aW9uIG51bWJlclRvSGV4IChudW1iZXIpIHtcbiAgICB2YXIgaGV4ID0gTWF0aC5yb3VuZChudW1iZXIpLnRvU3RyaW5nKDE2KTtcbiAgICBpZihoZXgubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIGhleCA9ICcwJyArIGhleDtcbiAgICB9XG4gICAgcmV0dXJuIGhleDtcbn1cblxuZnVuY3Rpb24gaGV4VG9VaW50OChoZXhTdHJpbmcpIHtcbiAgICB2YXIgYXJyID0gW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBoZXhTdHJpbmcubGVuZ3RoOyBpICs9IDIpIHtcbiAgICAgICAgYXJyLnB1c2gocGFyc2VJbnQoaGV4U3RyaW5nLnN1YnN0cihpLCAyKSwgMTYpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYXJyKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgdG9IZXg6IGZ1bmN0aW9uIChhcnJheU9mQnl0ZXMpIHtcbiAgICAgICAgdmFyIGhleCA9ICcnO1xuICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgYXJyYXlPZkJ5dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBoZXggKz0gbnVtYmVyVG9IZXgoYXJyYXlPZkJ5dGVzW2ldKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaGV4O1xuICAgIH0sXG4gICAgc2hhMjU2OiBmdW5jdGlvbiAoaGV4U3RyaW5nKSB7XG4gICAgICAgIHZhciBzaGEgPSBuZXcganNTSEEoJ1NIQS0yNTYnLCAnSEVYJyk7XG4gICAgICAgIHNoYS51cGRhdGUoaGV4U3RyaW5nKTtcbiAgICAgICAgcmV0dXJuIHNoYS5nZXRIYXNoKCdIRVgnKTtcbiAgICB9LFxuICAgIHNoYTI1NkNoZWNrc3VtOiBmdW5jdGlvbiAocGF5bG9hZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zaGEyNTYodGhpcy5zaGEyNTYocGF5bG9hZCkpLnN1YnN0cigwLCA4KTtcbiAgICB9LFxuICAgIGJsYWtlMjU2OiBmdW5jdGlvbiAoaGV4U3RyaW5nKSB7XG4gICAgICAgIHJldHVybiBuZXcgQmxha2UyNTYoKS51cGRhdGUoaGV4U3RyaW5nLCAnaGV4JykuZGlnZXN0KCdoZXgnKTtcbiAgICB9LFxuICAgIGJsYWtlMjU2Q2hlY2tzdW06IGZ1bmN0aW9uIChwYXlsb2FkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJsYWtlMjU2KHRoaXMuYmxha2UyNTYocGF5bG9hZCkpLnN1YnN0cigwLCA4KTtcbiAgICB9LFxuICAgIGJsYWtlMmI6IGZ1bmN0aW9uIChoZXhTdHJpbmcsIG91dGxlbikge1xuICAgICAgICByZXR1cm4gbmV3IEJsYWtlMkIob3V0bGVuKS51cGRhdGUoaGV4VG9VaW50OChoZXhTdHJpbmcpKS5kaWdlc3QoJ2hleCcpO1xuICAgIH0sXG4gICAga2VjY2FrMjU2OiBmdW5jdGlvbiAoaGV4U3RyaW5nKSB7XG4gICAgICAgIHJldHVybiBrZWNjYWsyNTYoaGV4U3RyaW5nKTtcbiAgICB9LFxuICAgIGtlY2NhazI1NkNoZWNrc3VtOiBmdW5jdGlvbiAocGF5bG9hZCkge1xuICAgICAgICByZXR1cm4ga2VjY2FrMjU2KHBheWxvYWQpLnRvU3RyaW5nKCkuc3Vic3RyKDAsIDgpO1xuICAgIH1cbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/crypto/utils.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/currencies.js":
/*!*****************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/currencies.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var XRPValidator = __webpack_require__(/*! ./ripple_validator */ \"./node_modules/wallet-address-validator/src/ripple_validator.js\");\nvar ETHValidator = __webpack_require__(/*! ./ethereum_validator */ \"./node_modules/wallet-address-validator/src/ethereum_validator.js\");\nvar BTCValidator = __webpack_require__(/*! ./bitcoin_validator */ \"./node_modules/wallet-address-validator/src/bitcoin_validator.js\");\nvar XMRValidator = __webpack_require__(/*! ./monero_validator */ \"./node_modules/wallet-address-validator/src/monero_validator.js\");\nvar NANOValidator = __webpack_require__(/*! ./nano_validator */ \"./node_modules/wallet-address-validator/src/nano_validator.js\");\n\n// defines P2PKH and P2SH address types for standard (prod) and testnet networks\nvar CURRENCIES = [{\n    name: 'bitcoin',\n    symbol: 'btc',\n    addressTypes: {prod: ['00', '05'], testnet: ['6f', 'c4']},\n    validator: BTCValidator\n},{\n    name: 'bitcoincash',\n    symbol: 'bch',\n    addressTypes: {prod: ['00', '05'], testnet: ['6f', 'c4']},\n    validator: BTCValidator\n},{\n    name: 'litecoin',\n    symbol: 'ltc',\n    addressTypes: {prod: ['30', '05', '32'], testnet: ['6f', 'c4', '3a']},\n    validator: BTCValidator\n},{\n    name: 'peercoin',\n    symbol: 'ppc',\n    addressTypes: {prod: ['37', '75'], testnet: ['6f', 'c4']},\n    validator: BTCValidator\n},{\n    name: 'dogecoin',\n    symbol: 'doge',\n    addressTypes: {prod: ['1e', '16'], testnet: ['71', 'c4']},\n    validator: BTCValidator\n},{\n    name: 'beavercoin',\n    symbol: 'bvc',\n    addressTypes: {prod: ['19', '05'], testnet: ['6f', 'c4']},\n    validator: BTCValidator,\n},{\n    name: 'freicoin',\n    symbol: 'frc',\n    addressTypes: {prod: ['00', '05'], testnet: ['6f', 'c4']},\n    validator: BTCValidator\n},{\n    name: 'protoshares',\n    symbol: 'pts',\n    addressTypes: {prod: ['38', '05'], testnet: ['6f', 'c4']},\n    validator: BTCValidator\n},{\n    name: 'megacoin',\n    symbol: 'mec',\n    addressTypes: {prod: ['32', '05'], testnet: ['6f', 'c4']},\n    validator: BTCValidator\n},{\n    name: 'primecoin',\n    symbol: 'xpm',\n    addressTypes: {prod: ['17', '53'], testnet: ['6f', 'c4']},\n    validator: BTCValidator\n},{\n    name: 'auroracoin',\n    symbol: 'aur',\n    addressTypes: {prod: ['17', '05'], testnet: ['6f', 'c4']},\n    validator: BTCValidator\n},{\n    name: 'namecoin',\n    symbol: 'nmc',\n    addressTypes: {prod: ['34'], testnet: []},\n    validator: BTCValidator\n},{\n    name: 'biocoin',\n    symbol: 'bio',\n    addressTypes: {prod: ['19', '14'], testnet: ['6f', 'c4']},\n    validator: BTCValidator\n},{\n    name: 'garlicoin',\n    symbol: 'grlc',\n    addressTypes: {prod: ['26', '05'], testnet: ['6f', 'c4']},\n    validator: BTCValidator\n},{\n    name: 'vertcoin',\n    symbol: 'vtc',\n    addressTypes: {prod: ['0x', '47'], testnet: ['6f', 'c4']},\n    segwitHrp: 'vtc',\n    validator: BTCValidator\n},{\n    name: 'bitcoingold',\n    symbol: 'btg',\n    addressTypes: {prod: ['26', '17'], testnet: ['6f', 'c4']},\n    validator: BTCValidator\n},{\n    name: 'komodo',\n    symbol: 'kmd',\n    addressTypes: {prod: ['3c', '55'], testnet: ['0','5']},\n    validator: BTCValidator\n},{\n    name: 'bitcoinz',\n    symbol: 'btcz',\n    expectedLength: 26,\n    addressTypes: {prod: ['1cb8','1cbd'], testnet: ['1d25', '1cba']},\n    validator: BTCValidator\n},{\n    name: 'bitcoinprivate',\n    symbol: 'btcp',\n    expectedLength: 26,\n    addressTypes: {prod: ['1325','13af'], testnet: ['1957', '19e0']},\n    validator: BTCValidator\n},{\n    name: 'hush',\n    symbol: 'hush',\n    expectedLength: 26,\n    addressTypes: {prod: ['1cb8','1cbd'], testnet: ['1d25', '1cba']},\n    validator: BTCValidator\n},{\n    name: 'snowgem',\n    symbol: 'sng',\n    expectedLength: 26,\n    addressTypes: {prod: ['1c28','1c2d'], testnet: ['1d25', '1cba']},\n    validator: BTCValidator\n},{\n    name: 'zcash',\n    symbol: 'zec',\n    expectedLength: 26,\n    addressTypes: {prod: ['1cb8','1cbd'], testnet: ['1d25', '1cba']},\n    validator: BTCValidator\n},{\n    name: 'zclassic',\n    symbol: 'zcl',\n    expectedLength: 26,\n    addressTypes: {prod: ['1cb8','1cbd'], testnet: ['1d25', '1cba']},\n    validator: BTCValidator\n},{\n    name: 'zencash',\n    symbol: 'zen',\n    expectedLength: 26,\n    addressTypes: {prod: ['2089','2096'], testnet: ['2092','2098']},\n    validator: BTCValidator\n},{\n    name: 'votecoin',\n    symbol: 'vot',\n    expectedLength: 26,\n    addressTypes: {prod: ['1cb8','1cbd'], testnet: ['1d25', '1cba']},\n    validator: BTCValidator\n},{\n    name: 'decred',\n    symbol: 'dcr',\n    addressTypes: {prod: ['073f', '071a'], testnet: ['0f21', '0efc']},\n    hashFunction: 'blake256',\n    expectedLength: 26,\n    validator: BTCValidator\n},{\n    name: 'digibyte',\n    symbol: 'dgb',\n    addressTypes: {prod: ['1e'], testnet: []},\n    validator: BTCValidator\n},{\n    name: 'ethereum',\n    symbol: 'eth',\n    validator: ETHValidator,\n},{\n    name: 'etherzero',\n    symbol: 'etz',\n    validator: ETHValidator,\n},{\n    name: 'ethereumclassic',\n    symbol: 'etc',\n    validator: ETHValidator,\n},{\n    name: 'callisto',\n    symbol: 'clo',\n    validator: ETHValidator,\n},{\n    name: 'ripple',\n    symbol: 'xrp',\n    validator: XRPValidator,\n},{\n    name: 'dash',\n    symbol: 'dash',\n    addressTypes: {prod: ['4c', '10'], testnet: ['8c', '13']},\n    validator: BTCValidator\n},{\n    name: 'neo',\n    symbol: 'neo',\n    addressTypes: {prod: ['17'], testnet: []},\n    validator: BTCValidator\n},{\n    name: 'neogas',\n    symbol: 'gas',\n    addressTypes: {prod: ['17'], testnet: []},\n    validator: BTCValidator\n},{\n    name: 'qtum',\n    symbol: 'qtum',\n    addressTypes: {prod: ['3a', '32'], testnet: ['78', '6e']},\n    validator: BTCValidator\n},{\n    name: 'bankex',\n    symbol: 'bkx',\n    validator: ETHValidator\n},{\n    name: 'monero',\n    symbol: 'xmr',\n    addressTypes: {prod: ['18'], testnet: ['53']},\n    iAddressTypes: {prod: ['19'], testnet: ['54']},\n    validator: XMRValidator\n},{\n    name: 'nano',\n    symbol: 'nano',\n    validator: NANOValidator,\n},{\n    name: 'raiblocks',\n    symbol: 'xrb',\n    validator: NANOValidator,\n}];\n\n\nmodule.exports = {\n    getByNameOrSymbol: function (currencyNameOrSymbol) {\n        var nameOrSymbol = currencyNameOrSymbol.toLowerCase();\n        for (var i = 0; i < CURRENCIES.length; i++) {\n            var currency = CURRENCIES[i];\n            if(currency.name === nameOrSymbol || currency.symbol === nameOrSymbol) {\n                return currency;\n            }\n        }\n        return null;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/currencies.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/ethereum_validator.js":
/*!*************************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/ethereum_validator.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var cryptoUtils = __webpack_require__(/*! ./crypto/utils */ \"./node_modules/wallet-address-validator/src/crypto/utils.js\");\n\nmodule.exports = {\n    isValidAddress: function (address) {\n        if (!/^0x[0-9a-fA-F]{40}$/.test(address)) {\n            // Check if it has the basic requirements of an address\n            return false;\n        }\n\n        if (/^0x[0-9a-f]{40}$/.test(address) || /^0x?[0-9A-F]{40}$/.test(address)) {\n            // If it's all small caps or all all caps, return true\n            return true;\n        }\n\n        // Otherwise check each case\n        return this.verifyChecksum(address);\n    },\n    verifyChecksum: function (address) {\n        // Check each case\n        address = address.replace('0x','');\n\n        var addressHash = cryptoUtils.keccak256(address.toLowerCase());\n\n        for (var i = 0; i < 40; i++ ) {\n            // The nth letter should be uppercase if the nth digit of casemap is 1\n            if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) ||\n                (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3dhbGxldC1hZGRyZXNzLXZhbGlkYXRvci9zcmMvZXRoZXJldW1fdmFsaWRhdG9yLmpzPzA3YmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCLG1CQUFPLENBQUMsbUZBQWdCOztBQUUxQztBQUNBO0FBQ0EsNkJBQTZCLEdBQUc7QUFDaEM7QUFDQTtBQUNBOztBQUVBLHlCQUF5QixHQUFHLGtDQUFrQyxHQUFHO0FBQ2pFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSx1QkFBdUIsUUFBUTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dhbGxldC1hZGRyZXNzLXZhbGlkYXRvci9zcmMvZXRoZXJldW1fdmFsaWRhdG9yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNyeXB0b1V0aWxzID0gcmVxdWlyZSgnLi9jcnlwdG8vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgaXNWYWxpZEFkZHJlc3M6IGZ1bmN0aW9uIChhZGRyZXNzKSB7XG4gICAgICAgIGlmICghL14weFswLTlhLWZBLUZdezQwfSQvLnRlc3QoYWRkcmVzcykpIHtcbiAgICAgICAgICAgIC8vIENoZWNrIGlmIGl0IGhhcyB0aGUgYmFzaWMgcmVxdWlyZW1lbnRzIG9mIGFuIGFkZHJlc3NcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICgvXjB4WzAtOWEtZl17NDB9JC8udGVzdChhZGRyZXNzKSB8fCAvXjB4P1swLTlBLUZdezQwfSQvLnRlc3QoYWRkcmVzcykpIHtcbiAgICAgICAgICAgIC8vIElmIGl0J3MgYWxsIHNtYWxsIGNhcHMgb3IgYWxsIGFsbCBjYXBzLCByZXR1cm4gdHJ1ZVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBPdGhlcndpc2UgY2hlY2sgZWFjaCBjYXNlXG4gICAgICAgIHJldHVybiB0aGlzLnZlcmlmeUNoZWNrc3VtKGFkZHJlc3MpO1xuICAgIH0sXG4gICAgdmVyaWZ5Q2hlY2tzdW06IGZ1bmN0aW9uIChhZGRyZXNzKSB7XG4gICAgICAgIC8vIENoZWNrIGVhY2ggY2FzZVxuICAgICAgICBhZGRyZXNzID0gYWRkcmVzcy5yZXBsYWNlKCcweCcsJycpO1xuXG4gICAgICAgIHZhciBhZGRyZXNzSGFzaCA9IGNyeXB0b1V0aWxzLmtlY2NhazI1NihhZGRyZXNzLnRvTG93ZXJDYXNlKCkpO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNDA7IGkrKyApIHtcbiAgICAgICAgICAgIC8vIFRoZSBudGggbGV0dGVyIHNob3VsZCBiZSB1cHBlcmNhc2UgaWYgdGhlIG50aCBkaWdpdCBvZiBjYXNlbWFwIGlzIDFcbiAgICAgICAgICAgIGlmICgocGFyc2VJbnQoYWRkcmVzc0hhc2hbaV0sIDE2KSA+IDcgJiYgYWRkcmVzc1tpXS50b1VwcGVyQ2FzZSgpICE9PSBhZGRyZXNzW2ldKSB8fFxuICAgICAgICAgICAgICAgIChwYXJzZUludChhZGRyZXNzSGFzaFtpXSwgMTYpIDw9IDcgJiYgYWRkcmVzc1tpXS50b0xvd2VyQ2FzZSgpICE9PSBhZGRyZXNzW2ldKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/ethereum_validator.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/monero_validator.js":
/*!***********************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/monero_validator.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var cryptoUtils = __webpack_require__(/*! ./crypto/utils */ \"./node_modules/wallet-address-validator/src/crypto/utils.js\");\nvar cnBase58 = __webpack_require__(/*! ./crypto/cnBase58 */ \"./node_modules/wallet-address-validator/src/crypto/cnBase58.js\");\n\nvar DEFAULT_NETWORK_TYPE = 'prod';\nvar addressRegTest = new RegExp('^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{95}$');\nvar integratedAddressRegTest = new RegExp('^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{106}$');\n\nfunction validateNetwork(decoded, currency, networkType, addressType){\n    var network = currency.addressTypes;\n    if(addressType == 'integrated'){\n        network = currency.iAddressTypes;\n    }\n\n    switch(networkType){\n        case 'prod':\n            return parseInt(decoded.substr(0,2), 16) == network.prod[0];\n        case 'testnet':\n            return parseInt(decoded.substr(0,2), 16) == network.testnet[0];\n        case 'both':\n            return parseInt(decoded.substr(0,2), 16) == network.prod[0] || parseInt(decoded.substr(0,2), 16) == network.testnet[0];\n        default:\n            return false;\n    }\n}\n\nfunction hextobin(hex) {\n    if (hex.length % 2 !== 0) return null;\n    var res = new Uint8Array(hex.length / 2);\n    for (var i = 0; i < hex.length / 2; ++i) {\n        res[i] = parseInt(hex.slice(i * 2, i * 2 + 2), 16);\n    }\n    return res;\n}\n\nmodule.exports = {\n    isValidAddress: function (address, currency, networkType) {\n        networkType = networkType || DEFAULT_NETWORK_TYPE;\n        var addressType = 'standard';\n        if(!addressRegTest.test(address)){\n            if(integratedAddressRegTest.test(address)){\n                addressType = 'integrated';\n            }\n            else{\n                return false;\n            }\n        }\n\n        var decodedAddrStr = cnBase58.decode(address);\n        if(!decodedAddrStr)\n            return false;\n\n        if(!validateNetwork(decodedAddrStr, currency, networkType, addressType))\n            return false;\n\n        var addrChecksum = decodedAddrStr.slice(-8);\n        var hashChecksum = cryptoUtils.keccak256Checksum(hextobin(decodedAddrStr.slice(0, -8)));\n        \n        return addrChecksum === hashChecksum;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3dhbGxldC1hZGRyZXNzLXZhbGlkYXRvci9zcmMvbW9uZXJvX3ZhbGlkYXRvci5qcz9kODYwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixtQkFBTyxDQUFDLG1GQUFnQjtBQUMxQyxlQUFlLG1CQUFPLENBQUMseUZBQW1COztBQUUxQztBQUNBLCtGQUErRixHQUFHO0FBQ2xHLHlHQUF5RyxJQUFJOztBQUU3RztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG9CQUFvQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2FsbGV0LWFkZHJlc3MtdmFsaWRhdG9yL3NyYy9tb25lcm9fdmFsaWRhdG9yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNyeXB0b1V0aWxzID0gcmVxdWlyZSgnLi9jcnlwdG8vdXRpbHMnKTtcbnZhciBjbkJhc2U1OCA9IHJlcXVpcmUoJy4vY3J5cHRvL2NuQmFzZTU4Jyk7XG5cbnZhciBERUZBVUxUX05FVFdPUktfVFlQRSA9ICdwcm9kJztcbnZhciBhZGRyZXNzUmVnVGVzdCA9IG5ldyBSZWdFeHAoJ15bMTIzNDU2Nzg5QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaYWJjZGVmZ2hpamttbm9wcXJzdHV2d3h5el17OTV9JCcpO1xudmFyIGludGVncmF0ZWRBZGRyZXNzUmVnVGVzdCA9IG5ldyBSZWdFeHAoJ15bMTIzNDU2Nzg5QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaYWJjZGVmZ2hpamttbm9wcXJzdHV2d3h5el17MTA2fSQnKTtcblxuZnVuY3Rpb24gdmFsaWRhdGVOZXR3b3JrKGRlY29kZWQsIGN1cnJlbmN5LCBuZXR3b3JrVHlwZSwgYWRkcmVzc1R5cGUpe1xuICAgIHZhciBuZXR3b3JrID0gY3VycmVuY3kuYWRkcmVzc1R5cGVzO1xuICAgIGlmKGFkZHJlc3NUeXBlID09ICdpbnRlZ3JhdGVkJyl7XG4gICAgICAgIG5ldHdvcmsgPSBjdXJyZW5jeS5pQWRkcmVzc1R5cGVzO1xuICAgIH1cblxuICAgIHN3aXRjaChuZXR3b3JrVHlwZSl7XG4gICAgICAgIGNhc2UgJ3Byb2QnOlxuICAgICAgICAgICAgcmV0dXJuIHBhcnNlSW50KGRlY29kZWQuc3Vic3RyKDAsMiksIDE2KSA9PSBuZXR3b3JrLnByb2RbMF07XG4gICAgICAgIGNhc2UgJ3Rlc3RuZXQnOlxuICAgICAgICAgICAgcmV0dXJuIHBhcnNlSW50KGRlY29kZWQuc3Vic3RyKDAsMiksIDE2KSA9PSBuZXR3b3JrLnRlc3RuZXRbMF07XG4gICAgICAgIGNhc2UgJ2JvdGgnOlxuICAgICAgICAgICAgcmV0dXJuIHBhcnNlSW50KGRlY29kZWQuc3Vic3RyKDAsMiksIDE2KSA9PSBuZXR3b3JrLnByb2RbMF0gfHwgcGFyc2VJbnQoZGVjb2RlZC5zdWJzdHIoMCwyKSwgMTYpID09IG5ldHdvcmsudGVzdG5ldFswXTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGhleHRvYmluKGhleCkge1xuICAgIGlmIChoZXgubGVuZ3RoICUgMiAhPT0gMCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIHJlcyA9IG5ldyBVaW50OEFycmF5KGhleC5sZW5ndGggLyAyKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGhleC5sZW5ndGggLyAyOyArK2kpIHtcbiAgICAgICAgcmVzW2ldID0gcGFyc2VJbnQoaGV4LnNsaWNlKGkgKiAyLCBpICogMiArIDIpLCAxNik7XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGlzVmFsaWRBZGRyZXNzOiBmdW5jdGlvbiAoYWRkcmVzcywgY3VycmVuY3ksIG5ldHdvcmtUeXBlKSB7XG4gICAgICAgIG5ldHdvcmtUeXBlID0gbmV0d29ya1R5cGUgfHwgREVGQVVMVF9ORVRXT1JLX1RZUEU7XG4gICAgICAgIHZhciBhZGRyZXNzVHlwZSA9ICdzdGFuZGFyZCc7XG4gICAgICAgIGlmKCFhZGRyZXNzUmVnVGVzdC50ZXN0KGFkZHJlc3MpKXtcbiAgICAgICAgICAgIGlmKGludGVncmF0ZWRBZGRyZXNzUmVnVGVzdC50ZXN0KGFkZHJlc3MpKXtcbiAgICAgICAgICAgICAgICBhZGRyZXNzVHlwZSA9ICdpbnRlZ3JhdGVkJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGRlY29kZWRBZGRyU3RyID0gY25CYXNlNTguZGVjb2RlKGFkZHJlc3MpO1xuICAgICAgICBpZighZGVjb2RlZEFkZHJTdHIpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG5cbiAgICAgICAgaWYoIXZhbGlkYXRlTmV0d29yayhkZWNvZGVkQWRkclN0ciwgY3VycmVuY3ksIG5ldHdvcmtUeXBlLCBhZGRyZXNzVHlwZSkpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG5cbiAgICAgICAgdmFyIGFkZHJDaGVja3N1bSA9IGRlY29kZWRBZGRyU3RyLnNsaWNlKC04KTtcbiAgICAgICAgdmFyIGhhc2hDaGVja3N1bSA9IGNyeXB0b1V0aWxzLmtlY2NhazI1NkNoZWNrc3VtKGhleHRvYmluKGRlY29kZWRBZGRyU3RyLnNsaWNlKDAsIC04KSkpO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIGFkZHJDaGVja3N1bSA9PT0gaGFzaENoZWNrc3VtO1xuICAgIH1cbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/monero_validator.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/nano_validator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/nano_validator.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var cryptoUtils = __webpack_require__(/*! ./crypto/utils */ \"./node_modules/wallet-address-validator/src/crypto/utils.js\");\nvar baseX = __webpack_require__(/*! base-x */ \"./node_modules/base-x/src/index.js\");\n\nvar ALLOWED_CHARS = '13456789abcdefghijkmnopqrstuwxyz';\n\nvar codec = baseX(ALLOWED_CHARS);\n// https://github.com/nanocurrency/raiblocks/wiki/Accounts,-Keys,-Seeds,-and-Wallet-Identifiers\nvar regexp = new RegExp('^(xrb|nano)_([' + ALLOWED_CHARS + ']{60})$');\n\nmodule.exports = {\n    isValidAddress: function (address) {\n        if (regexp.test(address)) {\n            return this.verifyChecksum(address);\n        }\n\n        return false;\n    },\n\n    verifyChecksum: function (address) {\n        var bytes = codec.decode(regexp.exec(address)[2]).slice(-37);\n        // https://github.com/nanocurrency/raiblocks/blob/master/rai/lib/numbers.cpp#L73\n        var computedChecksum = cryptoUtils.blake2b(cryptoUtils.toHex(bytes.slice(0, -5)), 5);\n        var checksum = cryptoUtils.toHex(bytes.slice(-5).reverse());\n\n        return computedChecksum === checksum\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3dhbGxldC1hZGRyZXNzLXZhbGlkYXRvci9zcmMvbmFub192YWxpZGF0b3IuanM/OGFjYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IsbUJBQU8sQ0FBQyxtRkFBZ0I7QUFDMUMsWUFBWSxtQkFBTyxDQUFDLGtEQUFROztBQUU1Qjs7QUFFQTtBQUNBO0FBQ0EsOERBQThELEdBQUc7O0FBRWpFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dhbGxldC1hZGRyZXNzLXZhbGlkYXRvci9zcmMvbmFub192YWxpZGF0b3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY3J5cHRvVXRpbHMgPSByZXF1aXJlKCcuL2NyeXB0by91dGlscycpO1xudmFyIGJhc2VYID0gcmVxdWlyZSgnYmFzZS14Jyk7XG5cbnZhciBBTExPV0VEX0NIQVJTID0gJzEzNDU2Nzg5YWJjZGVmZ2hpamttbm9wcXJzdHV3eHl6JztcblxudmFyIGNvZGVjID0gYmFzZVgoQUxMT1dFRF9DSEFSUyk7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vbmFub2N1cnJlbmN5L3JhaWJsb2Nrcy93aWtpL0FjY291bnRzLC1LZXlzLC1TZWVkcywtYW5kLVdhbGxldC1JZGVudGlmaWVyc1xudmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJ14oeHJifG5hbm8pXyhbJyArIEFMTE9XRURfQ0hBUlMgKyAnXXs2MH0pJCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBpc1ZhbGlkQWRkcmVzczogZnVuY3Rpb24gKGFkZHJlc3MpIHtcbiAgICAgICAgaWYgKHJlZ2V4cC50ZXN0KGFkZHJlc3MpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy52ZXJpZnlDaGVja3N1bShhZGRyZXNzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9LFxuXG4gICAgdmVyaWZ5Q2hlY2tzdW06IGZ1bmN0aW9uIChhZGRyZXNzKSB7XG4gICAgICAgIHZhciBieXRlcyA9IGNvZGVjLmRlY29kZShyZWdleHAuZXhlYyhhZGRyZXNzKVsyXSkuc2xpY2UoLTM3KTtcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL25hbm9jdXJyZW5jeS9yYWlibG9ja3MvYmxvYi9tYXN0ZXIvcmFpL2xpYi9udW1iZXJzLmNwcCNMNzNcbiAgICAgICAgdmFyIGNvbXB1dGVkQ2hlY2tzdW0gPSBjcnlwdG9VdGlscy5ibGFrZTJiKGNyeXB0b1V0aWxzLnRvSGV4KGJ5dGVzLnNsaWNlKDAsIC01KSksIDUpO1xuICAgICAgICB2YXIgY2hlY2tzdW0gPSBjcnlwdG9VdGlscy50b0hleChieXRlcy5zbGljZSgtNSkucmV2ZXJzZSgpKTtcblxuICAgICAgICByZXR1cm4gY29tcHV0ZWRDaGVja3N1bSA9PT0gY2hlY2tzdW1cbiAgICB9XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/nano_validator.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/ripple_validator.js":
/*!***********************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/ripple_validator.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var cryptoUtils = __webpack_require__(/*! ./crypto/utils */ \"./node_modules/wallet-address-validator/src/crypto/utils.js\");\nvar baseX = __webpack_require__(/*! base-x */ \"./node_modules/base-x/src/index.js\");\n\nvar ALLOWED_CHARS = 'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz';\n\nvar codec = baseX(ALLOWED_CHARS);\nvar regexp = new RegExp('^r[' + ALLOWED_CHARS + ']{27,35}$');\n\nmodule.exports = {\n    /**\n     * ripple address validation\n     */\n    isValidAddress: function (address) {\n        if (regexp.test(address)) {\n            return this.verifyChecksum(address);\n        }\n\n        return false;\n    },\n\n    verifyChecksum: function (address) {\n        var bytes = codec.decode(address);\n        var computedChecksum = cryptoUtils.sha256Checksum(cryptoUtils.toHex(bytes.slice(0, -4)));\n        var checksum = cryptoUtils.toHex(bytes.slice(-4));\n\n        return computedChecksum === checksum\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3dhbGxldC1hZGRyZXNzLXZhbGlkYXRvci9zcmMvcmlwcGxlX3ZhbGlkYXRvci5qcz80NjU2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixtQkFBTyxDQUFDLG1GQUFnQjtBQUMxQyxZQUFZLG1CQUFPLENBQUMsa0RBQVE7O0FBRTVCOztBQUVBO0FBQ0EsbURBQW1ELE1BQU07O0FBRXpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy93YWxsZXQtYWRkcmVzcy12YWxpZGF0b3Ivc3JjL3JpcHBsZV92YWxpZGF0b3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY3J5cHRvVXRpbHMgPSByZXF1aXJlKCcuL2NyeXB0by91dGlscycpO1xudmFyIGJhc2VYID0gcmVxdWlyZSgnYmFzZS14Jyk7XG5cbnZhciBBTExPV0VEX0NIQVJTID0gJ3Jwc2huYWYzOXdCVURORUdISktMTTRQUVJTVDdWV1hZWjJiY2RlQ2c2NWprbThvRnFpMXR1dkF4eXonO1xuXG52YXIgY29kZWMgPSBiYXNlWChBTExPV0VEX0NIQVJTKTtcbnZhciByZWdleHAgPSBuZXcgUmVnRXhwKCdeclsnICsgQUxMT1dFRF9DSEFSUyArICddezI3LDM1fSQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgLyoqXG4gICAgICogcmlwcGxlIGFkZHJlc3MgdmFsaWRhdGlvblxuICAgICAqL1xuICAgIGlzVmFsaWRBZGRyZXNzOiBmdW5jdGlvbiAoYWRkcmVzcykge1xuICAgICAgICBpZiAocmVnZXhwLnRlc3QoYWRkcmVzcykpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnZlcmlmeUNoZWNrc3VtKGFkZHJlc3MpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0sXG5cbiAgICB2ZXJpZnlDaGVja3N1bTogZnVuY3Rpb24gKGFkZHJlc3MpIHtcbiAgICAgICAgdmFyIGJ5dGVzID0gY29kZWMuZGVjb2RlKGFkZHJlc3MpO1xuICAgICAgICB2YXIgY29tcHV0ZWRDaGVja3N1bSA9IGNyeXB0b1V0aWxzLnNoYTI1NkNoZWNrc3VtKGNyeXB0b1V0aWxzLnRvSGV4KGJ5dGVzLnNsaWNlKDAsIC00KSkpO1xuICAgICAgICB2YXIgY2hlY2tzdW0gPSBjcnlwdG9VdGlscy50b0hleChieXRlcy5zbGljZSgtNCkpO1xuXG4gICAgICAgIHJldHVybiBjb21wdXRlZENoZWNrc3VtID09PSBjaGVja3N1bVxuICAgIH1cbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/ripple_validator.js\n");

/***/ }),

/***/ "./node_modules/wallet-address-validator/src/wallet_address_validator.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/wallet-address-validator/src/wallet_address_validator.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var currencies = __webpack_require__(/*! ./currencies */ \"./node_modules/wallet-address-validator/src/currencies.js\");\n\nvar DEFAULT_CURRENCY_NAME = 'bitcoin';\n\nmodule.exports = {\n    validate: function (address, currencyNameOrSymbol, networkType) {\n        var currency = currencies.getByNameOrSymbol(currencyNameOrSymbol || DEFAULT_CURRENCY_NAME);\n\n        if (currency.validator) {\n            return currency.validator.isValidAddress(address, currency, networkType);\n        }\n\n        throw new Error('Missing validator for currency: ' + currencyNameOrSymbol);\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3dhbGxldC1hZGRyZXNzLXZhbGlkYXRvci9zcmMvd2FsbGV0X2FkZHJlc3NfdmFsaWRhdG9yLmpzPzgyMzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsK0VBQWM7O0FBRXZDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0wiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2FsbGV0LWFkZHJlc3MtdmFsaWRhdG9yL3NyYy93YWxsZXRfYWRkcmVzc192YWxpZGF0b3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY3VycmVuY2llcyA9IHJlcXVpcmUoJy4vY3VycmVuY2llcycpO1xuXG52YXIgREVGQVVMVF9DVVJSRU5DWV9OQU1FID0gJ2JpdGNvaW4nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICB2YWxpZGF0ZTogZnVuY3Rpb24gKGFkZHJlc3MsIGN1cnJlbmN5TmFtZU9yU3ltYm9sLCBuZXR3b3JrVHlwZSkge1xuICAgICAgICB2YXIgY3VycmVuY3kgPSBjdXJyZW5jaWVzLmdldEJ5TmFtZU9yU3ltYm9sKGN1cnJlbmN5TmFtZU9yU3ltYm9sIHx8IERFRkFVTFRfQ1VSUkVOQ1lfTkFNRSk7XG5cbiAgICAgICAgaWYgKGN1cnJlbmN5LnZhbGlkYXRvcikge1xuICAgICAgICAgICAgcmV0dXJuIGN1cnJlbmN5LnZhbGlkYXRvci5pc1ZhbGlkQWRkcmVzcyhhZGRyZXNzLCBjdXJyZW5jeSwgbmV0d29ya1R5cGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNaXNzaW5nIHZhbGlkYXRvciBmb3IgY3VycmVuY3k6ICcgKyBjdXJyZW5jeU5hbWVPclN5bWJvbCk7XG4gICAgfSxcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/wallet-address-validator/src/wallet_address_validator.js\n");

/***/ }),

/***/ "./views/app/global-settings/GlobalSettings.js":
/*!*****************************************************!*\
  !*** ./views/app/global-settings/GlobalSettings.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router-dom/esm/react-router-dom.js\");\n/* harmony import */ var react_feather__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react-feather */ \"./node_modules/react-feather/dist/index.js\");\n/* harmony import */ var _utils_Constant__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../utils/Constant */ \"./utils/Constant.js\");\n/* harmony import */ var _redux_actions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../redux/actions */ \"./redux/actions.js\");\n/* harmony import */ var _utils_Thunk__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../utils/Thunk */ \"./utils/Thunk.js\");\n/* harmony import */ var _utils_Helper__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../utils/Helper */ \"./utils/Helper.js\");\n/* harmony import */ var _global_settings_scss__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./global-settings.scss */ \"./views/app/global-settings/global-settings.scss\");\n/* harmony import */ var _global_settings_scss__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_global_settings_scss__WEBPACK_IMPORTED_MODULE_16__);\n\n\n\n\n\n\n\n\nvar _jsxFileName = \"/Volumes/VM/Data/Work/Micky/Charles/DevDao/code/devdao/views/app/global-settings/GlobalSettings.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable no-undef */\n\n\n\n\n\n\n\n\n\n\nvar WAValidator = __webpack_require__(/*! wallet-address-validator */ \"./node_modules/wallet-address-validator/src/wallet_address_validator.js\");\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authUser: state.global.authUser,\n    settings: state.global.settings,\n    masterPasswordStatus: state.admin.masterPasswordStatus\n  };\n};\n\nvar GlobalSettings = /*#__PURE__*/function (_Component) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(GlobalSettings, _Component);\n\n  var _super = _createSuper(GlobalSettings);\n\n  function GlobalSettings(props) {\n    var _this;\n\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, GlobalSettings);\n\n    _this = _super.call(this, props);\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_this), \"clickEdit\", function (e) {\n      e.preventDefault();\n\n      _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"setCustomModalData\"])({\n        \"master-password\": {\n          render: true,\n          title: \"Please Enter the Master Password\"\n        }\n      }));\n\n      _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"setActiveModal\"])(\"custom-global-modal\"));\n    });\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_this), \"clickCancel\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        editing: false\n      });\n    });\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_this), \"submit\", function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          time_before_op_do = _this$state.time_before_op_do,\n          time_unit_before_op_do = _this$state.time_unit_before_op_do,\n          can_op_start_informal = _this$state.can_op_start_informal,\n          autostart_formal_votes = _this$state.autostart_formal_votes,\n          autoactivate_grants = _this$state.autoactivate_grants,\n          time_before_op_informal = _this$state.time_before_op_informal,\n          time_unit_before_op_informal = _this$state.time_unit_before_op_informal,\n          time_before_op_informal_simple = _this$state.time_before_op_informal_simple,\n          time_unit_before_op_informal_simple = _this$state.time_unit_before_op_informal_simple,\n          time_informal = _this$state.time_informal,\n          time_unit_informal = _this$state.time_unit_informal,\n          time_formal = _this$state.time_formal,\n          time_unit_formal = _this$state.time_unit_formal,\n          time_simple = _this$state.time_simple,\n          time_unit_simple = _this$state.time_unit_simple,\n          time_milestone = _this$state.time_milestone,\n          time_unit_milestone = _this$state.time_unit_milestone,\n          dos_fee_amount = _this$state.dos_fee_amount,\n          eth_address = _this$state.eth_address,\n          btc_address = _this$state.btc_address,\n          rep_amount = _this$state.rep_amount,\n          minted_ratio = _this$state.minted_ratio,\n          op_percentage = _this$state.op_percentage,\n          pass_rate = _this$state.pass_rate,\n          quorum_rate = _this$state.quorum_rate,\n          pass_rate_simple = _this$state.pass_rate_simple,\n          quorum_rate_simple = _this$state.quorum_rate_simple,\n          pass_rate_milestone = _this$state.pass_rate_milestone,\n          quorum_rate_milestone = _this$state.quorum_rate_milestone,\n          coo_email = _this$state.coo_email,\n          cfo_email = _this$state.cfo_email,\n          board_member_email = _this$state.board_member_email,\n          president_email = _this$state.president_email,\n          need_to_approve = _this$state.need_to_approve;\n\n      if (!coo_email || !_utils_Helper__WEBPACK_IMPORTED_MODULE_15__[\"default\"].validateEmail(coo_email)) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid COO Email\"));\n\n        return;\n      }\n\n      if (!cfo_email || !_utils_Helper__WEBPACK_IMPORTED_MODULE_15__[\"default\"].validateEmail(cfo_email)) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid CFO Email\"));\n\n        return;\n      }\n\n      if (!board_member_email || !_utils_Helper__WEBPACK_IMPORTED_MODULE_15__[\"default\"].validateEmail(board_member_email)) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid Board Member Email\"));\n\n        return;\n      }\n\n      if (!president_email || !_utils_Helper__WEBPACK_IMPORTED_MODULE_15__[\"default\"].validateEmail(president_email)) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid President Email\"));\n\n        return;\n      }\n\n      if (!time_before_op_do.trim() || !time_unit_before_op_do) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid 'Time before OP can accept/deny change'\"));\n\n        return;\n      }\n\n      if (!time_before_op_informal.trim() || !time_unit_before_op_informal) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid 'Time before OP can start informal vote'\"));\n\n        return;\n      }\n\n      if (!time_before_op_informal_simple.trim() || !time_unit_before_op_informal_simple) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid 'Time before OP can start simple vote'\"));\n\n        return;\n      }\n\n      if (!time_informal.trim() || !time_unit_informal) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid 'Time allowed for informal voting'\"));\n\n        return;\n      }\n\n      if (!time_formal.trim() || !time_unit_formal) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid 'Time allowed for formal voting'\"));\n\n        return;\n      }\n\n      if (!time_simple.trim() || !time_unit_simple) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid 'Time allowed for simple voting (formal & informal)'\"));\n\n        return;\n      }\n\n      if (!time_milestone.trim() || !time_unit_milestone) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid 'Time allowed for simple milestone (formal & informal)'\"));\n\n        return;\n      }\n\n      if (!dos_fee_amount.trim() || !dos_fee_amount) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input DOS fee amount\"));\n\n        return;\n      }\n\n      if (!WAValidator.validate(eth_address, \"ETH\")) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid ETH payment address\"));\n\n        return;\n      }\n\n      if (!minted_ratio.trim() || !minted_ratio) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input minted ratio\"));\n\n        return;\n      }\n\n      if (parseFloat(minted_ratio) < 0 || parseFloat(minted_ratio) > 1) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid minted ratio (0 - 1)\"));\n\n        return;\n      }\n\n      if (!op_percentage.trim() || !op_percentage) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input OP percentage\"));\n\n        return;\n      }\n\n      if (parseFloat(op_percentage) < 0 || parseFloat(op_percentage) > 100) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid OP percentage (0 - 100)\"));\n\n        return;\n      }\n\n      if (!pass_rate.trim() || !pass_rate) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input Pass Rate\"));\n\n        return;\n      }\n\n      if (parseFloat(pass_rate) < 0 || parseFloat(pass_rate) > 100) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid Pass Rate percentage (0 - 100)\"));\n\n        return;\n      }\n\n      if (!pass_rate_simple.trim() || !pass_rate_simple) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input Pass Rate for Simple Proposal\"));\n\n        return;\n      }\n\n      if (parseFloat(pass_rate_simple) < 0 || parseFloat(pass_rate_simple) > 100) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid Pass Rate for Simple Proposal (0 - 100)\"));\n\n        return;\n      }\n\n      if (!pass_rate_milestone.trim() || !pass_rate_milestone) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input Pass Rate for Milestone Proposal\"));\n\n        return;\n      }\n\n      if (parseFloat(pass_rate_milestone) < 0 || parseFloat(pass_rate_milestone) > 100) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid Pass Rate for Milestone Proposal (0 - 100)\"));\n\n        return;\n      }\n\n      if (!quorum_rate.trim() || !quorum_rate) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input Quorum Rate\"));\n\n        return;\n      }\n\n      if (parseFloat(quorum_rate) < 0 || parseFloat(quorum_rate) > 100) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid Quorum Rate percentage (0 - 100)\"));\n\n        return;\n      }\n\n      if (!quorum_rate_simple.trim() || !quorum_rate_simple) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input Quorum Rate for Simple Proposal\"));\n\n        return;\n      }\n\n      if (parseFloat(quorum_rate_simple) < 0 || parseFloat(quorum_rate_simple) > 100) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid Quorum Rate for Simple Proposal (0 - 100)\"));\n\n        return;\n      }\n\n      if (!quorum_rate_milestone.trim() || !quorum_rate_milestone) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input Quorum Rate for Milestone Proposal\"));\n\n        return;\n      }\n\n      if (parseFloat(quorum_rate_milestone) < 0 || parseFloat(quorum_rate_milestone) > 100) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"Please input valid Quorum Rate for Milestone Proposal (0 - 100)\"));\n\n        return;\n      }\n\n      var params = {\n        coo_email: coo_email,\n        cfo_email: cfo_email,\n        board_member_email: board_member_email,\n        president_email: president_email,\n        time_before_op_do: time_before_op_do,\n        time_unit_before_op_do: time_unit_before_op_do,\n        can_op_start_informal: can_op_start_informal,\n        autostart_formal_votes: autostart_formal_votes,\n        autoactivate_grants: autoactivate_grants,\n        time_before_op_informal: time_before_op_informal,\n        time_unit_before_op_informal: time_unit_before_op_informal,\n        time_before_op_informal_simple: time_before_op_informal_simple,\n        time_unit_before_op_informal_simple: time_unit_before_op_informal_simple,\n        time_informal: time_informal,\n        time_unit_informal: time_unit_informal,\n        time_simple: time_simple,\n        time_unit_simple: time_unit_simple,\n        time_milestone: time_milestone,\n        time_unit_milestone: time_unit_milestone,\n        time_formal: time_formal,\n        time_unit_formal: time_unit_formal,\n        dos_fee_amount: dos_fee_amount,\n        btc_address: btc_address,\n        eth_address: eth_address,\n        rep_amount: rep_amount,\n        minted_ratio: minted_ratio,\n        op_percentage: op_percentage,\n        pass_rate: pass_rate,\n        quorum_rate: quorum_rate,\n        pass_rate_simple: pass_rate_simple,\n        quorum_rate_simple: quorum_rate_simple,\n        pass_rate_milestone: pass_rate_milestone,\n        quorum_rate_milestone: quorum_rate_milestone,\n        need_to_approve: need_to_approve\n      };\n\n      _this.props.dispatch(Object(_utils_Thunk__WEBPACK_IMPORTED_MODULE_14__[\"updateGlobalSettingsByAdmin\"])(params, function () {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showCanvas\"])());\n      }, function (res) {\n        _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"hideCanvas\"])());\n\n        if (res.success) {\n          _this.setState({\n            editing: false\n          });\n\n          _this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"showAlert\"])(\"You've successfully updated the settings\", \"success\"));\n        }\n      }));\n    });\n\n    _this.state = {\n      editing: false,\n      time_before_op_do: \"\",\n      time_unit_before_op_do: \"\",\n      can_op_start_informal: \"\",\n      autostart_formal_votes: \"\",\n      autoactivate_grants: \"\",\n      time_before_op_informal: \"\",\n      time_unit_before_op_informal: \"\",\n      time_before_op_informal_simple: \"\",\n      time_unit_before_op_informal_simple: \"\",\n      time_informal: \"\",\n      time_unit_informal: \"\",\n      time_formal: \"\",\n      time_unit_formal: \"\",\n      time_simple: \"\",\n      time_unit_simple: \"\",\n      time_milestone: \"\",\n      time_unit_milestone: \"\",\n      dos_fee_amount: \"\",\n      btc_address: \"\",\n      eth_address: \"\",\n      rep_amount: \"\",\n      minted_ratio: \"\",\n      op_percentage: \"\",\n      pass_rate: \"\",\n      quorum_rate: \"\",\n      pass_rate_simple: \"\",\n      quorum_rate_simple: \"\",\n      pass_rate_milestone: \"\",\n      quorum_rate_milestone: \"\",\n      coo_email: \"\",\n      cfo_email: \"\",\n      board_member_email: \"\",\n      president_email: \"\",\n      need_to_approve: \"\"\n    };\n    return _this;\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(GlobalSettings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var settings = this.props.settings;\n      if (settings && JSON.stringify(settings) != \"{}\") this.initValues();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          settings = _this$props.settings,\n          masterPasswordStatus = _this$props.masterPasswordStatus;\n      if (JSON.stringify(prevProps.settings) == \"{}\" && JSON.stringify(prevProps.settings) != JSON.stringify(settings)) this.initValues();\n\n      if (!prevProps.masterPasswordStatus && masterPasswordStatus) {\n        this.setState({\n          editing: true\n        });\n        this.props.dispatch(Object(_redux_actions__WEBPACK_IMPORTED_MODULE_13__[\"setMasterPasswordStatus\"])(false));\n      }\n    }\n  }, {\n    key: \"initValues\",\n    value: function initValues() {\n      var settings = this.props.settings;\n      this.setState({\n        time_before_op_do: settings.time_before_op_do || \"\",\n        time_unit_before_op_do: settings.time_unit_before_op_do || \"\",\n        can_op_start_informal: settings.can_op_start_informal || \"\",\n        autostart_formal_votes: settings.autostart_formal_votes || \"\",\n        autoactivate_grants: settings.autoactivate_grants || \"\",\n        time_before_op_informal: settings.time_before_op_informal || \"\",\n        time_unit_before_op_informal: settings.time_unit_before_op_informal || \"\",\n        time_before_op_informal_simple: settings.time_before_op_informal_simple || \"\",\n        time_unit_before_op_informal_simple: settings.time_unit_before_op_informal_simple || \"\",\n        time_informal: settings.time_informal || \"\",\n        time_unit_informal: settings.time_unit_informal || \"\",\n        time_formal: settings.time_formal || \"\",\n        time_unit_formal: settings.time_unit_formal || \"\",\n        time_simple: settings.time_simple || \"\",\n        time_unit_simple: settings.time_unit_simple || \"\",\n        time_milestone: settings.time_milestone || \"\",\n        time_unit_milestone: settings.time_unit_milestone || \"\",\n        dos_fee_amount: settings.dos_fee_amount || \"\",\n        btc_address: settings.btc_address || \"\",\n        eth_address: settings.eth_address || \"\",\n        rep_amount: settings.rep_amount || \"\",\n        minted_ratio: settings.minted_ratio || \"\",\n        op_percentage: settings.op_percentage || \"\",\n        pass_rate: settings.pass_rate || \"\",\n        quorum_rate: settings.quorum_rate || \"\",\n        pass_rate_simple: settings.pass_rate_simple || \"\",\n        quorum_rate_simple: settings.quorum_rate_simple || \"\",\n        pass_rate_milestone: settings.pass_rate_milestone || \"\",\n        quorum_rate_milestone: settings.quorum_rate_milestone || \"\",\n        coo_email: settings.coo_email || \"\",\n        cfo_email: settings.cfo_email || \"\",\n        board_member_email: settings.board_member_email || \"\",\n        president_email: settings.president_email || \"\",\n        need_to_approve: settings.need_to_approve || \"\"\n      });\n    } // Input Field\n\n  }, {\n    key: \"inputField\",\n    value: function inputField(e, key) {\n      var editing = this.state.editing;\n      if (!editing) return;\n      this.setState(Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, key, e.target.value));\n    } // Input Float Field\n\n  }, {\n    key: \"inputFloatField\",\n    value: function inputFloatField(e, key) {\n      var editing = this.state.editing;\n      if (!editing) return;\n      var value = e.target.value;\n      if (isNaN(value)) value = \"\";\n      value = _utils_Helper__WEBPACK_IMPORTED_MODULE_15__[\"default\"].adjustNumericString(value, 2);\n      this.setState(Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, key, value));\n    } // Input Float4 Field\n\n  }, {\n    key: \"inputFloat4Field\",\n    value: function inputFloat4Field(e, key) {\n      var editing = this.state.editing;\n      if (!editing) return;\n      var value = e.target.value;\n      if (isNaN(value)) value = \"\";\n      value = _utils_Helper__WEBPACK_IMPORTED_MODULE_15__[\"default\"].adjustNumericString(value, 4);\n      this.setState(Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, key, value));\n    }\n  }, {\n    key: \"inputIntField\",\n    value: function inputIntField(e, key) {\n      var editing = this.state.editing;\n      if (!editing) return;\n      var value = e.target.value;\n      if (value && isNaN(value)) value = \"\";\n      if (value) value = parseInt(value).toString();\n      if (value && parseInt(value) < 1) value = \"\";\n      this.setState(Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, key, value));\n    } // Set Check Box\n\n  }, {\n    key: \"setCheckbox\",\n    value: function setCheckbox(value, key) {\n      var editing = this.state.editing;\n      if (!editing) return;\n      this.setState(Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, key, value));\n    } // Click Edit\n\n  }, {\n    key: \"renderTimeUnitOptions\",\n    value: function renderTimeUnitOptions() {\n      var items = [];\n\n      for (var i in _utils_Constant__WEBPACK_IMPORTED_MODULE_12__[\"TIMEUNITS\"]) {\n        items.push( /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"option\", {\n          value: i,\n          children: _utils_Constant__WEBPACK_IMPORTED_MODULE_12__[\"TIMEUNITS\"][i]\n        }, \"option_\".concat(i), false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 9\n        }, this));\n      }\n\n      return items;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var authUser = this.props.authUser;\n      if (!authUser || !authUser.id) return null;\n      if (!authUser.is_admin) return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_router_dom__WEBPACK_IMPORTED_MODULE_10__[\"Redirect\"], {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 36\n      }, this);\n      var _this$state2 = this.state,\n          coo_email = _this$state2.coo_email,\n          cfo_email = _this$state2.cfo_email,\n          board_member_email = _this$state2.board_member_email,\n          president_email = _this$state2.president_email,\n          time_before_op_do = _this$state2.time_before_op_do,\n          time_unit_before_op_do = _this$state2.time_unit_before_op_do,\n          can_op_start_informal = _this$state2.can_op_start_informal,\n          time_before_op_informal = _this$state2.time_before_op_informal,\n          time_unit_before_op_informal = _this$state2.time_unit_before_op_informal,\n          time_before_op_informal_simple = _this$state2.time_before_op_informal_simple,\n          time_unit_before_op_informal_simple = _this$state2.time_unit_before_op_informal_simple,\n          time_informal = _this$state2.time_informal,\n          time_unit_informal = _this$state2.time_unit_informal,\n          time_formal = _this$state2.time_formal,\n          time_unit_formal = _this$state2.time_unit_formal,\n          time_simple = _this$state2.time_simple,\n          time_unit_simple = _this$state2.time_unit_simple,\n          time_milestone = _this$state2.time_milestone,\n          time_unit_milestone = _this$state2.time_unit_milestone,\n          editing = _this$state2.editing,\n          dos_fee_amount = _this$state2.dos_fee_amount,\n          eth_address = _this$state2.eth_address,\n          minted_ratio = _this$state2.minted_ratio,\n          op_percentage = _this$state2.op_percentage,\n          pass_rate = _this$state2.pass_rate,\n          quorum_rate = _this$state2.quorum_rate,\n          pass_rate_simple = _this$state2.pass_rate_simple,\n          quorum_rate_simple = _this$state2.quorum_rate_simple,\n          pass_rate_milestone = _this$state2.pass_rate_milestone,\n          quorum_rate_milestone = _this$state2.quorum_rate_milestone,\n          need_to_approve = _this$state2.need_to_approve,\n          autostart_formal_votes = _this$state2.autostart_formal_votes,\n          autoactivate_grants = _this$state2.autoactivate_grants;\n      return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n        id: \"app-global-settings-page\",\n        className: \"app-simple-section\",\n        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n          id: \"app-global-settings-pageHeader\",\n          children: \"Global Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 9\n        }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"form\", {\n          method: \"POST\",\n          action: \"\",\n          onSubmit: this.submit,\n          children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"COO Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"email\",\n                value: coo_email,\n                onChange: function onChange(e) {\n                  return _this2.inputField(e, \"coo_email\");\n                },\n                disabled: !editing,\n                style: {\n                  width: \"250px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"CFO Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"email\",\n                value: cfo_email,\n                onChange: function onChange(e) {\n                  return _this2.inputField(e, \"cfo_email\");\n                },\n                disabled: !editing,\n                style: {\n                  width: \"250px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"President Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"email\",\n                value: president_email,\n                onChange: function onChange(e) {\n                  return _this2.inputField(e, \"president_email\");\n                },\n                disabled: !editing,\n                style: {\n                  width: \"250px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Board Member Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"email\",\n                value: board_member_email,\n                onChange: function onChange(e) {\n                  return _this2.inputField(e, \"board_member_email\");\n                },\n                disabled: !editing,\n                style: {\n                  width: \"250px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Time before OP can accept/deny change\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: time_before_op_do,\n                onChange: function onChange(e) {\n                  return _this2.inputIntField(e, \"time_before_op_do\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 15\n              }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"select\", {\n                value: time_unit_before_op_do,\n                onChange: function onChange(e) {\n                  return _this2.inputField(e, \"time_unit_before_op_do\");\n                },\n                disabled: !editing,\n                children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"option\", {\n                  value: \"\",\n                  children: \"Select...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 17\n                }, this), this.renderTimeUnitOptions()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Does admin need to approve new users?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n                className: \"c-form-check\",\n                onClick: function onClick() {\n                  return _this2.setCheckbox(\"yes\", \"need_to_approve\");\n                },\n                children: [need_to_approve == \"yes\" ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"CheckSquare\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 19\n                }, this) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"Square\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 643,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 15\n              }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n                className: \"c-form-check\",\n                onClick: function onClick() {\n                  return _this2.setCheckbox(\"no\", \"need_to_approve\");\n                },\n                children: [need_to_approve == \"no\" ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"CheckSquare\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 19\n                }, this) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"Square\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Can OP start informal vote (if no, admins must start votes)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n                className: \"c-form-check\",\n                onClick: function onClick() {\n                  return _this2.setCheckbox(\"yes\", \"can_op_start_informal\");\n                },\n                children: [can_op_start_informal == \"yes\" ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"CheckSquare\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 19\n                }, this) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"Square\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 15\n              }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n                className: \"c-form-check\",\n                onClick: function onClick() {\n                  return _this2.setCheckbox(\"no\", \"can_op_start_informal\");\n                },\n                children: [can_op_start_informal == \"no\" ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"CheckSquare\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 679,\n                  columnNumber: 19\n                }, this) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"Square\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Autostart formal votes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n                className: \"c-form-check\",\n                onClick: function onClick() {\n                  return _this2.setCheckbox(\"yes\", \"autostart_formal_votes\");\n                },\n                children: [autostart_formal_votes == \"yes\" ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"CheckSquare\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 697,\n                  columnNumber: 19\n                }, this) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"Square\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 15\n              }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n                className: \"c-form-check\",\n                onClick: function onClick() {\n                  return _this2.setCheckbox(\"no\", \"autostart_formal_votes\");\n                },\n                children: [autostart_formal_votes == \"no\" ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"CheckSquare\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 19\n                }, this) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"Square\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 712,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Autoactivate grants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n                className: \"c-form-check\",\n                onClick: function onClick() {\n                  return _this2.setCheckbox(\"yes\", \"autoactivate_grants\");\n                },\n                children: [autoactivate_grants == \"yes\" ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"CheckSquare\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 19\n                }, this) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"Square\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 15\n              }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n                className: \"c-form-check\",\n                onClick: function onClick() {\n                  return _this2.setCheckbox(\"no\", \"autoactivate_grants\");\n                },\n                children: [autoactivate_grants == \"no\" ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"CheckSquare\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 19\n                }, this) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react_feather__WEBPACK_IMPORTED_MODULE_11__[\"Square\"], {\n                  color: \"#9B64E6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 737,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 739,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Time before OP can start informal vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: time_before_op_informal,\n                onChange: function onChange(e) {\n                  return _this2.inputIntField(e, \"time_before_op_informal\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 15\n              }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"select\", {\n                value: time_unit_before_op_informal,\n                onChange: function onChange(e) {\n                  return _this2.inputField(e, \"time_unit_before_op_informal\");\n                },\n                disabled: !editing,\n                children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"option\", {\n                  value: \"\",\n                  children: \"Select...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 17\n                }, this), this.renderTimeUnitOptions()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Time before OP can start informal simple vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: time_before_op_informal_simple,\n                onChange: function onChange(e) {\n                  return _this2.inputIntField(e, \"time_before_op_informal_simple\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 769,\n                columnNumber: 15\n              }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"select\", {\n                value: time_unit_before_op_informal_simple,\n                onChange: function onChange(e) {\n                  return _this2.inputField(e, \"time_unit_before_op_informal_simple\");\n                },\n                disabled: !editing,\n                children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"option\", {\n                  value: \"\",\n                  children: \"Select...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 17\n                }, this), this.renderTimeUnitOptions()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 768,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Time allowed for informal voting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: time_informal,\n                onChange: function onChange(e) {\n                  return _this2.inputIntField(e, \"time_informal\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 15\n              }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"select\", {\n                value: time_unit_informal,\n                onChange: function onChange(e) {\n                  return _this2.inputField(e, \"time_unit_informal\");\n                },\n                disabled: !editing,\n                children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"option\", {\n                  value: \"\",\n                  children: \"Select...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 803,\n                  columnNumber: 17\n                }, this), this.renderTimeUnitOptions()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 798,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Time allowed for formal voting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: time_formal,\n                onChange: function onChange(e) {\n                  return _this2.inputIntField(e, \"time_formal\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 15\n              }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"select\", {\n                value: time_unit_formal,\n                onChange: function onChange(e) {\n                  return _this2.inputField(e, \"time_unit_formal\");\n                },\n                disabled: !editing,\n                children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"option\", {\n                  value: \"\",\n                  children: \"Select...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 17\n                }, this), this.renderTimeUnitOptions()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Time allowed for simple voting (formal & informal)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: time_simple,\n                onChange: function onChange(e) {\n                  return _this2.inputIntField(e, \"time_simple\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 15\n              }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"select\", {\n                value: time_unit_simple,\n                onChange: function onChange(e) {\n                  return _this2.inputField(e, \"time_unit_simple\");\n                },\n                disabled: !editing,\n                children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"option\", {\n                  value: \"\",\n                  children: \"Select...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 843,\n                  columnNumber: 17\n                }, this), this.renderTimeUnitOptions()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 838,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Time allowed for milestone voting (formal & informal)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 849,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: time_milestone,\n                onChange: function onChange(e) {\n                  return _this2.inputIntField(e, \"time_milestone\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 853,\n                columnNumber: 15\n              }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"select\", {\n                value: time_unit_milestone,\n                onChange: function onChange(e) {\n                  return _this2.inputField(e, \"time_unit_milestone\");\n                },\n                disabled: !editing,\n                children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"option\", {\n                  value: \"\",\n                  children: \"Select...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 864,\n                  columnNumber: 17\n                }, this), this.renderTimeUnitOptions()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 859,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"DOS Fee Amount in \\u20AC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: dos_fee_amount,\n                onChange: function onChange(e) {\n                  return _this2.inputIntField(e, \"dos_fee_amount\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 871,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"ETH Payment Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n                className: \"col-md-6\",\n                children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                  type: \"text\",\n                  style: {\n                    width: \"100%\"\n                  },\n                  value: eth_address,\n                  onChange: function onChange(e) {\n                    return _this2.inputField(e, \"eth_address\");\n                  },\n                  disabled: !editing\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 884,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 882,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Minted Ratio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 895,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: minted_ratio,\n                onChange: function onChange(e) {\n                  return _this2.inputFloat4Field(e, \"minted_ratio\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"OP Percentage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 906,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: op_percentage,\n                onChange: function onChange(e) {\n                  return _this2.inputFloatField(e, \"op_percentage\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 907,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Pass Rate for Grant Proposal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: pass_rate,\n                onChange: function onChange(e) {\n                  return _this2.inputIntField(e, \"pass_rate\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 918,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Quorum Rate for Grant Proposal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: quorum_rate,\n                onChange: function onChange(e) {\n                  return _this2.inputIntField(e, \"quorum_rate\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 930,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Pass Rate for Simple Proposal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: pass_rate_simple,\n                onChange: function onChange(e) {\n                  return _this2.inputIntField(e, \"pass_rate_simple\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 940,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Quorum Rate for Simple Proposal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 950,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: quorum_rate_simple,\n                onChange: function onChange(e) {\n                  return _this2.inputIntField(e, \"quorum_rate_simple\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 952,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Pass Rate for Milestone Proposal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: pass_rate_milestone,\n                onChange: function onChange(e) {\n                  return _this2.inputIntField(e, \"pass_rate_milestone\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 963,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 962,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            className: \"c-form-row\",\n            children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"label\", {\n              children: \"Quorum Rate for Milestone Proposal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 972,\n              columnNumber: 13\n            }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n              children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"input\", {\n                type: \"text\",\n                value: quorum_rate_milestone,\n                onChange: function onChange(e) {\n                  return _this2.inputIntField(e, \"quorum_rate_milestone\");\n                },\n                disabled: !editing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 974,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 973,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 11\n          }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n            id: \"c-button-wrap\",\n            children: !editing ? /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"a\", {\n              className: \"btn btn-primary less-small\",\n              onClick: this.clickEdit,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 985,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(react__WEBPACK_IMPORTED_MODULE_8__[\"Fragment\"], {\n              children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary less-small\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 993,\n                columnNumber: 17\n              }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"button\", {\n                type: \"button\",\n                className: \"btn btn-danger less-small\",\n                onClick: this.clickCancel,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 992,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return GlobalSettings;\n}(react__WEBPACK_IMPORTED_MODULE_8__[\"Component\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_9__[\"connect\"])(mapStateToProps)(Object(react_router_dom__WEBPACK_IMPORTED_MODULE_10__[\"withRouter\"])(GlobalSettings)));\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./views/app/global-settings/GlobalSettings.js\n");

/***/ })

}]);